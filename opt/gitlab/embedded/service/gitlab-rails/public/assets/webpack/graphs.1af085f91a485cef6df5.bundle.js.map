{"version":3,"sources":["webpack:///graphs.1af085f91a485cef6df5.bundle.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./graphs/stat_graph_contributors_util.js","webpack:///./graphs/stat_graph_contributors.js","webpack:///./graphs/graphs_bundle.js","webpack:///./graphs/stat_graph_contributors_graph.js","webpack:////var/cache/omnibus/src/gitlab-rails/vendor/assets/javascripts/Chart.js"],"names":["webpackJsonp","2tW8","module","exports","__webpack_amd_options__","call","5Zgr","__webpack_exports__","__webpack_require__","parse_log","log","by_author","by_email","data","entry","i","len","total","normalized_email","length","date","this","add_date","author_email","toLowerCase","author_name","add_author","store_data","_","toArray","collection","author","store_commits","store_additions","store_deletions","add","field","value","additions","deletions","get_total_data","parsed_log","total_data","pick_field","sortBy","d","each","push","pick","get_author_data","date_range","author_data","_this","log_entry","parsed_log_entry","parse_log_entry","isEmpty","dates","reverse","parsed_entry","commits","omit","key","in_range","ref","Date","HIFr","$","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_0_d3___default","n","__WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__","__WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__","ContributorsStatGraph","prototype","init","author_commits","total_commits","set_current_field","add_master_graph","add_authors_graph","change_date_header","master_graph","draw","limited_author_data","authors","slice","author_graph","author_header","create_author_header","append","format_author_commit_info","class","text","author_commit_info","author_commit_info_span","list_item","style","html","redraw_master","set_data","redraw","redraw_authors","x_domain","redraw_author_commit_info","appendTo","print","print_date_format","a","time","format","author_list_item","find","Jktd","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0_vendor_Chart__","__WEBPACK_IMPORTED_MODULE_0_vendor_Chart___default","__WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors__","window","Chart","U+v5","ContributorsGraph","ContributorsMasterGraph","ContributorsAuthorGraph","bind","fn","me","apply","arguments","extend","child","parent","ctor","constructor","hasProp","__super__","hasOwnProperty","MARGIN","top","right","bottom","left","y_domain","set_x_domain","set_y_domain","max","init_x_domain","extent","init_y_domain","init_domain","set_dates","x","domain","y","set_domain","create_scale","width","height","scale","range","clamp","linear","nice","draw_x_axis","svg","attr","x_axis","draw_y_axis","y_axis","superClass","data1","update_content","area","brush","x_max_domain","process_dates","get_dates","parse_dates","pluck","parseDate","parse","forEach","create_axes","axis","orient","ticks","create_svg","select","create_area","y0","y1","interpolate","create_brush","on","draw_path","datum","add_brush","selectAll","empty","trigger","pop","syvU","__WEBPACK_AMD_DEFINE_RESULT__","root","previous","context","canvas","ctx","computeDimension","element","dimension","document","defaultView","getComputedStyle","getPropertyValue","aspectRatio","helpers","retinaScale","defaults","global","animation","animationSteps","animationEasing","showScale","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","scaleLineColor","scaleLineWidth","scaleShowLabels","scaleLabel","scaleIntegersOnly","scaleBeginAtZero","scaleFontFamily","scaleFontSize","scaleFontStyle","scaleFontColor","responsive","maintainAspectRatio","showTooltips","customTooltips","tooltipEvents","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","tooltipTemplate","multiTooltipTemplate","multiTooltipKeyBackground","onAnimationProgress","onAnimationComplete","types","loopable","callback","self","additionalArgs","Array","concat","item","clone","obj","objClone","base","extensionObject","merge","master","args","unshift","indexOf","arrayToSearch","inherits","where","filterCallback","filtered","findNextWhere","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","Surrogate","noop","uid","id","warn","str","console","amd","isNumber","isNaN","parseFloat","isFinite","array","Math","min","getDecimalPlaces","cap","valueToCap","maxValue","minValue","num","toString","split","toRadians","radians","degrees","PI","aliasPixel","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","pixelWidth","calculateOrderOfMagnitude","splineCurve","FirstPoint","MiddlePoint","AfterPoint","t","d01","pow","d12","fa","fb","inner","outer","val","floor","LN10","template","calculateScaleRange","valuesArray","drawingSize","textSize","startFromZero","integersOnly","minSteps","maxSteps","skipFitting","valueRange","abs","rangeOrderOfMagnitude","graphMax","ceil","graphMin","graphRange","stepValue","numberOfSteps","round","steps","templateString","valuesObject","tmpl","test","Function","replace","join","cache","easingEffects","generateLabels","labelsArray","labelTemplateString","index","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","p","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","addEvent","animationLoop","totalSteps","easingString","onProgress","onComplete","chartInstance","currentStep","easingFunction","animationFrame","stepDecimal","easeDecimal","getRelativePosition","evt","mouseX","mouseY","e","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","node","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","unbindEvents","bindEvents","arrayOfEvents","events","eventName","chart","getMaximumWidth","domNode","container","parentNode","clientWidth","getMaximumHeight","clientHeight","getMaximumSize","devicePixelRatio","clear","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","longest","string","textWidth","measureText","drawRoundedRectangle","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","instances","Type","options","resize","initialize","stop","newWidth","newHeight","reflow","render","generateLegend","legendTemplate","destroy","removeProperty","removeAttribute","showTooltip","ChartElements","forceRedraw","activeElements","isChanged","Elements","changed","datasets","dataArray","dataIndex","points","bars","segments","tooltipLabels","tooltipColors","medianPosition","dataCollection","xMax","yMax","xMin","yMin","xPositions","yPositions","dataset","hasValue","fill","_saved","fillColor","stroke","strokeColor","MultiTooltip","xPadding","yPadding","xOffset","textColor","fontSize","titleTextColor","titleFontFamily","titleFontStyle","titleFontSize","cornerRadius","labels","legendColors","legendColorBackground","title","label","custom","Element","tooltipPosition","Tooltip","caretHeight","toBase64Image","toDataURL","ChartType","name","chartName","baseDefaults","config","configuration","save","restore","props","update","newProps","transition","ease","Point","display","inRange","chartX","chartY","hitDetectionRange","hitDetectionRadius","arc","strokeStyle","lineWidth","strokeWidth","fillStyle","Arc","pointRelativePosition","betweenAngles","startAngle","endAngle","withinRadius","innerRadius","outerRadius","centreAngle","rangeFromCentre","animationPercent","lineJoin","showStroke","Rectangle","halfWidth","leftX","rightX","halfStroke","xAlign","yAlign","caretPadding","tooltipWidth","tooltipRectHeight","tooltipHeight","tooltipX","tooltipY","textAlign","textBaseline","fillText","titleFont","titleWidth","labelWidth","longestTextWidth","halfHeight","getLineHeight","baseLineHeight","afterTitleIndex","fillRect","Scale","fit","buildYLabels","yLabels","stepDecimalPlaces","toFixed","yLabelWidth","showLabels","addXLabel","xLabels","valuesCount","removeXLabel","shift","startPoint","endPoint","padding","cachedYLabelWidth","cachedHeight","calculateYRange","calculateXLabelRotation","firstRotated","lastRotated","firstWidth","lastWidth","xScalePaddingRight","xScalePaddingLeft","xLabelRotation","cosRotation","originalLabelWidth","xLabelWidth","xGridWidth","calculateX","drawingArea","calculateY","scalingFactor","innerWidth","valueWidth","valueOffset","offsetGridLines","yLabelGap","xStart","labelString","yLabelCenter","linePositionY","drawHorizontalLine","showHorizontalLines","gridLineWidth","gridLineColor","lineColor","xPos","linePos","isRotated","drawVerticalLine","showVerticalLines","translate","rotate","RadialScale","size","backdropPaddingY","calculateCenterOffset","lineArc","setScaleSize","getCircumference","pointPosition","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","largestPossibleRadius","pointLabelFontSize","furthestRight","furthestLeft","pointLabelFontStyle","pointLabelFontFamily","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","xCenter","yCenter","angleMultiplier","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","fontColor","angleLineWidth","angleLineColor","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","timeout","instance","undefined","noConflict","defaultConfig","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","barShowStroke","barStrokeWidth","barValueSpacing","barDatasetSpacing","ScaleClass","calculateBarX","datasetCount","datasetIndex","barIndex","xWidth","calculateBaseWidth","xAbsolute","barWidth","calculateBarWidth","baseWidth","activeBars","type","getBarsAtEvent","eachBars","bar","activeBar","highlightFill","highlightStroke","BarClass","datasetObject","dataPoint","datasetLabel","buildScale","activeElement","barsArray","eventPosition","datasetIterator","dataTotal","values","scaleOptions","beginAtZero","currentHeight","updatedRanges","addData","removeData","newScaleProps","easingDecimal","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animateRotate","animateScale","SegmentArc","activeSegments","getSegmentsAtEvent","segment","activeSegment","highlightColor","calculateTotal","datapoint","segmentsArray","location","atIndex","silent","splice","color","highlight","circumference","calculateCircumference","indexToDelete","animDecimal","Doughnut","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","PointClass","activePoints","getPointsAtEvent","eachPoints","point","activePoint","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointsArray","nextPoint","previousPoint","pointsWithValues","tension","controlPoints","bezierCurveTo","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackdropPaddingY","scaleBackdropPaddingX","scaleShowLine","updateScaleRange","datapoints","scaleSizes","angleShowLineOut","activePointsCollection","mousePosition","fromCenter","anglePerIndex","pointIndex","totalDataArray"],"mappings":"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","file":"graphs.1af085f91a485cef6df5.bundle.js","sourcesContent":["webpackJsonp([12,25,26],{\n\n/***/ \"2tW8\":\n/***/ (function(module, exports) {\n\n/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }),\n\n/***/ \"5Zgr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* eslint-disable func-names, space-before-function-paren, object-shorthand, no-var, one-var, camelcase, one-var-declaration-per-line, comma-dangle, no-param-reassign, no-return-assign, quotes, prefer-arrow-callback, wrap-iife, consistent-return, no-unused-vars, max-len, no-cond-assign, no-else-return, max-len */\n\n/* harmony default export */ __webpack_exports__[\"a\"] = {\n  parse_log: function parse_log(log) {\n    var by_author, by_email, data, entry, i, len, total, normalized_email;\n    total = {};\n    by_author = {};\n    by_email = {};\n    for (i = 0, len = log.length; i < len; i += 1) {\n      entry = log[i];\n      if (total[entry.date] == null) {\n        this.add_date(entry.date, total);\n      }\n      normalized_email = entry.author_email.toLowerCase();\n      data = by_author[entry.author_name] || by_email[normalized_email];\n      if (data == null) {\n        data = this.add_author(entry, by_author, by_email);\n      }\n      if (!data[entry.date]) {\n        this.add_date(entry.date, data);\n      }\n      this.store_data(entry, total[entry.date], data[entry.date]);\n    }\n    total = _.toArray(total);\n    by_author = _.toArray(by_author);\n    return {\n      total: total,\n      by_author: by_author\n    };\n  },\n  add_date: function add_date(date, collection) {\n    collection[date] = {};\n    return collection[date].date = date;\n  },\n  add_author: function add_author(author, by_author, by_email) {\n    var data, normalized_email;\n    data = {};\n    data.author_name = author.author_name;\n    data.author_email = author.author_email;\n    normalized_email = author.author_email.toLowerCase();\n    by_author[author.author_name] = data;\n    by_email[normalized_email] = data;\n    return data;\n  },\n  store_data: function store_data(entry, total, by_author) {\n    this.store_commits(total, by_author);\n    this.store_additions(entry, total, by_author);\n    return this.store_deletions(entry, total, by_author);\n  },\n  store_commits: function store_commits(total, by_author) {\n    this.add(total, \"commits\", 1);\n    return this.add(by_author, \"commits\", 1);\n  },\n  add: function add(collection, field, value) {\n    if (collection[field] == null) {\n      collection[field] = 0;\n    }\n    return collection[field] += value;\n  },\n  store_additions: function store_additions(entry, total, by_author) {\n    if (entry.additions == null) {\n      entry.additions = 0;\n    }\n    this.add(total, \"additions\", entry.additions);\n    return this.add(by_author, \"additions\", entry.additions);\n  },\n  store_deletions: function store_deletions(entry, total, by_author) {\n    if (entry.deletions == null) {\n      entry.deletions = 0;\n    }\n    this.add(total, \"deletions\", entry.deletions);\n    return this.add(by_author, \"deletions\", entry.deletions);\n  },\n  get_total_data: function get_total_data(parsed_log, field) {\n    var log, total_data;\n    log = parsed_log.total;\n    total_data = this.pick_field(log, field);\n    return _.sortBy(total_data, function (d) {\n      return d.date;\n    });\n  },\n  pick_field: function pick_field(log, field) {\n    var total_data;\n    total_data = [];\n    _.each(log, function (d) {\n      return total_data.push(_.pick(d, [field, 'date']));\n    });\n    return total_data;\n  },\n  get_author_data: function get_author_data(parsed_log, field, date_range) {\n    var author_data, log;\n    if (date_range == null) {\n      date_range = null;\n    }\n    log = parsed_log.by_author;\n    author_data = [];\n    _.each(log, function (_this) {\n      return function (log_entry) {\n        var parsed_log_entry;\n        parsed_log_entry = _this.parse_log_entry(log_entry, field, date_range);\n        if (!_.isEmpty(parsed_log_entry.dates)) {\n          return author_data.push(parsed_log_entry);\n        }\n      };\n    }(this));\n    return _.sortBy(author_data, function (d) {\n      return d[field];\n    }).reverse();\n  },\n  parse_log_entry: function parse_log_entry(log_entry, field, date_range) {\n    var parsed_entry;\n    parsed_entry = {};\n    parsed_entry.author_name = log_entry.author_name;\n    parsed_entry.author_email = log_entry.author_email;\n    parsed_entry.dates = {};\n    parsed_entry.commits = parsed_entry.additions = parsed_entry.deletions = 0;\n    _.each(_.omit(log_entry, 'author_name', 'author_email'), function (_this) {\n      return function (value, key) {\n        if (_this.in_range(value.date, date_range)) {\n          parsed_entry.dates[value.date] = value[field];\n          parsed_entry.commits += value.commits;\n          parsed_entry.additions += value.additions;\n          return parsed_entry.deletions += value.deletions;\n        }\n      };\n    }(this));\n    return parsed_entry;\n  },\n  in_range: function in_range(date, date_range) {\n    var ref;\n    if (date_range === null || date_range[0] <= (ref = new Date(date)) && ref <= date_range[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"HIFr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(\"+3IL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__ = __webpack_require__(\"U+v5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__ = __webpack_require__(\"5Zgr\");\n/* eslint-disable func-names, space-before-function-paren, wrap-iife, no-var, one-var, camelcase, one-var-declaration-per-line, quotes, no-param-reassign, quote-props, comma-dangle, prefer-template, max-len, no-return-assign, no-shadow */\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  function ContributorsStatGraph() {}\n\n  ContributorsStatGraph.prototype.init = function (log) {\n    var author_commits, total_commits;\n    this.parsed_log = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].parse_log(log);\n    this.set_current_field(\"commits\");\n    total_commits = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_total_data(this.parsed_log, this.field);\n    author_commits = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_author_data(this.parsed_log, this.field);\n    this.add_master_graph(total_commits);\n    this.add_authors_graph(author_commits);\n    return this.change_date_header();\n  };\n\n  ContributorsStatGraph.prototype.add_master_graph = function (total_data) {\n    this.master_graph = new __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"a\" /* ContributorsMasterGraph */](total_data);\n    return this.master_graph.draw();\n  };\n\n  ContributorsStatGraph.prototype.add_authors_graph = function (author_data) {\n    var limited_author_data;\n    this.authors = [];\n    limited_author_data = author_data.slice(0, 100);\n    return _.each(limited_author_data, function (_this) {\n      return function (d) {\n        var author_graph, author_header;\n        author_header = _this.create_author_header(d);\n        $(\".contributors-list\").append(author_header);\n        _this.authors[d.author_name] = author_graph = new __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"b\" /* ContributorsAuthorGraph */](d.dates);\n        return author_graph.draw();\n      };\n    }(this));\n  };\n\n  ContributorsStatGraph.prototype.format_author_commit_info = function (author) {\n    var commits;\n    commits = $('<span/>', {\n      \"class\": 'graph-author-commits-count'\n    });\n    commits.text(author.commits + \" commits\");\n    return $('<span/>').append(commits);\n  };\n\n  ContributorsStatGraph.prototype.create_author_header = function (author) {\n    var author_commit_info, author_commit_info_span, author_email, author_name, list_item;\n    list_item = $('<li/>', {\n      \"class\": 'person',\n      style: 'display: block;'\n    });\n    author_name = $('<h4>' + author.author_name + '</h4>');\n    author_email = $('<p class=\"graph-author-email\">' + author.author_email + '</p>');\n    author_commit_info_span = $('<span/>', {\n      \"class\": 'commits'\n    });\n    author_commit_info = this.format_author_commit_info(author);\n    author_commit_info_span.html(author_commit_info);\n    list_item.append(author_name);\n    list_item.append(author_email);\n    list_item.append(author_commit_info_span);\n    return list_item;\n  };\n\n  ContributorsStatGraph.prototype.redraw_master = function () {\n    var total_data;\n    total_data = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_total_data(this.parsed_log, this.field);\n    this.master_graph.set_data(total_data);\n    return this.master_graph.redraw();\n  };\n\n  ContributorsStatGraph.prototype.redraw_authors = function () {\n    var author_commits, x_domain;\n    $(\"ol\").html(\"\");\n    x_domain = __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"c\" /* ContributorsGraph */].prototype.x_domain;\n    author_commits = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_author_data(this.parsed_log, this.field, x_domain);\n    return _.each(author_commits, function (_this) {\n      return function (d) {\n        _this.redraw_author_commit_info(d);\n        $(_this.authors[d.author_name].list_item).appendTo(\"ol\");\n        _this.authors[d.author_name].set_data(d.dates);\n        return _this.authors[d.author_name].redraw();\n      };\n    }(this));\n  };\n\n  ContributorsStatGraph.prototype.set_current_field = function (field) {\n    return this.field = field;\n  };\n\n  ContributorsStatGraph.prototype.change_date_header = function () {\n    var print, print_date_format, x_domain;\n    x_domain = __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"c\" /* ContributorsGraph */].prototype.x_domain;\n    print_date_format = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.format(\"%B %e %Y\");\n    print = print_date_format(x_domain[0]) + \" - \" + print_date_format(x_domain[1]);\n    return $(\"#date_header\").text(print);\n  };\n\n  ContributorsStatGraph.prototype.redraw_author_commit_info = function (author) {\n    var author_commit_info, author_list_item;\n    author_list_item = $(this.authors[author.author_name].list_item);\n    author_commit_info = this.format_author_commit_info(author);\n    return author_list_item.find(\"span\").html(author_commit_info);\n  };\n\n  return ContributorsStatGraph;\n})();\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"Jktd\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vendor_Chart__ = __webpack_require__(\"syvU\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vendor_Chart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vendor_Chart__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors__ = __webpack_require__(\"HIFr\");\n\n\n\n// export to global scope\nwindow.Chart = __WEBPACK_IMPORTED_MODULE_0_vendor_Chart___default.a;\nwindow.ContributorsStatGraph = __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors__[\"a\" /* default */];\n\n/***/ }),\n\n/***/ \"U+v5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(\"+3IL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return ContributorsGraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ContributorsMasterGraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ContributorsAuthorGraph; });\n/* eslint-disable func-names, space-before-function-paren, no-var, prefer-rest-params, max-len, no-restricted-syntax, vars-on-top, no-use-before-define, no-param-reassign, new-cap, no-underscore-dangle, wrap-iife, comma-dangle, no-return-assign, prefer-arrow-callback, quotes, prefer-template, newline-per-chained-call, no-else-return, no-shadow */\n\n\n\nvar bind = function bind(fn, me) {\n  return function () {\n    return fn.apply(me, arguments);\n  };\n};\nvar extend = function extend(child, parent) {\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }function ctor() {\n    this.constructor = child;\n  }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;\n};\nvar hasProp = {}.hasOwnProperty;\n\nvar ContributorsGraph = function () {\n  function ContributorsGraph() {}\n\n  ContributorsGraph.prototype.MARGIN = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 50\n  };\n\n  ContributorsGraph.prototype.x_domain = null;\n\n  ContributorsGraph.prototype.y_domain = null;\n\n  ContributorsGraph.prototype.dates = [];\n\n  ContributorsGraph.set_x_domain = function (data) {\n    return ContributorsGraph.prototype.x_domain = data;\n  };\n\n  ContributorsGraph.set_y_domain = function (data) {\n    return ContributorsGraph.prototype.y_domain = [0, __WEBPACK_IMPORTED_MODULE_0_d3___default.a.max(data, function (d) {\n      return d.commits = d.commits || d.additions || d.deletions;\n    })];\n  };\n\n  ContributorsGraph.init_x_domain = function (data) {\n    return ContributorsGraph.prototype.x_domain = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.extent(data, function (d) {\n      return d.date;\n    });\n  };\n\n  ContributorsGraph.init_y_domain = function (data) {\n    return ContributorsGraph.prototype.y_domain = [0, __WEBPACK_IMPORTED_MODULE_0_d3___default.a.max(data, function (d) {\n      return d.commits = d.commits || d.additions || d.deletions;\n    })];\n  };\n\n  ContributorsGraph.init_domain = function (data) {\n    ContributorsGraph.init_x_domain(data);\n    return ContributorsGraph.init_y_domain(data);\n  };\n\n  ContributorsGraph.set_dates = function (data) {\n    return ContributorsGraph.prototype.dates = data;\n  };\n\n  ContributorsGraph.prototype.set_x_domain = function () {\n    return this.x.domain(this.x_domain);\n  };\n\n  ContributorsGraph.prototype.set_y_domain = function () {\n    return this.y.domain(this.y_domain);\n  };\n\n  ContributorsGraph.prototype.set_domain = function () {\n    this.set_x_domain();\n    return this.set_y_domain();\n  };\n\n  ContributorsGraph.prototype.create_scale = function (width, height) {\n    this.x = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.scale().range([0, width]).clamp(true);\n    return this.y = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.scale.linear().range([height, 0]).nice();\n  };\n\n  ContributorsGraph.prototype.draw_x_axis = function () {\n    return this.svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0, \" + this.height + \")\").call(this.x_axis);\n  };\n\n  ContributorsGraph.prototype.draw_y_axis = function () {\n    return this.svg.append(\"g\").attr(\"class\", \"y axis\").call(this.y_axis);\n  };\n\n  ContributorsGraph.prototype.set_data = function (data) {\n    return this.data = data;\n  };\n\n  return ContributorsGraph;\n}();\n\nvar ContributorsMasterGraph = function (superClass) {\n  extend(ContributorsMasterGraph, superClass);\n\n  function ContributorsMasterGraph(data1) {\n    this.data = data1;\n    this.update_content = bind(this.update_content, this);\n    this.width = $('.content').width() - 70;\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.brush = null;\n    this.x_max_domain = null;\n  }\n\n  ContributorsMasterGraph.prototype.process_dates = function (data) {\n    var dates;\n    dates = this.get_dates(data);\n    this.parse_dates(data);\n    return ContributorsGraph.set_dates(dates);\n  };\n\n  ContributorsMasterGraph.prototype.get_dates = function (data) {\n    return _.pluck(data, 'date');\n  };\n\n  ContributorsMasterGraph.prototype.parse_dates = function (data) {\n    var parseDate;\n    parseDate = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.format(\"%Y-%m-%d\").parse;\n    return data.forEach(function (d) {\n      return d.date = parseDate(d.date);\n    });\n  };\n\n  ContributorsMasterGraph.prototype.create_scale = function () {\n    return ContributorsMasterGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsMasterGraph.prototype.create_axes = function () {\n    this.x_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.x).orient(\"bottom\");\n    return this.y_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsMasterGraph.prototype.create_svg = function () {\n    return this.svg = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(\"#contributors-master\").append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"tint-box\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsMasterGraph.prototype.create_area = function (x, y) {\n    return this.area = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.area().x(function (d) {\n      return x(d.date);\n    }).y0(this.height).y1(function (d) {\n      d.commits = d.commits || d.additions || d.deletions;\n      return y(d.commits);\n    }).interpolate(\"basis\");\n  };\n\n  ContributorsMasterGraph.prototype.create_brush = function () {\n    return this.brush = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.brush().x(this.x).on(\"brushend\", this.update_content);\n  };\n\n  ContributorsMasterGraph.prototype.draw_path = function (data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area\").attr(\"d\", this.area);\n  };\n\n  ContributorsMasterGraph.prototype.add_brush = function () {\n    return this.svg.append(\"g\").attr(\"class\", \"selection\").call(this.brush).selectAll(\"rect\").attr(\"height\", this.height);\n  };\n\n  ContributorsMasterGraph.prototype.update_content = function () {\n    ContributorsGraph.set_x_domain(this.brush.empty() ? this.x_max_domain : this.brush.extent());\n    return $(\"#brush_change\").trigger('change');\n  };\n\n  ContributorsMasterGraph.prototype.draw = function () {\n    this.process_dates(this.data);\n    this.create_scale();\n    this.create_axes();\n    ContributorsGraph.init_domain(this.data);\n    this.x_max_domain = this.x_domain;\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.create_brush();\n    this.draw_path(this.data);\n    this.draw_x_axis();\n    this.draw_y_axis();\n    return this.add_brush();\n  };\n\n  ContributorsMasterGraph.prototype.redraw = function () {\n    this.process_dates(this.data);\n    ContributorsGraph.set_y_domain(this.data);\n    this.set_y_domain();\n    this.svg.select(\"path\").datum(this.data);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsMasterGraph;\n}(ContributorsGraph);\n\nvar ContributorsAuthorGraph = function (superClass) {\n  extend(ContributorsAuthorGraph, superClass);\n\n  function ContributorsAuthorGraph(data1) {\n    this.data = data1;\n    // Don't split graph size in half for mobile devices.\n    if ($(window).width() < 768) {\n      this.width = $('.content').width() - 80;\n    } else {\n      this.width = $('.content').width() / 2 - 100;\n    }\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.list_item = null;\n  }\n\n  ContributorsAuthorGraph.prototype.create_scale = function () {\n    return ContributorsAuthorGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsAuthorGraph.prototype.create_axes = function () {\n    this.x_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.x).orient(\"bottom\").ticks(8);\n    return this.y_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsAuthorGraph.prototype.create_area = function (x, y) {\n    return this.area = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.area().x(function (d) {\n      var parseDate;\n      parseDate = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.format(\"%Y-%m-%d\").parse;\n      return x(parseDate(d));\n    }).y0(this.height).y1(function (_this) {\n      return function (d) {\n        if (_this.data[d] != null) {\n          return y(_this.data[d]);\n        } else {\n          return y(0);\n        }\n      };\n    }(this)).interpolate(\"basis\");\n  };\n\n  ContributorsAuthorGraph.prototype.create_svg = function () {\n    this.list_item = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.selectAll(\".person\")[0].pop();\n    return this.svg = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(this.list_item).append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"spark\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsAuthorGraph.prototype.draw_path = function (data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area-contributor\").attr(\"d\", this.area);\n  };\n\n  ContributorsAuthorGraph.prototype.draw = function () {\n    this.create_scale();\n    this.create_axes();\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.draw_path(this.dates);\n    this.draw_x_axis();\n    return this.draw_y_axis();\n  };\n\n  ContributorsAuthorGraph.prototype.redraw = function () {\n    this.set_domain();\n    this.svg.select(\"path\").datum(this.dates);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    this.svg.select(\".x.axis\").call(this.x_axis);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsAuthorGraph;\n}(ContributorsGraph);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"syvU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.0.2\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t}\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width');\n\t\tvar height = this.height = computeDimension(context.canvas,'Height');\n\n\t\t// Firefox requires this to work correctly\n\t\tcontext.canvas.width  = width;\n\t\tcontext.canvas.height = height;\n\n\t\tvar width = this.width = context.canvas.width;\n\t\tvar height = this.height = context.canvas.height;\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)) objClone[key] = value;\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)) base[key] = value;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn == \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (\"function\" == 'function' && __webpack_require__(\"2tW8\")),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\treturn num.toString().split(\".\")[1].length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\tvar maxValue = max(valuesArray),\n\t\t\t\tminValue = min(valuesArray);\n\n\t\t\t// We need some degree of seperation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (labelTemplateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t;\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t;\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif (t === 1) return 1;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1) return t;\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1 / 2) == 2) return 1;\n\t\t\t\tif (!p) p = 1 * (0.3 * 1.5);\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\tif (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2) return easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientWidth;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientHeight;\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tcancelAnimFrame(this.animationFrame);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\thelpers.animationLoop(\n\t\t\t\t\tthis.draw,\n\t\t\t\t\tthis.options.animationSteps,\n\t\t\t\t\tthis.options.animationEasing,\n\t\t\t\t\tthis.options.onAnimationProgress,\n\t\t\t\t\tthis.options.onAnimationComplete,\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn template(this.options.legendTemplate,this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: ChartElements[0].label,\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n\t\t\t\twithinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius, this.startAngle, this.endAngle);\n\n\t\t\tctx.arc(this.x, this.y, this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleFontSize *1.5;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleFontSize/2;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize*1.5*afterTitleIndex) + this.fontSize/2) + this.titleFontSize * 1.5;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth + 10) ? firstWidth/2 : this.yLabelWidth + 10;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth + 8){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (this.angleLineWidth > 0){\n\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max));\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t\t\treturn Chart;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : dataset.highlightFill || dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : dataset.highlightStroke || dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value){\n\t\t\treturn (Math.PI*2)*(Math.abs(value) / this.total);\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a seperate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tctx.stroke();\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segement.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tctx.fill();\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n\n/***/ })\n\n},[\"Jktd\"]);\n\n\n// WEBPACK FOOTER //\n// graphs.1af085f91a485cef6df5.bundle.js","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 2tW8\n// module chunks = 12","/* eslint-disable func-names, space-before-function-paren, object-shorthand, no-var, one-var, camelcase, one-var-declaration-per-line, comma-dangle, no-param-reassign, no-return-assign, quotes, prefer-arrow-callback, wrap-iife, consistent-return, no-unused-vars, max-len, no-cond-assign, no-else-return, max-len */\n\nexport default {\n  parse_log: function(log) {\n    var by_author, by_email, data, entry, i, len, total, normalized_email;\n    total = {};\n    by_author = {};\n    by_email = {};\n    for (i = 0, len = log.length; i < len; i += 1) {\n      entry = log[i];\n      if (total[entry.date] == null) {\n        this.add_date(entry.date, total);\n      }\n      normalized_email = entry.author_email.toLowerCase();\n      data = by_author[entry.author_name] || by_email[normalized_email];\n      if (data == null) {\n        data = this.add_author(entry, by_author, by_email);\n      }\n      if (!data[entry.date]) {\n        this.add_date(entry.date, data);\n      }\n      this.store_data(entry, total[entry.date], data[entry.date]);\n    }\n    total = _.toArray(total);\n    by_author = _.toArray(by_author);\n    return {\n      total: total,\n      by_author: by_author\n    };\n  },\n  add_date: function(date, collection) {\n    collection[date] = {};\n    return collection[date].date = date;\n  },\n  add_author: function(author, by_author, by_email) {\n    var data, normalized_email;\n    data = {};\n    data.author_name = author.author_name;\n    data.author_email = author.author_email;\n    normalized_email = author.author_email.toLowerCase();\n    by_author[author.author_name] = data;\n    by_email[normalized_email] = data;\n    return data;\n  },\n  store_data: function(entry, total, by_author) {\n    this.store_commits(total, by_author);\n    this.store_additions(entry, total, by_author);\n    return this.store_deletions(entry, total, by_author);\n  },\n  store_commits: function(total, by_author) {\n    this.add(total, \"commits\", 1);\n    return this.add(by_author, \"commits\", 1);\n  },\n  add: function(collection, field, value) {\n    if (collection[field] == null) {\n      collection[field] = 0;\n    }\n    return collection[field] += value;\n  },\n  store_additions: function(entry, total, by_author) {\n    if (entry.additions == null) {\n      entry.additions = 0;\n    }\n    this.add(total, \"additions\", entry.additions);\n    return this.add(by_author, \"additions\", entry.additions);\n  },\n  store_deletions: function(entry, total, by_author) {\n    if (entry.deletions == null) {\n      entry.deletions = 0;\n    }\n    this.add(total, \"deletions\", entry.deletions);\n    return this.add(by_author, \"deletions\", entry.deletions);\n  },\n  get_total_data: function(parsed_log, field) {\n    var log, total_data;\n    log = parsed_log.total;\n    total_data = this.pick_field(log, field);\n    return _.sortBy(total_data, function(d) {\n      return d.date;\n    });\n  },\n  pick_field: function(log, field) {\n    var total_data;\n    total_data = [];\n    _.each(log, function(d) {\n      return total_data.push(_.pick(d, [field, 'date']));\n    });\n    return total_data;\n  },\n  get_author_data: function(parsed_log, field, date_range) {\n    var author_data, log;\n    if (date_range == null) {\n      date_range = null;\n    }\n    log = parsed_log.by_author;\n    author_data = [];\n    _.each(log, (function(_this) {\n      return function(log_entry) {\n        var parsed_log_entry;\n        parsed_log_entry = _this.parse_log_entry(log_entry, field, date_range);\n        if (!_.isEmpty(parsed_log_entry.dates)) {\n          return author_data.push(parsed_log_entry);\n        }\n      };\n    })(this));\n    return _.sortBy(author_data, function(d) {\n      return d[field];\n    }).reverse();\n  },\n  parse_log_entry: function(log_entry, field, date_range) {\n    var parsed_entry;\n    parsed_entry = {};\n    parsed_entry.author_name = log_entry.author_name;\n    parsed_entry.author_email = log_entry.author_email;\n    parsed_entry.dates = {};\n    parsed_entry.commits = parsed_entry.additions = parsed_entry.deletions = 0;\n    _.each(_.omit(log_entry, 'author_name', 'author_email'), (function(_this) {\n      return function(value, key) {\n        if (_this.in_range(value.date, date_range)) {\n          parsed_entry.dates[value.date] = value[field];\n          parsed_entry.commits += value.commits;\n          parsed_entry.additions += value.additions;\n          return parsed_entry.deletions += value.deletions;\n        }\n      };\n    })(this));\n    return parsed_entry;\n  },\n  in_range: function(date, date_range) {\n    var ref;\n    if (date_range === null || (date_range[0] <= (ref = new Date(date)) && ref <= date_range[1])) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/stat_graph_contributors_util.js","/* eslint-disable func-names, space-before-function-paren, wrap-iife, no-var, one-var, camelcase, one-var-declaration-per-line, quotes, no-param-reassign, quote-props, comma-dangle, prefer-template, max-len, no-return-assign, no-shadow */\n\nimport d3 from 'd3';\nimport { ContributorsGraph, ContributorsAuthorGraph, ContributorsMasterGraph } from './stat_graph_contributors_graph';\nimport ContributorsStatGraphUtil from './stat_graph_contributors_util';\n\nexport default (function() {\n  function ContributorsStatGraph() {}\n\n  ContributorsStatGraph.prototype.init = function(log) {\n    var author_commits, total_commits;\n    this.parsed_log = ContributorsStatGraphUtil.parse_log(log);\n    this.set_current_field(\"commits\");\n    total_commits = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field);\n    author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field);\n    this.add_master_graph(total_commits);\n    this.add_authors_graph(author_commits);\n    return this.change_date_header();\n  };\n\n  ContributorsStatGraph.prototype.add_master_graph = function(total_data) {\n    this.master_graph = new ContributorsMasterGraph(total_data);\n    return this.master_graph.draw();\n  };\n\n  ContributorsStatGraph.prototype.add_authors_graph = function(author_data) {\n    var limited_author_data;\n    this.authors = [];\n    limited_author_data = author_data.slice(0, 100);\n    return _.each(limited_author_data, (function(_this) {\n      return function(d) {\n        var author_graph, author_header;\n        author_header = _this.create_author_header(d);\n        $(\".contributors-list\").append(author_header);\n        _this.authors[d.author_name] = author_graph = new ContributorsAuthorGraph(d.dates);\n        return author_graph.draw();\n      };\n    })(this));\n  };\n\n  ContributorsStatGraph.prototype.format_author_commit_info = function(author) {\n    var commits;\n    commits = $('<span/>', {\n      \"class\": 'graph-author-commits-count'\n    });\n    commits.text(author.commits + \" commits\");\n    return $('<span/>').append(commits);\n  };\n\n  ContributorsStatGraph.prototype.create_author_header = function(author) {\n    var author_commit_info, author_commit_info_span, author_email, author_name, list_item;\n    list_item = $('<li/>', {\n      \"class\": 'person',\n      style: 'display: block;'\n    });\n    author_name = $('<h4>' + author.author_name + '</h4>');\n    author_email = $('<p class=\"graph-author-email\">' + author.author_email + '</p>');\n    author_commit_info_span = $('<span/>', {\n      \"class\": 'commits'\n    });\n    author_commit_info = this.format_author_commit_info(author);\n    author_commit_info_span.html(author_commit_info);\n    list_item.append(author_name);\n    list_item.append(author_email);\n    list_item.append(author_commit_info_span);\n    return list_item;\n  };\n\n  ContributorsStatGraph.prototype.redraw_master = function() {\n    var total_data;\n    total_data = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field);\n    this.master_graph.set_data(total_data);\n    return this.master_graph.redraw();\n  };\n\n  ContributorsStatGraph.prototype.redraw_authors = function() {\n    var author_commits, x_domain;\n    $(\"ol\").html(\"\");\n    x_domain = ContributorsGraph.prototype.x_domain;\n    author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field, x_domain);\n    return _.each(author_commits, (function(_this) {\n      return function(d) {\n        _this.redraw_author_commit_info(d);\n        $(_this.authors[d.author_name].list_item).appendTo(\"ol\");\n        _this.authors[d.author_name].set_data(d.dates);\n        return _this.authors[d.author_name].redraw();\n      };\n    })(this));\n  };\n\n  ContributorsStatGraph.prototype.set_current_field = function(field) {\n    return this.field = field;\n  };\n\n  ContributorsStatGraph.prototype.change_date_header = function() {\n    var print, print_date_format, x_domain;\n    x_domain = ContributorsGraph.prototype.x_domain;\n    print_date_format = d3.time.format(\"%B %e %Y\");\n    print = print_date_format(x_domain[0]) + \" - \" + print_date_format(x_domain[1]);\n    return $(\"#date_header\").text(print);\n  };\n\n  ContributorsStatGraph.prototype.redraw_author_commit_info = function(author) {\n    var author_commit_info, author_list_item;\n    author_list_item = $(this.authors[author.author_name].list_item);\n    author_commit_info = this.format_author_commit_info(author);\n    return author_list_item.find(\"span\").html(author_commit_info);\n  };\n\n  return ContributorsStatGraph;\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/stat_graph_contributors.js","import Chart from 'vendor/Chart';\nimport ContributorsStatGraph from './stat_graph_contributors';\n\n// export to global scope\nwindow.Chart = Chart;\nwindow.ContributorsStatGraph = ContributorsStatGraph;\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/graphs_bundle.js","/* eslint-disable func-names, space-before-function-paren, no-var, prefer-rest-params, max-len, no-restricted-syntax, vars-on-top, no-use-before-define, no-param-reassign, new-cap, no-underscore-dangle, wrap-iife, comma-dangle, no-return-assign, prefer-arrow-callback, quotes, prefer-template, newline-per-chained-call, no-else-return, no-shadow */\n\nimport d3 from 'd3';\n\nconst bind = function(fn, me) { return function() { return fn.apply(me, arguments); }; };\nconst extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\nconst hasProp = {}.hasOwnProperty;\n\nexport const ContributorsGraph = (function() {\n  function ContributorsGraph() {}\n\n  ContributorsGraph.prototype.MARGIN = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 50\n  };\n\n  ContributorsGraph.prototype.x_domain = null;\n\n  ContributorsGraph.prototype.y_domain = null;\n\n  ContributorsGraph.prototype.dates = [];\n\n  ContributorsGraph.set_x_domain = function(data) {\n    return ContributorsGraph.prototype.x_domain = data;\n  };\n\n  ContributorsGraph.set_y_domain = function(data) {\n    return ContributorsGraph.prototype.y_domain = [\n      0, d3.max(data, function(d) {\n        return d.commits = d.commits || d.additions || d.deletions;\n      })\n    ];\n  };\n\n  ContributorsGraph.init_x_domain = function(data) {\n    return ContributorsGraph.prototype.x_domain = d3.extent(data, function(d) {\n      return d.date;\n    });\n  };\n\n  ContributorsGraph.init_y_domain = function(data) {\n    return ContributorsGraph.prototype.y_domain = [\n      0, d3.max(data, function(d) {\n        return d.commits = d.commits || d.additions || d.deletions;\n      })\n    ];\n  };\n\n  ContributorsGraph.init_domain = function(data) {\n    ContributorsGraph.init_x_domain(data);\n    return ContributorsGraph.init_y_domain(data);\n  };\n\n  ContributorsGraph.set_dates = function(data) {\n    return ContributorsGraph.prototype.dates = data;\n  };\n\n  ContributorsGraph.prototype.set_x_domain = function() {\n    return this.x.domain(this.x_domain);\n  };\n\n  ContributorsGraph.prototype.set_y_domain = function() {\n    return this.y.domain(this.y_domain);\n  };\n\n  ContributorsGraph.prototype.set_domain = function() {\n    this.set_x_domain();\n    return this.set_y_domain();\n  };\n\n  ContributorsGraph.prototype.create_scale = function(width, height) {\n    this.x = d3.time.scale().range([0, width]).clamp(true);\n    return this.y = d3.scale.linear().range([height, 0]).nice();\n  };\n\n  ContributorsGraph.prototype.draw_x_axis = function() {\n    return this.svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0, \" + this.height + \")\").call(this.x_axis);\n  };\n\n  ContributorsGraph.prototype.draw_y_axis = function() {\n    return this.svg.append(\"g\").attr(\"class\", \"y axis\").call(this.y_axis);\n  };\n\n  ContributorsGraph.prototype.set_data = function(data) {\n    return this.data = data;\n  };\n\n  return ContributorsGraph;\n})();\n\nexport const ContributorsMasterGraph = (function(superClass) {\n  extend(ContributorsMasterGraph, superClass);\n\n  function ContributorsMasterGraph(data1) {\n    this.data = data1;\n    this.update_content = bind(this.update_content, this);\n    this.width = $('.content').width() - 70;\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.brush = null;\n    this.x_max_domain = null;\n  }\n\n  ContributorsMasterGraph.prototype.process_dates = function(data) {\n    var dates;\n    dates = this.get_dates(data);\n    this.parse_dates(data);\n    return ContributorsGraph.set_dates(dates);\n  };\n\n  ContributorsMasterGraph.prototype.get_dates = function(data) {\n    return _.pluck(data, 'date');\n  };\n\n  ContributorsMasterGraph.prototype.parse_dates = function(data) {\n    var parseDate;\n    parseDate = d3.time.format(\"%Y-%m-%d\").parse;\n    return data.forEach(function(d) {\n      return d.date = parseDate(d.date);\n    });\n  };\n\n  ContributorsMasterGraph.prototype.create_scale = function() {\n    return ContributorsMasterGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsMasterGraph.prototype.create_axes = function() {\n    this.x_axis = d3.svg.axis().scale(this.x).orient(\"bottom\");\n    return this.y_axis = d3.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsMasterGraph.prototype.create_svg = function() {\n    return this.svg = d3.select(\"#contributors-master\").append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"tint-box\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsMasterGraph.prototype.create_area = function(x, y) {\n    return this.area = d3.svg.area().x(function(d) {\n      return x(d.date);\n    }).y0(this.height).y1(function(d) {\n      d.commits = d.commits || d.additions || d.deletions;\n      return y(d.commits);\n    }).interpolate(\"basis\");\n  };\n\n  ContributorsMasterGraph.prototype.create_brush = function() {\n    return this.brush = d3.svg.brush().x(this.x).on(\"brushend\", this.update_content);\n  };\n\n  ContributorsMasterGraph.prototype.draw_path = function(data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area\").attr(\"d\", this.area);\n  };\n\n  ContributorsMasterGraph.prototype.add_brush = function() {\n    return this.svg.append(\"g\").attr(\"class\", \"selection\").call(this.brush).selectAll(\"rect\").attr(\"height\", this.height);\n  };\n\n  ContributorsMasterGraph.prototype.update_content = function() {\n    ContributorsGraph.set_x_domain(this.brush.empty() ? this.x_max_domain : this.brush.extent());\n    return $(\"#brush_change\").trigger('change');\n  };\n\n  ContributorsMasterGraph.prototype.draw = function() {\n    this.process_dates(this.data);\n    this.create_scale();\n    this.create_axes();\n    ContributorsGraph.init_domain(this.data);\n    this.x_max_domain = this.x_domain;\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.create_brush();\n    this.draw_path(this.data);\n    this.draw_x_axis();\n    this.draw_y_axis();\n    return this.add_brush();\n  };\n\n  ContributorsMasterGraph.prototype.redraw = function() {\n    this.process_dates(this.data);\n    ContributorsGraph.set_y_domain(this.data);\n    this.set_y_domain();\n    this.svg.select(\"path\").datum(this.data);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsMasterGraph;\n})(ContributorsGraph);\n\nexport const ContributorsAuthorGraph = (function(superClass) {\n  extend(ContributorsAuthorGraph, superClass);\n\n  function ContributorsAuthorGraph(data1) {\n    this.data = data1;\n    // Don't split graph size in half for mobile devices.\n    if ($(window).width() < 768) {\n      this.width = $('.content').width() - 80;\n    } else {\n      this.width = ($('.content').width() / 2) - 100;\n    }\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.list_item = null;\n  }\n\n  ContributorsAuthorGraph.prototype.create_scale = function() {\n    return ContributorsAuthorGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsAuthorGraph.prototype.create_axes = function() {\n    this.x_axis = d3.svg.axis().scale(this.x).orient(\"bottom\").ticks(8);\n    return this.y_axis = d3.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsAuthorGraph.prototype.create_area = function(x, y) {\n    return this.area = d3.svg.area().x(function(d) {\n      var parseDate;\n      parseDate = d3.time.format(\"%Y-%m-%d\").parse;\n      return x(parseDate(d));\n    }).y0(this.height).y1((function(_this) {\n      return function(d) {\n        if (_this.data[d] != null) {\n          return y(_this.data[d]);\n        } else {\n          return y(0);\n        }\n      };\n    })(this)).interpolate(\"basis\");\n  };\n\n  ContributorsAuthorGraph.prototype.create_svg = function() {\n    this.list_item = d3.selectAll(\".person\")[0].pop();\n    return this.svg = d3.select(this.list_item).append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"spark\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsAuthorGraph.prototype.draw_path = function(data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area-contributor\").attr(\"d\", this.area);\n  };\n\n  ContributorsAuthorGraph.prototype.draw = function() {\n    this.create_scale();\n    this.create_axes();\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.draw_path(this.dates);\n    this.draw_x_axis();\n    return this.draw_y_axis();\n  };\n\n  ContributorsAuthorGraph.prototype.redraw = function() {\n    this.set_domain();\n    this.svg.select(\"path\").datum(this.dates);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    this.svg.select(\".x.axis\").call(this.x_axis);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsAuthorGraph;\n})(ContributorsGraph);\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/stat_graph_contributors_graph.js","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.0.2\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t}\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width');\n\t\tvar height = this.height = computeDimension(context.canvas,'Height');\n\n\t\t// Firefox requires this to work correctly\n\t\tcontext.canvas.width  = width;\n\t\tcontext.canvas.height = height;\n\n\t\tvar width = this.width = context.canvas.width;\n\t\tvar height = this.height = context.canvas.height;\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)) objClone[key] = value;\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)) base[key] = value;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn == \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (typeof define == 'function' && define.amd),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\treturn num.toString().split(\".\")[1].length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\tvar maxValue = max(valuesArray),\n\t\t\t\tminValue = min(valuesArray);\n\n\t\t\t// We need some degree of seperation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (labelTemplateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t;\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t;\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif (t === 1) return 1;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1) return t;\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1 / 2) == 2) return 1;\n\t\t\t\tif (!p) p = 1 * (0.3 * 1.5);\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\tif (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2) return easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientWidth;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientHeight;\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tcancelAnimFrame(this.animationFrame);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\thelpers.animationLoop(\n\t\t\t\t\tthis.draw,\n\t\t\t\t\tthis.options.animationSteps,\n\t\t\t\t\tthis.options.animationEasing,\n\t\t\t\t\tthis.options.onAnimationProgress,\n\t\t\t\t\tthis.options.onAnimationComplete,\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn template(this.options.legendTemplate,this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: ChartElements[0].label,\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n\t\t\t\twithinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius, this.startAngle, this.endAngle);\n\n\t\t\tctx.arc(this.x, this.y, this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleFontSize *1.5;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleFontSize/2;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize*1.5*afterTitleIndex) + this.fontSize/2) + this.titleFontSize * 1.5;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth + 10) ? firstWidth/2 : this.yLabelWidth + 10;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth + 8){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (this.angleLineWidth > 0){\n\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max));\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\tdefine(function(){\n\t\t\treturn Chart;\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : dataset.highlightFill || dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : dataset.highlightStroke || dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value){\n\t\t\treturn (Math.PI*2)*(Math.abs(value) / this.total);\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a seperate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tctx.stroke();\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segement.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tctx.fill();\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/cache/omnibus/src/gitlab-rails/vendor/assets/javascripts/Chart.js\n// module id = syvU\n// module chunks = 12"],"sourceRoot":""}