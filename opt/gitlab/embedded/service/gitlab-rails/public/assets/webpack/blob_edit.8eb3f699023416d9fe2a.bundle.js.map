{"version":3,"sources":["webpack:///blob_edit.8eb3f699023416d9fe2a.bundle.js","webpack:///./blob_edit/edit_blob.js","webpack:///./blob_edit/blob_edit_bundle.js"],"names":["webpackJsonp","27Qp","module","exports","__webpack_require__","$","bind","fn","me","apply","arguments","this","EditBlob","assets_path","ace_mode","editModeLinkClickHandler","ace","config","set","loadModule","editor","edit","focus","getSession","setMode","submit","_this","val","getValue","initModePanesAndLinks","initSoftWrap","gl","BlobLicenseSelectors","BlobGitignoreSelectors","BlobCiYamlSelectors","BlobDockerfileSelectors","prototype","$editModePanes","$editModeLinks","click","event","currentLink","currentPane","paneId","preventDefault","target","attr","filter","parent","removeClass","addClass","hide","fadeIn","$toggleButton","post","data","content","response","empty","append","renderGFM","show","isSoftWrapped","on","toggleSoftWrap","e","toggleClass","setUseWrapMode","call","window","6ahN","url","NewCommitForm"],"mappings":"AAAAA,cAAc,GAAG,GAAG,KAEdC,OACA,SAAUC,EAAQC,EAASC,ICHjC,SAAAC,IAIA,WACE,GAAIC,GAAO,SAASC,EAAIC,GAAM,MAAO,YAAa,MAAOD,GAAGE,MAAMD,EAAIE,YAEtEC,MAAKC,SAAY,WACf,QAASA,GAASC,EAAaC,GACb,MAAZA,IACFA,EAAW,MAEbH,KAAKI,yBAA2BT,EAAKK,KAAKI,yBAA0BJ,MACpEK,IAAIC,OAAOC,IAAI,WAAYL,EAAc,QACzCG,IAAIC,OAAOE,WAAW,qBACtBR,KAAKS,OAASJ,IAAIK,KAAK,UACvBV,KAAKS,OAAOE,QACRR,GACFH,KAAKS,OAAOG,aAAaC,QAAQ,YAAcV,GAEjDT,EAAE,QAAQoB,OAAQ,SAASC,GACzB,MAAO,YACL,MAAOrB,GAAE,iBAAiBsB,IAAID,EAAMN,OAAOQ,cAI5CjB,OACHA,KAAKkB,wBACLlB,KAAKmB,eACL,GAAIC,IAAGC,sBACLZ,OAAQT,KAAKS,SAEf,GAAIa,yBACFb,OAAQT,KAAKS,SAEf,GAAIW,IAAGG,qBACLd,OAAQT,KAAKS,SAEf,GAAIW,IAAGI,yBACLf,OAAQT,KAAKS,SA8CjB,MA1CAR,GAASwB,UAAUP,sBAAwB,WAGzC,MAFAlB,MAAK0B,eAAiBhC,EAAE,sBACxBM,KAAK2B,eAAiBjC,EAAE,mBACjBM,KAAK2B,eAAeC,MAAM5B,KAAKI,2BAGxCH,EAASwB,UAAUrB,yBAA2B,SAASyB,GACrD,GAAIC,GAAaC,EAAaC,CAS9B,OARAH,GAAMI,iBACNH,EAAcpC,EAAEmC,EAAMK,QACtBF,EAASF,EAAYK,KAAK,QAC1BJ,EAAc/B,KAAK0B,eAAeU,OAAOJ,GACzChC,KAAK2B,eAAeU,SAASC,YAAY,gBACzCR,EAAYO,SAASE,SAAS,gBAC9BvC,KAAK0B,eAAec,OACpBT,EAAYU,OAAO,KACJ,aAAXT,GACFhC,KAAK0C,cAAcF,OACZ9C,EAAEiD,KAAKb,EAAYc,KAAK,gBAC7BC,QAAS7C,KAAKS,OAAOQ,YACpB,SAAS6B,GAEV,MADAf,GAAYgB,QAAQC,OAAOF,GACpBf,EAAYkB,gBAGrBjD,KAAK0C,cAAcQ,OACZlD,KAAKS,OAAOE,UAIvBV,EAASwB,UAAUN,aAAe,WAChCnB,KAAKmD,eAAgB,EACrBnD,KAAK0C,cAAgBhD,EAAE,qBACvBM,KAAK0C,cAAcU,GAAG,QAASpD,KAAKqD,eAAe1D,KAAKK,QAG1DC,EAASwB,UAAU4B,eAAiB,SAASC,GAC3CtD,KAAKmD,eAAiBnD,KAAKmD,cAC3BnD,KAAK0C,cAAca,YAAY,mBAAoBvD,KAAKmD,eACxDnD,KAAKS,OAAOG,aAAa4C,eAAexD,KAAKmD,gBAGxClD,OAERwD,KAAKC,UDUqBD,KAAKjE,EAASC,EAAoB,UAIzDkE,OACA,SAAUpE,EAAQC,EAASC,IEtGjC,SAAAC,GAIAD,EAAQ,QAER,WACEC,EAAE,WACA,GAAIkE,GAAMlE,EAAE,sBAAsBkD,KAAK,oBACvCgB,IAAOlE,EAAE,sBAAsBkD,KAAK,gBAEzB,IAAI3C,UAAS2D,EAAKlE,EAAE,sBAAsBkD,KAAK,iBAC1D,IAAIiB,eAAcnE,EAAE,0BAErB+D,KAAKC,UFyGqBD,KAAKjE,EAASC,EAAoB,YAI5D","file":"blob_edit.8eb3f699023416d9fe2a.bundle.js","sourcesContent":["webpackJsonp([20,25,26],{\n\n/***/ \"27Qp\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable func-names, space-before-function-paren, no-var, prefer-rest-params, wrap-iife, camelcase, no-param-reassign, quotes, prefer-template, no-new, comma-dangle, one-var, one-var-declaration-per-line, prefer-arrow-callback, no-else-return, no-unused-vars, max-len */\n/* global ace */\n/* global BlobGitignoreSelectors */\n\n(function () {\n  var bind = function bind(fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  };\n\n  this.EditBlob = function () {\n    function EditBlob(assets_path, ace_mode) {\n      if (ace_mode == null) {\n        ace_mode = null;\n      }\n      this.editModeLinkClickHandler = bind(this.editModeLinkClickHandler, this);\n      ace.config.set(\"modePath\", assets_path + \"/ace\");\n      ace.config.loadModule(\"ace/ext/searchbox\");\n      this.editor = ace.edit(\"editor\");\n      this.editor.focus();\n      if (ace_mode) {\n        this.editor.getSession().setMode(\"ace/mode/\" + ace_mode);\n      }\n      $('form').submit(function (_this) {\n        return function () {\n          return $(\"#file-content\").val(_this.editor.getValue());\n        };\n        // Before a form submission, move the content from the Ace editor into the\n        // submitted textarea\n      }(this));\n      this.initModePanesAndLinks();\n      this.initSoftWrap();\n      new gl.BlobLicenseSelectors({\n        editor: this.editor\n      });\n      new BlobGitignoreSelectors({\n        editor: this.editor\n      });\n      new gl.BlobCiYamlSelectors({\n        editor: this.editor\n      });\n      new gl.BlobDockerfileSelectors({\n        editor: this.editor\n      });\n    }\n\n    EditBlob.prototype.initModePanesAndLinks = function () {\n      this.$editModePanes = $(\".js-edit-mode-pane\");\n      this.$editModeLinks = $(\".js-edit-mode a\");\n      return this.$editModeLinks.click(this.editModeLinkClickHandler);\n    };\n\n    EditBlob.prototype.editModeLinkClickHandler = function (event) {\n      var currentLink, currentPane, paneId;\n      event.preventDefault();\n      currentLink = $(event.target);\n      paneId = currentLink.attr(\"href\");\n      currentPane = this.$editModePanes.filter(paneId);\n      this.$editModeLinks.parent().removeClass(\"active hover\");\n      currentLink.parent().addClass(\"active hover\");\n      this.$editModePanes.hide();\n      currentPane.fadeIn(200);\n      if (paneId === \"#preview\") {\n        this.$toggleButton.hide();\n        return $.post(currentLink.data(\"preview-url\"), {\n          content: this.editor.getValue()\n        }, function (response) {\n          currentPane.empty().append(response);\n          return currentPane.renderGFM();\n        });\n      } else {\n        this.$toggleButton.show();\n        return this.editor.focus();\n      }\n    };\n\n    EditBlob.prototype.initSoftWrap = function () {\n      this.isSoftWrapped = false;\n      this.$toggleButton = $('.soft-wrap-toggle');\n      this.$toggleButton.on('click', this.toggleSoftWrap.bind(this));\n    };\n\n    EditBlob.prototype.toggleSoftWrap = function (e) {\n      this.isSoftWrapped = !this.isSoftWrapped;\n      this.$toggleButton.toggleClass('soft-wrap-active', this.isSoftWrapped);\n      this.editor.getSession().setUseWrapMode(this.isSoftWrapped);\n    };\n\n    return EditBlob;\n  }();\n}).call(window);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"6ahN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable func-names, space-before-function-paren, prefer-arrow-callback, no-var, quotes, vars-on-top, no-unused-vars, no-new, max-len */\n/* global EditBlob */\n/* global NewCommitForm */\n\n__webpack_require__(\"27Qp\");\n\n(function () {\n  $(function () {\n    var url = $(\".js-edit-blob-form\").data(\"relative-url-root\");\n    url += $(\".js-edit-blob-form\").data(\"assets-prefix\");\n\n    var blob = new EditBlob(url, $('.js-edit-blob-form').data('blob-language'));\n    new NewCommitForm($('.js-edit-blob-form'));\n  });\n}).call(window);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ })\n\n},[\"6ahN\"]);\n\n\n// WEBPACK FOOTER //\n// blob_edit.8eb3f699023416d9fe2a.bundle.js","/* eslint-disable func-names, space-before-function-paren, no-var, prefer-rest-params, wrap-iife, camelcase, no-param-reassign, quotes, prefer-template, no-new, comma-dangle, one-var, one-var-declaration-per-line, prefer-arrow-callback, no-else-return, no-unused-vars, max-len */\n/* global ace */\n/* global BlobGitignoreSelectors */\n\n(function() {\n  var bind = function(fn, me) { return function() { return fn.apply(me, arguments); }; };\n\n  this.EditBlob = (function() {\n    function EditBlob(assets_path, ace_mode) {\n      if (ace_mode == null) {\n        ace_mode = null;\n      }\n      this.editModeLinkClickHandler = bind(this.editModeLinkClickHandler, this);\n      ace.config.set(\"modePath\", assets_path + \"/ace\");\n      ace.config.loadModule(\"ace/ext/searchbox\");\n      this.editor = ace.edit(\"editor\");\n      this.editor.focus();\n      if (ace_mode) {\n        this.editor.getSession().setMode(\"ace/mode/\" + ace_mode);\n      }\n      $('form').submit((function(_this) {\n        return function() {\n          return $(\"#file-content\").val(_this.editor.getValue());\n        };\n      // Before a form submission, move the content from the Ace editor into the\n      // submitted textarea\n      })(this));\n      this.initModePanesAndLinks();\n      this.initSoftWrap();\n      new gl.BlobLicenseSelectors({\n        editor: this.editor\n      });\n      new BlobGitignoreSelectors({\n        editor: this.editor\n      });\n      new gl.BlobCiYamlSelectors({\n        editor: this.editor\n      });\n      new gl.BlobDockerfileSelectors({\n        editor: this.editor\n      });\n    }\n\n    EditBlob.prototype.initModePanesAndLinks = function() {\n      this.$editModePanes = $(\".js-edit-mode-pane\");\n      this.$editModeLinks = $(\".js-edit-mode a\");\n      return this.$editModeLinks.click(this.editModeLinkClickHandler);\n    };\n\n    EditBlob.prototype.editModeLinkClickHandler = function(event) {\n      var currentLink, currentPane, paneId;\n      event.preventDefault();\n      currentLink = $(event.target);\n      paneId = currentLink.attr(\"href\");\n      currentPane = this.$editModePanes.filter(paneId);\n      this.$editModeLinks.parent().removeClass(\"active hover\");\n      currentLink.parent().addClass(\"active hover\");\n      this.$editModePanes.hide();\n      currentPane.fadeIn(200);\n      if (paneId === \"#preview\") {\n        this.$toggleButton.hide();\n        return $.post(currentLink.data(\"preview-url\"), {\n          content: this.editor.getValue()\n        }, function(response) {\n          currentPane.empty().append(response);\n          return currentPane.renderGFM();\n        });\n      } else {\n        this.$toggleButton.show();\n        return this.editor.focus();\n      }\n    };\n\n    EditBlob.prototype.initSoftWrap = function() {\n      this.isSoftWrapped = false;\n      this.$toggleButton = $('.soft-wrap-toggle');\n      this.$toggleButton.on('click', this.toggleSoftWrap.bind(this));\n    };\n\n    EditBlob.prototype.toggleSoftWrap = function(e) {\n      this.isSoftWrapped = !this.isSoftWrapped;\n      this.$toggleButton.toggleClass('soft-wrap-active', this.isSoftWrapped);\n      this.editor.getSession().setUseWrapMode(this.isSoftWrapped);\n    };\n\n    return EditBlob;\n  })();\n}).call(window);\n\n\n\n// WEBPACK FOOTER //\n// ./blob_edit/edit_blob.js","/* eslint-disable func-names, space-before-function-paren, prefer-arrow-callback, no-var, quotes, vars-on-top, no-unused-vars, no-new, max-len */\n/* global EditBlob */\n/* global NewCommitForm */\n\nrequire('./edit_blob');\n\n(function() {\n  $(function() {\n    var url = $(\".js-edit-blob-form\").data(\"relative-url-root\");\n    url += $(\".js-edit-blob-form\").data(\"assets-prefix\");\n\n    var blob = new EditBlob(url, $('.js-edit-blob-form').data('blob-language'));\n    new NewCommitForm($('.js-edit-blob-form'));\n  });\n}).call(window);\n\n\n\n// WEBPACK FOOTER //\n// ./blob_edit/blob_edit_bundle.js"],"sourceRoot":""}