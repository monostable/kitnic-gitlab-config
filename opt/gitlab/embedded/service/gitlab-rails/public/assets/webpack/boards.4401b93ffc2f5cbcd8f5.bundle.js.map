{"version":3,"sources":["webpack:///boards.4401b93ffc2f5cbcd8f5.bundle.js","webpack:///./boards/components/board.js","webpack:///./boards/components/board_sidebar.js","webpack:///./boards/components/board_new_issue.js","webpack:///./boards/components/modal/header.js","webpack:///./boards/components/board_list.js","webpack:///./boards/models/milestone.js","webpack:///./boards/components/modal/tabs.js","webpack:///./boards/services/board_service.js","webpack:///./boards/components/sidebar/remove_issue.js","webpack:///./boards/boards_bundle.js","webpack:///./boards/models/list.js","webpack:///./boards/components/modal/filters/milestone.js","webpack:///./boards/models/label.js","webpack:///./boards/components/modal/list.js","webpack:///./boards/mixins/sortable_default_options.js","webpack:///./boards/components/modal/lists_dropdown.js","webpack:///./boards/models/issue.js","webpack:///./boards/mixins/modal_mixins.js","webpack:///./boards/components/new_list_dropdown.js","webpack:///./boards/components/modal/empty_state.js","webpack:///./boards/stores/boards_store.js","webpack:///./boards/components/modal/filters/label.js","webpack:///./boards/components/modal/footer.js","webpack:///./boards/components/modal/index.js","webpack:///./boards/components/issue_card_inner.js","webpack:///./boards/models/user.js","webpack:///./boards/stores/modal_store.js","webpack:///./boards/filters/due_date_filters.js","webpack:///./boards/components/board_card.js","webpack:///./boards/components/modal/filters.js","webpack:///./boards/components/board_blank_state.js","webpack:///./boards/components/board_delete.js","webpack:///./boards/components/modal/filters/user.js"],"names":["webpackJsonp","1kZT","module","exports","__webpack_require__","$","Store","gl","issueBoards","BoardsStore","window","Board","Vue","extend","template","components","board-list","BoardList","board-delete","BoardDelete","board-blank-state","BoardBlankState","props","list","Object","disabled","Boolean","issueLinkBase","String","rootPath","data","detailIssue","detail","filters","state","watch","handler","this","page","getIssues","deep","keys","issue","length","findIssue","id","offsetLeft","$el","boardsList","document","querySelectorAll","left","scrollLeft","right","offsetWidth","innerWidth","classList","contains","animate","sortableOptions","animation","methods","showNewIssueForm","$refs","showIssueForm","mounted","_this","getBoardSortableDefaultOptions","group","draggable","handle","onEnd","e","undefined","newIndex","oldIndex","order","sortable","toArray","findList","parseInt","item","dataset","$nextTick","moveList","Sortable","create","parentNode","call","3FuG","BoardSidebar","currentUser","computed","showSidebar","each","i","el","clearMenu","getNiceScroll","doScrollTop","resize","closeSidebar","IssuableContext","MilestoneSelect","DueDateSelectors","LabelsSelect","Sidebar","Subscription","bindAll","removeBtn","RemoveIssueBtn","9rP8","__webpack_exports__","name","title","error","submit","preventDefault","trim","labels","label","ListIssue","subscribed","newIssue","then","submitButton","enable","catch","removeIssue","cancel","IssueBoardsApp","$emit","input","focus","AX9H","modalFilters","ModalStore","ModalHeader","mixins","ModalMixins","projectId","type","Number","required","milestonePath","labelPath","store","selectAllText","selectedCount","issues","showSearch","activeTab","loading","issuesCount","toggleAll","selectAllBtn","blur","modal-tabs","ModalTabs","C5Ex","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__board_new_issue__","__WEBPACK_IMPORTED_MODULE_1__board_card__","boardCard","boardNewIssue","Array","scrollOffset","showCount","loadingMore","scrollTop","scrollHeight","listHeight","issuesSize","getBoundingClientRect","height","loadNextPage","_this2","nextPage","toggleForm","created","$on","_this3","options","scroll","filter","dataIdAttr","onStart","card","showDetail","moving","issueId","onAdd","moveIssueToList","remove","onUpdate","sortedArray","moveIssueInList","onMove","related","onscroll","beforeDestroy","$off","DV+M","_classCallCheck","instance","Constructor","TypeError","ListMilestone","obj","EVjf","destroyed","HsL0","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","BoardService","root","bulkUpdatePath","boardId","boards","resource","method","url","lists","generate","bulkUpdate","http","interceptors","push","request","next","headers","rails","csrfToken","get","label_id","save","position","update","delete","arguments","forEach","from_list_id","to_list_id","move_before_iid","move_after_iid","issueIds","extraData","assign","issuable_ids","join","IOf9","getLists","labelIds","map","boardService","globalId","remove_label_ids","Flash","addIssue","IyBU","use","$boardApp","getElementById","$destroy","board","board-sidebar","board-add-issues-modal","IssuesModal","endpoint","detailIssueVisible","all","resp","json","addList","Infinity","_","sortBy","addBlankState","IssueBoardsSearch","newListDropdownInit","IssueBoardsModalAddBtn","modal","updateTooltip","tooltipTitle","$tooltip","tooltip","openModal","toggleModal","K8NX","List","_uid","guid","list_type","preset","indexOf","ListLabel","s4","Math","floor","random","toString","substring","createList","index","splice","updateNewListDropdown","destroyList","updateList","emptyIssues","label_name","getIssuesForList","size","createIssues","iid","issueObj","listFrom","moveBeforeIid","moveAfterIid","addLabel","updateIssueLabel","moveIssue","_this4","matchesRemove","removeLabel","MlV/","dropdown","Omkx","color","textColor","text_color","description","priority","Pn7F","ModalList","image","purgeUnselectedIssues","loopIssues","selectedIssues","groupedIssues","groups","columns","scrollHandler","currentPage","perPage","loadingNewPage","toggleIssue","tagName","showIssue","selectedIssueIndex","setColumnCount","breakpoint","bp","getBreakpointSize","scrollHandlerWrapper","bind","setColumnCountWrapper","addEventListener","removeEventListener","issue-card-inner","IssueCardInner","TQdT","w","body","add","touchEnabled","DocumentTouch","defaultSortOptions","forceFallback","fallbackClass","fallbackOnBody","ghostClass","delay","scrollSensitivity","scrollSpeed","VVVP","ModalFooterListsDropdown","selected","selectedList","Xfhe","confidential","dueDate","due_date","assignee","relative_position","ListUser","milestone","findLabel","milestone_id","assignee_id","label_ids","patch","aKLL","toggle","showAddIssuesModal","changeTab","tab","dzNA","off","on","new","$this","CreateLabelDropdown","closest","find","glDropdown","term","callback","attr","renderRow","active","$li","$a","class","text","href","$labelColor","style","append","prepend","search","fields","filterable","selectable","multiSelect","clicked","eqGL","ModalEmptyState","newIssuePath","contents","content","f7wA","author_id","utils","getParameterValues","milestone_title","listObj","removeBlankState","listId","removeClass","shouldAddBlankState","welcomeIsHidden","removeList","Cookies","set","expires","path","orderLists","listTo","issueTo","issueLists","listLabels","listIssue","removeLabels","idArray","beforeId","afterId","val","byType","updateFiltersUrl","history","pushState","param","fOmY","iqJG","ModalFooter","submitDisabled","submitText","count","pluralize","addIssues","getSelectedIssues","add_label_ids","lists-dropdown","lgdU","blankStateImage","loadIssues","searchTerm","searchOperation","debounce","clearIssues","queryData","per","getBacklog","res","foundSelectedIssue","findSelectedIssue","showList","showEmptyState","modal-header","modal-list","modal-footer","empty-state","pXFb","showLabel","filterByLabel","labelToggleText","labelIndex","currentTarget","selectedLabels","labelStyle","backgroundColor","q2p8","user","username","avatar","avatar_url","q4Fq","setDefaultFilter","removeSelectedIssue","addSelectedIssue","select","issueUpdate","forcePurge","fIssue","filteredIssue","qMC/","date","Date","dateFormat","qqgg","issueDetailVisible","mouseDown","mouseMove","targetTagName","toLowerCase","rFKb","userFilter","milestoneFilter","labelFilter","rP25","predefinedLabels","addDefaultLists","clearBlankState","generateDefaultLists","unKI","deleteBoard","confirm","destroy","wH23","toggleClassName","dropdownClassName","default","toggleLabel","fieldName","nullUser","UsersSelect","currentUsername","gon","current_username","dropdownTitle","inputPlaceholder"],"mappings":"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","file":"boards.4401b93ffc2f5cbcd8f5.bundle.js","sourcesContent":["webpackJsonp([1,25,26],{\n\n/***/ \"1kZT\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable comma-dangle, space-before-function-paren, one-var */\n/* global Vue */\n/* global Sortable */\n\n__webpack_require__(\"rP25\");\n__webpack_require__(\"unKI\");\n__webpack_require__(\"C5Ex\");\n\n(function () {\n  var Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.Board = Vue.extend({\n    template: '#js-board-template',\n    components: {\n      'board-list': gl.issueBoards.BoardList,\n      'board-delete': gl.issueBoards.BoardDelete,\n      'board-blank-state': gl.issueBoards.BoardBlankState\n    },\n    props: {\n      list: Object,\n      disabled: Boolean,\n      issueLinkBase: String,\n      rootPath: String\n    },\n    data: function data() {\n      return {\n        detailIssue: Store.detail,\n        filters: Store.state.filters\n      };\n    },\n\n    watch: {\n      filters: {\n        handler: function handler() {\n          this.list.page = 1;\n          this.list.getIssues(true);\n        },\n\n        deep: true\n      },\n      detailIssue: {\n        handler: function handler() {\n          if (!Object.keys(this.detailIssue.issue).length) return;\n\n          var issue = this.list.findIssue(this.detailIssue.issue.id);\n\n          if (issue) {\n            var offsetLeft = this.$el.offsetLeft;\n            var boardsList = document.querySelectorAll('.boards-list')[0];\n            var left = boardsList.scrollLeft - offsetLeft;\n            var right = offsetLeft + this.$el.offsetWidth;\n\n            if (window.innerWidth > 768 && boardsList.classList.contains('is-compact')) {\n              // -290 here because width of boardsList is animating so therefore\n              // getting the width here is incorrect\n              // 290 is the width of the sidebar\n              right -= boardsList.offsetWidth - 290;\n            } else {\n              right -= boardsList.offsetWidth;\n            }\n\n            if (right - boardsList.scrollLeft > 0) {\n              $(boardsList).animate({\n                scrollLeft: right\n              }, this.sortableOptions.animation);\n            } else if (left > 0) {\n              $(boardsList).animate({\n                scrollLeft: offsetLeft\n              }, this.sortableOptions.animation);\n            }\n          }\n        },\n\n        deep: true\n      }\n    },\n    methods: {\n      showNewIssueForm: function showNewIssueForm() {\n        this.$refs['board-list'].showIssueForm = !this.$refs['board-list'].showIssueForm;\n      }\n    },\n    mounted: function mounted() {\n      var _this = this;\n\n      this.sortableOptions = gl.issueBoards.getBoardSortableDefaultOptions({\n        disabled: this.disabled,\n        group: 'boards',\n        draggable: '.is-draggable',\n        handle: '.js-board-handle',\n        onEnd: function onEnd(e) {\n          gl.issueBoards.onEnd();\n\n          if (e.newIndex !== undefined && e.oldIndex !== e.newIndex) {\n            var order = _this.sortable.toArray();\n            var list = Store.findList('id', parseInt(e.item.dataset.id, 10));\n\n            _this.$nextTick(function () {\n              Store.moveList(list, order);\n            });\n          }\n        }\n      });\n\n      this.sortable = Sortable.create(this.$el.parentNode, this.sortableOptions);\n    }\n  });\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"3FuG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable comma-dangle, space-before-function-paren, no-new */\n/* global Vue */\n/* global IssuableContext */\n/* global MilestoneSelect */\n/* global LabelsSelect */\n/* global Sidebar */\n\n__webpack_require__(\"IOf9\");\n\n(function () {\n  var Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardSidebar = Vue.extend({\n    props: {\n      currentUser: Object\n    },\n    data: function data() {\n      return {\n        detail: Store.detail,\n        issue: {},\n        list: {}\n      };\n    },\n\n    computed: {\n      showSidebar: function showSidebar() {\n        return Object.keys(this.issue).length;\n      }\n    },\n    watch: {\n      detail: {\n        handler: function handler() {\n          if (this.issue.id !== this.detail.issue.id) {\n            $('.js-issue-board-sidebar', this.$el).each(function (i, el) {\n              $(el).data('glDropdown').clearMenu();\n            });\n          }\n\n          this.issue = this.detail.issue;\n          this.list = this.detail.list;\n        },\n\n        deep: true\n      },\n      issue: function issue() {\n        if (this.showSidebar) {\n          this.$nextTick(function () {\n            $('.right-sidebar').getNiceScroll(0).doScrollTop(0, 0);\n            $('.right-sidebar').getNiceScroll().resize();\n          });\n        }\n      }\n    },\n    methods: {\n      closeSidebar: function closeSidebar() {\n        this.detail.issue = {};\n      }\n    },\n    mounted: function mounted() {\n      new IssuableContext(this.currentUser);\n      new MilestoneSelect();\n      new gl.DueDateSelectors();\n      new LabelsSelect();\n      new Sidebar();\n      gl.Subscription.bindAll('.subscription');\n    },\n\n    components: {\n      removeBtn: gl.issueBoards.RemoveIssueBtn\n    }\n  });\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"9rP8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {/* global ListIssue */\nvar Store = gl.issueBoards.BoardsStore;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = {\n  name: 'BoardNewIssue',\n  props: {\n    list: Object\n  },\n  data: function data() {\n    return {\n      title: '',\n      error: false\n    };\n  },\n\n  methods: {\n    submit: function submit(e) {\n      var _this = this;\n\n      e.preventDefault();\n      if (this.title.trim() === '') return;\n\n      this.error = false;\n\n      var labels = this.list.label ? [this.list.label] : [];\n      var issue = new ListIssue({\n        title: this.title,\n        labels: labels,\n        subscribed: true\n      });\n\n      this.list.newIssue(issue).then(function () {\n        // Need this because our jQuery very kindly disables buttons on ALL form submissions\n        $(_this.$refs.submitButton).enable();\n\n        Store.detail.issue = issue;\n        Store.detail.list = _this.list;\n      }).catch(function () {\n        // Need this because our jQuery very kindly disables buttons on ALL form submissions\n        $(_this.$refs.submitButton).enable();\n\n        // Remove the issue\n        _this.list.removeIssue(issue);\n\n        // Show error message\n        _this.error = true;\n      });\n\n      this.cancel();\n    },\n    cancel: function cancel() {\n      this.title = '';\n      gl.IssueBoardsApp.$emit('hide-issue-form-' + this.list.id);\n    }\n  },\n  mounted: function mounted() {\n    this.$refs.input.focus();\n  },\n\n  template: '\\n    <div class=\"card board-new-issue-form\">\\n      <form @submit=\"submit($event)\">\\n        <div class=\"flash-container\"\\n          v-if=\"error\">\\n          <div class=\"flash-alert\">\\n            An error occured. Please try again.\\n          </div>\\n        </div>\\n        <label class=\"label-light\"\\n          :for=\"list.id + \\'-title\\'\">\\n          Title\\n        </label>\\n        <input class=\"form-control\"\\n          type=\"text\"\\n          v-model=\"title\"\\n          ref=\"input\"\\n          :id=\"list.id + \\'-title\\'\" />\\n        <div class=\"clearfix prepend-top-10\">\\n          <button class=\"btn btn-success pull-left\"\\n            type=\"submit\"\\n            :disabled=\"title === \\'\\'\"\\n            ref=\"submit-button\">\\n            Submit issue\\n          </button>\\n          <button class=\"btn btn-default pull-right\"\\n            type=\"button\"\\n            @click=\"cancel\">\\n            Cancel\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  '\n};\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"AX9H\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global Vue */\n__webpack_require__(\"EVjf\");\nvar modalFilters = __webpack_require__(\"rFKb\");\n\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalHeader = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    props: {\n      projectId: {\n        type: Number,\n        required: true\n      },\n      milestonePath: {\n        type: String,\n        required: true\n      },\n      labelPath: {\n        type: String,\n        required: true\n      }\n    },\n    data: function data() {\n      return ModalStore.store;\n    },\n\n    computed: {\n      selectAllText: function selectAllText() {\n        if (ModalStore.selectedCount() !== this.issues.length || this.issues.length === 0) {\n          return 'Select all';\n        }\n\n        return 'Deselect all';\n      },\n      showSearch: function showSearch() {\n        return this.activeTab === 'all' && !this.loading && this.issuesCount > 0;\n      }\n    },\n    methods: {\n      toggleAll: function toggleAll() {\n        this.$refs.selectAllBtn.blur();\n\n        ModalStore.toggleAll();\n      }\n    },\n    components: {\n      'modal-tabs': gl.issueBoards.ModalTabs,\n      modalFilters: modalFilters\n    },\n    template: '\\n      <div>\\n        <header class=\"add-issues-header form-actions\">\\n          <h2>\\n            Add issues\\n            <button\\n              type=\"button\"\\n              class=\"close\"\\n              data-dismiss=\"modal\"\\n              aria-label=\"Close\"\\n              @click=\"toggleModal(false)\">\\n              <span aria-hidden=\"true\">\\xD7</span>\\n            </button>\\n          </h2>\\n        </header>\\n        <modal-tabs v-if=\"!loading && issuesCount > 0\"></modal-tabs>\\n        <div\\n          class=\"add-issues-search append-bottom-10\"\\n          v-if=\"showSearch\">\\n          <modal-filters\\n            :project-id=\"projectId\"\\n            :milestone-path=\"milestonePath\"\\n            :label-path=\"labelPath\">\\n          </modal-filters>\\n          <input\\n            placeholder=\"Search issues...\"\\n            class=\"form-control\"\\n            type=\"search\"\\n            v-model=\"searchTerm\" />\\n          <button\\n            type=\"button\"\\n            class=\"btn btn-success btn-inverted prepend-left-10\"\\n            ref=\"selectAllBtn\"\\n            @click=\"toggleAll\">\\n            {{ selectAllText }}\\n          </button>\\n        </div>\\n      </div>\\n    '\n  });\n})();\n\n/***/ }),\n\n/***/ \"C5Ex\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__board_new_issue__ = __webpack_require__(\"9rP8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__board_card__ = __webpack_require__(\"qqgg\");\n/* eslint-disable comma-dangle, space-before-function-paren, max-len */\n/* global Vue */\n/* global Sortable */\n\n\n\n\n(function () {\n  var Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardList = Vue.extend({\n    template: '#js-board-list-template',\n    components: {\n      boardCard: __WEBPACK_IMPORTED_MODULE_1__board_card__[\"a\" /* default */],\n      boardNewIssue: __WEBPACK_IMPORTED_MODULE_0__board_new_issue__[\"a\" /* default */]\n    },\n    props: {\n      disabled: Boolean,\n      list: Object,\n      issues: Array,\n      loading: Boolean,\n      issueLinkBase: String,\n      rootPath: String\n    },\n    data: function data() {\n      return {\n        scrollOffset: 250,\n        filters: Store.state.filters,\n        showCount: false,\n        showIssueForm: false\n      };\n    },\n\n    watch: {\n      filters: {\n        handler: function handler() {\n          this.list.loadingMore = false;\n          this.$refs.list.scrollTop = 0;\n        },\n\n        deep: true\n      },\n      issues: function issues() {\n        var _this = this;\n\n        this.$nextTick(function () {\n          if (_this.scrollHeight() <= _this.listHeight() && _this.list.issuesSize > _this.list.issues.length) {\n            _this.list.page += 1;\n            _this.list.getIssues(false);\n          }\n\n          if (_this.scrollHeight() > _this.listHeight()) {\n            _this.showCount = true;\n          } else {\n            _this.showCount = false;\n          }\n        });\n      }\n    },\n    methods: {\n      listHeight: function listHeight() {\n        return this.$refs.list.getBoundingClientRect().height;\n      },\n      scrollHeight: function scrollHeight() {\n        return this.$refs.list.scrollHeight;\n      },\n      scrollTop: function scrollTop() {\n        return this.$refs.list.scrollTop + this.listHeight();\n      },\n      loadNextPage: function loadNextPage() {\n        var _this2 = this;\n\n        var getIssues = this.list.nextPage();\n\n        if (getIssues) {\n          this.list.loadingMore = true;\n          getIssues.then(function () {\n            _this2.list.loadingMore = false;\n          });\n        }\n      },\n      toggleForm: function toggleForm() {\n        this.showIssueForm = !this.showIssueForm;\n      }\n    },\n    created: function created() {\n      gl.IssueBoardsApp.$on('hide-issue-form-' + this.list.id, this.toggleForm);\n    },\n    mounted: function mounted() {\n      var _this3 = this;\n\n      var options = gl.issueBoards.getBoardSortableDefaultOptions({\n        scroll: document.querySelectorAll('.boards-list')[0],\n        group: 'issues',\n        disabled: this.disabled,\n        filter: '.board-list-count, .is-disabled',\n        dataIdAttr: 'data-issue-id',\n        onStart: function onStart(e) {\n          var card = _this3.$refs.issue[e.oldIndex];\n\n          card.showDetail = false;\n          Store.moving.list = card.list;\n          Store.moving.issue = Store.moving.list.findIssue(+e.item.dataset.issueId);\n\n          gl.issueBoards.onStart();\n        },\n        onAdd: function onAdd(e) {\n          gl.issueBoards.BoardsStore.moveIssueToList(Store.moving.list, _this3.list, Store.moving.issue, e.newIndex);\n\n          _this3.$nextTick(function () {\n            e.item.remove();\n          });\n        },\n        onUpdate: function onUpdate(e) {\n          var sortedArray = _this3.sortable.toArray().filter(function (id) {\n            return id !== '-1';\n          });\n          gl.issueBoards.BoardsStore.moveIssueInList(_this3.list, Store.moving.issue, e.oldIndex, e.newIndex, sortedArray);\n        },\n        onMove: function onMove(e) {\n          return !e.related.classList.contains('board-list-count');\n        }\n      });\n\n      this.sortable = Sortable.create(this.$refs.list, options);\n\n      // Scroll event on list to load more\n      this.$refs.list.onscroll = function () {\n        if (_this3.scrollTop() > _this3.scrollHeight() - _this3.scrollOffset && !_this3.list.loadingMore) {\n          _this3.loadNextPage();\n        }\n      };\n    },\n    beforeDestroy: function beforeDestroy() {\n      gl.IssueBoardsApp.$off('hide-issue-form-' + this.list.id, this.toggleForm);\n    }\n  });\n})();\n\n/***/ }),\n\n/***/ \"DV+M\":\n/***/ (function(module, exports) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-unused-vars */\n\nvar ListMilestone = function ListMilestone(obj) {\n  _classCallCheck(this, ListMilestone);\n\n  this.id = obj.id;\n  this.title = obj.title;\n};\n\nwindow.ListMilestone = ListMilestone;\n\n/***/ }),\n\n/***/ \"EVjf\":\n/***/ (function(module, exports) {\n\n/* global Vue */\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalTabs = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    data: function data() {\n      return ModalStore.store;\n    },\n\n    computed: {\n      selectedCount: function selectedCount() {\n        return ModalStore.selectedCount();\n      }\n    },\n    destroyed: function destroyed() {\n      this.activeTab = 'all';\n    },\n\n    template: '\\n      <div class=\"top-area prepend-top-10 append-bottom-10\">\\n        <ul class=\"nav-links issues-state-filters\">\\n          <li :class=\"{ \\'active\\': activeTab == \\'all\\' }\">\\n            <a\\n              href=\"#\"\\n              role=\"button\"\\n              @click.prevent=\"changeTab(\\'all\\')\">\\n              All issues\\n              <span class=\"badge\">\\n                {{ issuesCount }}\\n              </span>\\n            </a>\\n          </li>\\n          <li :class=\"{ \\'active\\': activeTab == \\'selected\\' }\">\\n            <a\\n              href=\"#\"\\n              role=\"button\"\\n              @click.prevent=\"changeTab(\\'selected\\')\">\\n              Selected issues\\n              <span class=\"badge\">\\n                {{ selectedCount }}\\n              </span>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    '\n  });\n})();\n\n/***/ }),\n\n/***/ \"HsL0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable space-before-function-paren, comma-dangle, no-param-reassign, camelcase, max-len, no-unused-vars */\n/* global Vue */\n\nvar BoardService = function () {\n  function BoardService(root, bulkUpdatePath, boardId) {\n    _classCallCheck(this, BoardService);\n\n    this.boards = Vue.resource(root + '{/id}.json', {}, {\n      issues: {\n        method: 'GET',\n        url: root + '/' + boardId + '/issues.json'\n      }\n    });\n    this.lists = Vue.resource(root + '/' + boardId + '/lists{/id}', {}, {\n      generate: {\n        method: 'POST',\n        url: root + '/' + boardId + '/lists/generate.json'\n      }\n    });\n    this.issue = Vue.resource(root + '/' + boardId + '/issues{/id}', {});\n    this.issues = Vue.resource(root + '/' + boardId + '/lists{/id}/issues', {}, {\n      bulkUpdate: {\n        method: 'POST',\n        url: bulkUpdatePath\n      }\n    });\n\n    Vue.http.interceptors.push(function (request, next) {\n      request.headers['X-CSRF-Token'] = $.rails.csrfToken();\n      next();\n    });\n  }\n\n  _createClass(BoardService, [{\n    key: 'all',\n    value: function all() {\n      return this.lists.get();\n    }\n  }, {\n    key: 'generateDefaultLists',\n    value: function generateDefaultLists() {\n      return this.lists.generate({});\n    }\n  }, {\n    key: 'createList',\n    value: function createList(label_id) {\n      return this.lists.save({}, {\n        list: {\n          label_id: label_id\n        }\n      });\n    }\n  }, {\n    key: 'updateList',\n    value: function updateList(id, position) {\n      return this.lists.update({ id: id }, {\n        list: {\n          position: position\n        }\n      });\n    }\n  }, {\n    key: 'destroyList',\n    value: function destroyList(id) {\n      return this.lists.delete({ id: id });\n    }\n  }, {\n    key: 'getIssuesForList',\n    value: function getIssuesForList(id) {\n      var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var data = { id: id };\n      Object.keys(filter).forEach(function (key) {\n        data[key] = filter[key];\n      });\n\n      return this.issues.get(data);\n    }\n  }, {\n    key: 'moveIssue',\n    value: function moveIssue(id) {\n      var from_list_id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var to_list_id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var move_before_iid = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var move_after_iid = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n      return this.issue.update({ id: id }, {\n        from_list_id: from_list_id,\n        to_list_id: to_list_id,\n        move_before_iid: move_before_iid,\n        move_after_iid: move_after_iid\n      });\n    }\n  }, {\n    key: 'newIssue',\n    value: function newIssue(id, issue) {\n      return this.issues.save({ id: id }, {\n        issue: issue\n      });\n    }\n  }, {\n    key: 'getBacklog',\n    value: function getBacklog(data) {\n      return this.boards.issues(data);\n    }\n  }, {\n    key: 'bulkUpdate',\n    value: function bulkUpdate(issueIds) {\n      var extraData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var data = {\n        update: Object.assign(extraData, {\n          issuable_ids: issueIds.join(',')\n        })\n      };\n\n      return this.issues.bulkUpdate(data);\n    }\n  }]);\n\n  return BoardService;\n}();\n\nwindow.BoardService = BoardService;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"IOf9\":\n/***/ (function(module, exports) {\n\n/* eslint-disable no-new */\n/* global Vue */\n/* global Flash */\n(function () {\n  var Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.RemoveIssueBtn = Vue.extend({\n    props: {\n      issue: {\n        type: Object,\n        required: true\n      },\n      list: {\n        type: Object,\n        required: true\n      }\n    },\n    methods: {\n      removeIssue: function removeIssue() {\n        var issue = this.issue;\n        var lists = issue.getLists();\n        var labelIds = lists.map(function (list) {\n          return list.label.id;\n        });\n\n        // Post the remove data\n        gl.boardService.bulkUpdate([issue.globalId], {\n          remove_label_ids: labelIds\n        }).catch(function () {\n          new Flash('Failed to remove issue from board, please try again.', 'alert');\n\n          lists.forEach(function (list) {\n            list.addIssue(issue);\n          });\n        });\n\n        // Remove from the frontend store\n        lists.forEach(function (list) {\n          list.removeIssue(issue);\n        });\n\n        Store.detail.issue = {};\n      }\n    },\n    template: '\\n      <div\\n        class=\"block list\"\\n        v-if=\"list.type !== \\'done\\'\">\\n        <button\\n          class=\"btn btn-default btn-block\"\\n          type=\"button\"\\n          @click=\"removeIssue\">\\n          Remove from board\\n        </button>\\n      </div>\\n    '\n  });\n})();\n\n/***/ }),\n\n/***/ \"IyBU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable one-var, quote-props, comma-dangle, space-before-function-paren */\n/* global Vue */\n/* global BoardService */\n\nwindow.Vue = __webpack_require__(\"Eruj\");\nwindow.Vue.use(__webpack_require__(\"7UJR\"));\n__webpack_require__(\"Xfhe\");\n__webpack_require__(\"Omkx\");\n__webpack_require__(\"K8NX\");\n__webpack_require__(\"DV+M\");\n__webpack_require__(\"q2p8\");\n__webpack_require__(\"f7wA\");\n__webpack_require__(\"q4Fq\");\n__webpack_require__(\"HsL0\");\n__webpack_require__(\"aKLL\");\n__webpack_require__(\"TQdT\");\n__webpack_require__(\"qMC/\");\n__webpack_require__(\"1kZT\");\n__webpack_require__(\"3FuG\");\n__webpack_require__(\"dzNA\");\n__webpack_require__(\"lgdU\");\n__webpack_require__(\"wFzz\");\n\n$(function () {\n  var $boardApp = document.getElementById('board-app');\n  var Store = gl.issueBoards.BoardsStore;\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  window.gl = window.gl || {};\n\n  if (gl.IssueBoardsApp) {\n    gl.IssueBoardsApp.$destroy(true);\n  }\n\n  Store.create();\n\n  gl.IssueBoardsApp = new Vue({\n    el: $boardApp,\n    components: {\n      'board': gl.issueBoards.Board,\n      'board-sidebar': gl.issueBoards.BoardSidebar,\n      'board-add-issues-modal': gl.issueBoards.IssuesModal\n    },\n    data: {\n      state: Store.state,\n      loading: true,\n      endpoint: $boardApp.dataset.endpoint,\n      boardId: $boardApp.dataset.boardId,\n      disabled: $boardApp.dataset.disabled === 'true',\n      issueLinkBase: $boardApp.dataset.issueLinkBase,\n      rootPath: $boardApp.dataset.rootPath,\n      bulkUpdatePath: $boardApp.dataset.bulkUpdatePath,\n      detailIssue: Store.detail\n    },\n    computed: {\n      detailIssueVisible: function detailIssueVisible() {\n        return Object.keys(this.detailIssue.issue).length;\n      }\n    },\n    created: function created() {\n      gl.boardService = new BoardService(this.endpoint, this.bulkUpdatePath, this.boardId);\n    },\n    mounted: function mounted() {\n      var _this = this;\n\n      Store.disabled = this.disabled;\n      gl.boardService.all().then(function (resp) {\n        resp.json().forEach(function (board) {\n          var list = Store.addList(board);\n\n          if (list.type === 'done') {\n            list.position = Infinity;\n          }\n        });\n\n        _this.state.lists = _.sortBy(_this.state.lists, 'position');\n\n        Store.addBlankState();\n        _this.loading = false;\n      });\n    }\n  });\n\n  gl.IssueBoardsSearch = new Vue({\n    el: document.getElementById('js-boards-search'),\n    data: {\n      filters: Store.state.filters\n    },\n    mounted: function mounted() {\n      gl.issueBoards.newListDropdownInit();\n    }\n  });\n\n  gl.IssueBoardsModalAddBtn = new Vue({\n    mixins: [gl.issueBoards.ModalMixins],\n    el: document.getElementById('js-add-issues-btn'),\n    data: {\n      modal: ModalStore.store,\n      store: Store.state\n    },\n    watch: {\n      disabled: function disabled() {\n        this.updateTooltip();\n      }\n    },\n    computed: {\n      disabled: function disabled() {\n        return !this.store.lists.filter(function (list) {\n          return list.type !== 'blank' && list.type !== 'done';\n        }).length;\n      },\n      tooltipTitle: function tooltipTitle() {\n        if (this.disabled) {\n          return 'Please add a list to your board first';\n        }\n\n        return '';\n      }\n    },\n    methods: {\n      updateTooltip: function updateTooltip() {\n        var _this2 = this;\n\n        var $tooltip = $(this.$el);\n\n        this.$nextTick(function () {\n          if (_this2.disabled) {\n            $tooltip.tooltip();\n          } else {\n            $tooltip.tooltip('destroy');\n          }\n        });\n      },\n      openModal: function openModal() {\n        if (!this.disabled) {\n          this.toggleModal(true);\n        }\n      }\n    },\n    mounted: function mounted() {\n      this.updateTooltip();\n    },\n\n    template: '\\n      <button\\n        class=\"btn btn-create pull-right prepend-left-10\"\\n        type=\"button\"\\n        data-placement=\"bottom\"\\n        :class=\"{ \\'disabled\\': disabled }\"\\n        :title=\"tooltipTitle\"\\n        :aria-disabled=\"disabled\"\\n        @click=\"openModal\">\\n        Add issues\\n      </button>\\n    '\n  });\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"K8NX\":\n/***/ (function(module, exports) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable space-before-function-paren, no-underscore-dangle, class-methods-use-this, consistent-return, no-shadow, no-param-reassign, max-len, no-unused-vars */\n/* global ListIssue */\n/* global ListLabel */\n\nvar List = function () {\n  function List(obj) {\n    _classCallCheck(this, List);\n\n    this.id = obj.id;\n    this._uid = this.guid();\n    this.position = obj.position;\n    this.title = obj.title;\n    this.type = obj.list_type;\n    this.preset = ['done', 'blank'].indexOf(this.type) > -1;\n    this.filters = gl.issueBoards.BoardsStore.state.filters;\n    this.page = 1;\n    this.loading = true;\n    this.loadingMore = false;\n    this.issues = [];\n    this.issuesSize = 0;\n\n    if (obj.label) {\n      this.label = new ListLabel(obj.label);\n    }\n\n    if (this.type !== 'blank' && this.id) {\n      this.getIssues();\n    }\n  }\n\n  _createClass(List, [{\n    key: 'guid',\n    value: function guid() {\n      var s4 = function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      };\n      return '' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n  }, {\n    key: 'save',\n    value: function save() {\n      var _this = this;\n\n      return gl.boardService.createList(this.label.id).then(function (resp) {\n        var data = resp.json();\n\n        _this.id = data.id;\n        _this.type = data.list_type;\n        _this.position = data.position;\n\n        return _this.getIssues();\n      });\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var index = gl.issueBoards.BoardsStore.state.lists.indexOf(this);\n      gl.issueBoards.BoardsStore.state.lists.splice(index, 1);\n      gl.issueBoards.BoardsStore.updateNewListDropdown(this.id);\n\n      gl.boardService.destroyList(this.id);\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      gl.boardService.updateList(this.id, this.position);\n    }\n  }, {\n    key: 'nextPage',\n    value: function nextPage() {\n      if (this.issuesSize > this.issues.length) {\n        this.page += 1;\n\n        return this.getIssues(false);\n      }\n    }\n  }, {\n    key: 'getIssues',\n    value: function getIssues() {\n      var _this2 = this;\n\n      var emptyIssues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var filters = this.filters;\n      var data = { page: this.page };\n\n      Object.keys(filters).forEach(function (key) {\n        data[key] = filters[key];\n      });\n\n      if (this.label) {\n        data.label_name = data.label_name.filter(function (label) {\n          return label !== _this2.label.title;\n        });\n      }\n\n      if (emptyIssues) {\n        this.loading = true;\n      }\n\n      return gl.boardService.getIssuesForList(this.id, data).then(function (resp) {\n        var data = resp.json();\n        _this2.loading = false;\n        _this2.issuesSize = data.size;\n\n        if (emptyIssues) {\n          _this2.issues = [];\n        }\n\n        _this2.createIssues(data.issues);\n      });\n    }\n  }, {\n    key: 'newIssue',\n    value: function newIssue(issue) {\n      this.addIssue(issue);\n      this.issuesSize += 1;\n\n      return gl.boardService.newIssue(this.id, issue).then(function (resp) {\n        var data = resp.json();\n        issue.id = data.iid;\n      });\n    }\n  }, {\n    key: 'createIssues',\n    value: function createIssues(data) {\n      var _this3 = this;\n\n      data.forEach(function (issueObj) {\n        _this3.addIssue(new ListIssue(issueObj));\n      });\n    }\n  }, {\n    key: 'addIssue',\n    value: function addIssue(issue, listFrom, newIndex) {\n      var moveBeforeIid = null;\n      var moveAfterIid = null;\n\n      if (!this.findIssue(issue.id)) {\n        if (newIndex !== undefined) {\n          this.issues.splice(newIndex, 0, issue);\n\n          if (this.issues[newIndex - 1]) {\n            moveBeforeIid = this.issues[newIndex - 1].id;\n          }\n\n          if (this.issues[newIndex + 1]) {\n            moveAfterIid = this.issues[newIndex + 1].id;\n          }\n        } else {\n          this.issues.push(issue);\n        }\n\n        if (this.label) {\n          issue.addLabel(this.label);\n        }\n\n        if (listFrom) {\n          this.issuesSize += 1;\n\n          this.updateIssueLabel(issue, listFrom, moveBeforeIid, moveAfterIid);\n        }\n      }\n    }\n  }, {\n    key: 'moveIssue',\n    value: function moveIssue(issue, oldIndex, newIndex, moveBeforeIid, moveAfterIid) {\n      this.issues.splice(oldIndex, 1);\n      this.issues.splice(newIndex, 0, issue);\n\n      gl.boardService.moveIssue(issue.id, null, null, moveBeforeIid, moveAfterIid);\n    }\n  }, {\n    key: 'updateIssueLabel',\n    value: function updateIssueLabel(issue, listFrom, moveBeforeIid, moveAfterIid) {\n      gl.boardService.moveIssue(issue.id, listFrom.id, this.id, moveBeforeIid, moveAfterIid).then(function () {\n        listFrom.getIssues(false);\n      });\n    }\n  }, {\n    key: 'findIssue',\n    value: function findIssue(id) {\n      return this.issues.filter(function (issue) {\n        return issue.id === id;\n      })[0];\n    }\n  }, {\n    key: 'removeIssue',\n    value: function removeIssue(_removeIssue) {\n      var _this4 = this;\n\n      this.issues = this.issues.filter(function (issue) {\n        var matchesRemove = _removeIssue.id === issue.id;\n\n        if (matchesRemove) {\n          _this4.issuesSize -= 1;\n          issue.removeLabel(_this4.label);\n        }\n\n        return !matchesRemove;\n      });\n    }\n  }]);\n\n  return List;\n}();\n\nwindow.List = List;\n\n/***/ }),\n\n/***/ \"MlV/\":\n/***/ (function(module, exports) {\n\n/* eslint-disable no-new */\n/* global Vue */\n/* global MilestoneSelect */\nmodule.exports = Vue.extend({\n  name: 'filter-milestone',\n  props: {\n    milestonePath: {\n      type: String,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    new MilestoneSelect(null, this.$refs.dropdown);\n  },\n\n  template: '\\n    <div class=\"dropdown\">\\n      <button\\n        class=\"dropdown-menu-toggle js-milestone-select\"\\n        type=\"button\"\\n        data-toggle=\"dropdown\"\\n        data-show-any=\"true\"\\n        data-show-upcoming=\"true\"\\n        data-show-started=\"true\"\\n        data-field-name=\"milestone_title\"\\n        :data-milestones=\"milestonePath\"\\n        ref=\"dropdown\">\\n        <span class=\"dropdown-toggle-text\">\\n          Milestone\\n        </span>\\n        <i class=\"fa fa-chevron-down\"></i>\\n      </button>\\n      <div class=\"dropdown-menu dropdown-select dropdown-menu-selectable dropdown-menu-milestone\">\\n        <div class=\"dropdown-title\">\\n          <span>Filter by milestone</span>\\n          <button\\n            class=\"dropdown-title-button dropdown-menu-close\"\\n            aria-label=\"Close\"\\n            type=\"button\">\\n            <i class=\"fa fa-times dropdown-menu-close-icon\"></i>\\n          </button>\\n        </div>\\n        <div class=\"dropdown-input\">\\n          <input\\n            type=\"search\"\\n            class=\"dropdown-input-field\"\\n            placeholder=\"Search milestones\"\\n            autocomplete=\"off\" />\\n          <i class=\"fa fa-search dropdown-input-search\"></i>\\n          <i role=\"button\" class=\"fa fa-times dropdown-input-clear js-dropdown-input-clear\"></i>\\n        </div>\\n        <div class=\"dropdown-content\"></div>\\n        <div class=\"dropdown-loading\"><i class=\"fa fa-spinner fa-spin\"></i></div>\\n      </div>\\n    </div>\\n  '\n});\n\n/***/ }),\n\n/***/ \"Omkx\":\n/***/ (function(module, exports) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-unused-vars, space-before-function-paren */\n\nvar ListLabel = function ListLabel(obj) {\n  _classCallCheck(this, ListLabel);\n\n  this.id = obj.id;\n  this.title = obj.title;\n  this.color = obj.color;\n  this.textColor = obj.text_color;\n  this.description = obj.description;\n  this.priority = obj.priority !== null ? obj.priority : Infinity;\n};\n\nwindow.ListLabel = ListLabel;\n\n/***/ }),\n\n/***/ \"Pn7F\":\n/***/ (function(module, exports) {\n\n/* global Vue */\n/* global ListIssue */\n/* global bp */\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalList = Vue.extend({\n    props: {\n      issueLinkBase: {\n        type: String,\n        required: true\n      },\n      rootPath: {\n        type: String,\n        required: true\n      },\n      image: {\n        type: String,\n        required: true\n      }\n    },\n    data: function data() {\n      return ModalStore.store;\n    },\n\n    watch: {\n      activeTab: function activeTab() {\n        if (this.activeTab === 'all') {\n          ModalStore.purgeUnselectedIssues();\n        }\n      }\n    },\n    computed: {\n      loopIssues: function loopIssues() {\n        if (this.activeTab === 'all') {\n          return this.issues;\n        }\n\n        return this.selectedIssues;\n      },\n      groupedIssues: function groupedIssues() {\n        var _this = this;\n\n        var groups = [];\n        this.loopIssues.forEach(function (issue, i) {\n          var index = i % _this.columns;\n\n          if (!groups[index]) {\n            groups.push([]);\n          }\n\n          groups[index].push(issue);\n        });\n\n        return groups;\n      }\n    },\n    methods: {\n      scrollHandler: function scrollHandler() {\n        var currentPage = Math.floor(this.issues.length / this.perPage);\n\n        if (this.scrollTop() > this.scrollHeight() - 100 && !this.loadingNewPage && currentPage === this.page) {\n          this.loadingNewPage = true;\n          this.page += 1;\n        }\n      },\n      toggleIssue: function toggleIssue(e, issue) {\n        if (e.target.tagName !== 'A') {\n          ModalStore.toggleIssue(issue);\n        }\n      },\n      listHeight: function listHeight() {\n        return this.$refs.list.getBoundingClientRect().height;\n      },\n      scrollHeight: function scrollHeight() {\n        return this.$refs.list.scrollHeight;\n      },\n      scrollTop: function scrollTop() {\n        return this.$refs.list.scrollTop + this.listHeight();\n      },\n      showIssue: function showIssue(issue) {\n        if (this.activeTab === 'all') return true;\n\n        var index = ModalStore.selectedIssueIndex(issue);\n\n        return index !== -1;\n      },\n      setColumnCount: function setColumnCount() {\n        var breakpoint = bp.getBreakpointSize();\n\n        if (breakpoint === 'lg' || breakpoint === 'md') {\n          this.columns = 3;\n        } else if (breakpoint === 'sm') {\n          this.columns = 2;\n        } else {\n          this.columns = 1;\n        }\n      }\n    },\n    mounted: function mounted() {\n      this.scrollHandlerWrapper = this.scrollHandler.bind(this);\n      this.setColumnCountWrapper = this.setColumnCount.bind(this);\n      this.setColumnCount();\n\n      this.$refs.list.addEventListener('scroll', this.scrollHandlerWrapper);\n      window.addEventListener('resize', this.setColumnCountWrapper);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.$refs.list.removeEventListener('scroll', this.scrollHandlerWrapper);\n      window.removeEventListener('resize', this.setColumnCountWrapper);\n    },\n\n    components: {\n      'issue-card-inner': gl.issueBoards.IssueCardInner\n    },\n    template: '\\n      <section\\n        class=\"add-issues-list add-issues-list-columns\"\\n        ref=\"list\">\\n        <div\\n          class=\"empty-state add-issues-empty-state-filter text-center\"\\n          v-if=\"issuesCount > 0 && issues.length === 0\">\\n          <div\\n            class=\"svg-content\"\\n            v-html=\"image\">\\n          </div>\\n          <div class=\"text-content\">\\n            <h4>\\n              There are no issues to show.\\n            </h4>\\n          </div>\\n        </div>\\n        <div\\n          v-for=\"group in groupedIssues\"\\n          class=\"add-issues-list-column\">\\n          <div\\n            v-for=\"issue in group\"\\n            v-if=\"showIssue(issue)\"\\n            class=\"card-parent\">\\n            <div\\n              class=\"card\"\\n              :class=\"{ \\'is-active\\': issue.selected }\"\\n              @click=\"toggleIssue($event, issue)\">\\n              <issue-card-inner\\n                :issue=\"issue\"\\n                :issue-link-base=\"issueLinkBase\"\\n                :root-path=\"rootPath\">\\n              </issue-card-inner>\\n              <span\\n                :aria-label=\"\\'Issue #\\' + issue.id + \\' selected\\'\"\\n                aria-checked=\"true\"\\n                v-if=\"issue.selected\"\\n                class=\"issue-card-selected text-center\">\\n                <i class=\"fa fa-check\"></i>\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </section>\\n    '\n  });\n})();\n\n/***/ }),\n\n/***/ \"TQdT\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable no-unused-vars, no-mixed-operators, comma-dangle */\n/* global DocumentTouch */\n\n(function (w) {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.onStart = function () {\n    $('.has-tooltip').tooltip('hide').tooltip('disable');\n    document.body.classList.add('is-dragging');\n  };\n\n  gl.issueBoards.onEnd = function () {\n    $('.has-tooltip').tooltip('enable');\n    document.body.classList.remove('is-dragging');\n  };\n\n  gl.issueBoards.touchEnabled = 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch;\n\n  gl.issueBoards.getBoardSortableDefaultOptions = function (obj) {\n    var defaultSortOptions = {\n      animation: 200,\n      forceFallback: true,\n      fallbackClass: 'is-dragging',\n      fallbackOnBody: true,\n      ghostClass: 'is-ghost',\n      filter: '.board-delete, .btn',\n      delay: gl.issueBoards.touchEnabled ? 100 : 0,\n      scrollSensitivity: gl.issueBoards.touchEnabled ? 60 : 100,\n      scrollSpeed: 20,\n      onStart: gl.issueBoards.onStart,\n      onEnd: gl.issueBoards.onEnd\n    };\n\n    Object.keys(obj).forEach(function (key) {\n      defaultSortOptions[key] = obj[key];\n    });\n    return defaultSortOptions;\n  };\n})(window);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"VVVP\":\n/***/ (function(module, exports) {\n\n/* global Vue */\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalFooterListsDropdown = Vue.extend({\n    data: function data() {\n      return {\n        modal: ModalStore.store,\n        state: gl.issueBoards.BoardsStore.state\n      };\n    },\n\n    computed: {\n      selected: function selected() {\n        return this.modal.selectedList || this.state.lists[0];\n      }\n    },\n    destroyed: function destroyed() {\n      this.modal.selectedList = null;\n    },\n\n    template: \"\\n      <div class=\\\"dropdown inline\\\">\\n        <button\\n          class=\\\"dropdown-menu-toggle\\\"\\n          type=\\\"button\\\"\\n          data-toggle=\\\"dropdown\\\"\\n          aria-expanded=\\\"false\\\">\\n          <span\\n            class=\\\"dropdown-label-box\\\"\\n            :style=\\\"{ backgroundColor: selected.label.color }\\\">\\n          </span>\\n          {{ selected.title }}\\n          <i class=\\\"fa fa-chevron-down\\\"></i>\\n        </button>\\n        <div class=\\\"dropdown-menu dropdown-menu-selectable dropdown-menu-drop-up\\\">\\n          <ul>\\n            <li\\n              v-for=\\\"list in state.lists\\\"\\n              v-if=\\\"list.type == 'label'\\\">\\n              <a\\n                href=\\\"#\\\"\\n                role=\\\"button\\\"\\n                :class=\\\"{ 'is-active': list.id == selected.id }\\\"\\n                @click.prevent=\\\"modal.selectedList = list\\\">\\n                <span\\n                  class=\\\"dropdown-label-box\\\"\\n                  :style=\\\"{ backgroundColor: list.label.color }\\\">\\n                </span>\\n                {{ list.title }}\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    \"\n  });\n})();\n\n/***/ }),\n\n/***/ \"Xfhe\":\n/***/ (function(module, exports) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-unused-vars, space-before-function-paren, arrow-body-style, arrow-parens, comma-dangle, max-len */\n/* global Vue */\n/* global ListLabel */\n/* global ListMilestone */\n/* global ListUser */\n\nvar ListIssue = function () {\n  function ListIssue(obj) {\n    var _this = this;\n\n    _classCallCheck(this, ListIssue);\n\n    this.globalId = obj.id;\n    this.id = obj.iid;\n    this.title = obj.title;\n    this.confidential = obj.confidential;\n    this.dueDate = obj.due_date;\n    this.subscribed = obj.subscribed;\n    this.labels = [];\n    this.selected = false;\n    this.assignee = false;\n    this.position = obj.relative_position || Infinity;\n\n    if (obj.assignee) {\n      this.assignee = new ListUser(obj.assignee);\n    }\n\n    if (obj.milestone) {\n      this.milestone = new ListMilestone(obj.milestone);\n    }\n\n    obj.labels.forEach(function (label) {\n      _this.labels.push(new ListLabel(label));\n    });\n  }\n\n  _createClass(ListIssue, [{\n    key: 'addLabel',\n    value: function addLabel(label) {\n      if (!this.findLabel(label)) {\n        this.labels.push(new ListLabel(label));\n      }\n    }\n  }, {\n    key: 'findLabel',\n    value: function findLabel(_findLabel) {\n      return this.labels.filter(function (label) {\n        return label.title === _findLabel.title;\n      })[0];\n    }\n  }, {\n    key: 'removeLabel',\n    value: function removeLabel(_removeLabel) {\n      if (_removeLabel) {\n        this.labels = this.labels.filter(function (label) {\n          return _removeLabel.title !== label.title;\n        });\n      }\n    }\n  }, {\n    key: 'removeLabels',\n    value: function removeLabels(labels) {\n      labels.forEach(this.removeLabel.bind(this));\n    }\n  }, {\n    key: 'getLists',\n    value: function getLists() {\n      var _this2 = this;\n\n      return gl.issueBoards.BoardsStore.state.lists.filter(function (list) {\n        return list.findIssue(_this2.id);\n      });\n    }\n  }, {\n    key: 'update',\n    value: function update(url) {\n      var data = {\n        issue: {\n          milestone_id: this.milestone ? this.milestone.id : null,\n          due_date: this.dueDate,\n          assignee_id: this.assignee ? this.assignee.id : null,\n          label_ids: this.labels.map(function (label) {\n            return label.id;\n          })\n        }\n      };\n\n      if (!data.issue.label_ids.length) {\n        data.issue.label_ids = [''];\n      }\n\n      return Vue.http.patch(url, data);\n    }\n  }]);\n\n  return ListIssue;\n}();\n\nwindow.ListIssue = ListIssue;\n\n/***/ }),\n\n/***/ \"aKLL\":\n/***/ (function(module, exports) {\n\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalMixins = {\n    methods: {\n      toggleModal: function toggleModal(toggle) {\n        ModalStore.store.showAddIssuesModal = toggle;\n      },\n      changeTab: function changeTab(tab) {\n        ModalStore.store.activeTab = tab;\n      }\n    }\n  };\n})();\n\n/***/ }),\n\n/***/ \"dzNA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable comma-dangle, func-names, no-new, space-before-function-paren, one-var */\n\n(function () {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  var Store = gl.issueBoards.BoardsStore;\n\n  $(document).off('created.label').on('created.label', function (e, label) {\n    Store.new({\n      title: label.title,\n      position: Store.state.lists.length - 2,\n      list_type: 'label',\n      label: {\n        id: label.id,\n        title: label.title,\n        color: label.color\n      }\n    });\n  });\n\n  gl.issueBoards.newListDropdownInit = function () {\n    $('.js-new-board-list').each(function () {\n      var $this = $(this);\n      new gl.CreateLabelDropdown($this.closest('.dropdown').find('.dropdown-new-label'), $this.data('namespace-path'), $this.data('project-path'));\n\n      $this.glDropdown({\n        data: function data(term, callback) {\n          $.get($this.attr('data-labels')).then(function (resp) {\n            callback(resp);\n          });\n        },\n        renderRow: function renderRow(label) {\n          var active = Store.findList('title', label.title);\n          var $li = $('<li />');\n          var $a = $('<a />', {\n            class: active ? 'is-active js-board-list-' + active.id : '',\n            text: label.title,\n            href: '#'\n          });\n          var $labelColor = $('<span />', {\n            class: 'dropdown-label-box',\n            style: 'background-color: ' + label.color\n          });\n\n          return $li.append($a.prepend($labelColor));\n        },\n\n        search: {\n          fields: ['title']\n        },\n        filterable: true,\n        selectable: true,\n        multiSelect: true,\n        clicked: function clicked(label, $el, e) {\n          e.preventDefault();\n\n          if (!Store.findList('title', label.title)) {\n            Store.new({\n              title: label.title,\n              position: Store.state.lists.length - 2,\n              list_type: 'label',\n              label: {\n                id: label.id,\n                title: label.title,\n                color: label.color\n              }\n            });\n\n            Store.state.lists = _.sortBy(Store.state.lists, 'position');\n          }\n        }\n      });\n    });\n  };\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"eqGL\":\n/***/ (function(module, exports) {\n\n/* global Vue */\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalEmptyState = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    data: function data() {\n      return ModalStore.store;\n    },\n\n    props: {\n      image: {\n        type: String,\n        required: true\n      },\n      newIssuePath: {\n        type: String,\n        required: true\n      }\n    },\n    computed: {\n      contents: function contents() {\n        var obj = {\n          title: 'You haven\\'t added any issues to your project yet',\n          content: '\\n            An issue can be a bug, a todo or a feature request that needs to be\\n            discussed in a project. Besides, issues are searchable and filterable.\\n          '\n        };\n\n        if (this.activeTab === 'selected') {\n          obj.title = 'You haven\\'t selected any issues yet';\n          obj.content = '\\n            Go back to <strong>All issues</strong> and select some issues\\n            to add to your board.\\n          ';\n        }\n\n        return obj;\n      }\n    },\n    template: '\\n      <section class=\"empty-state\">\\n        <div class=\"row\">\\n          <div class=\"col-xs-12 col-sm-6 col-sm-push-6\">\\n            <aside class=\"svg-content\" v-html=\"image\"></aside>\\n          </div>\\n          <div class=\"col-xs-12 col-sm-6 col-sm-pull-6\">\\n            <div class=\"text-content\">\\n              <h4>{{ contents.title }}</h4>\\n              <p v-html=\"contents.content\"></p>\\n              <a\\n                :href=\"newIssuePath\"\\n                class=\"btn btn-success btn-inverted\"\\n                v-if=\"activeTab === \\'all\\'\">\\n                New issue\\n              </a>\\n              <button\\n                type=\"button\"\\n                class=\"btn btn-default\"\\n                @click=\"changeTab(\\'all\\')\"\\n                v-if=\"activeTab === \\'selected\\'\">\\n                All issues\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </section>\\n    '\n  });\n})();\n\n/***/ }),\n\n/***/ \"f7wA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable comma-dangle, space-before-function-paren, one-var, no-shadow, dot-notation, max-len */\n/* global Cookies */\n/* global List */\n\n(function () {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardsStore = {\n    disabled: false,\n    state: {},\n    detail: {\n      issue: {}\n    },\n    moving: {\n      issue: {},\n      list: {}\n    },\n    create: function create() {\n      this.state.lists = [];\n      this.state.filters = {\n        author_id: gl.utils.getParameterValues('author_id')[0],\n        assignee_id: gl.utils.getParameterValues('assignee_id')[0],\n        milestone_title: gl.utils.getParameterValues('milestone_title')[0],\n        label_name: gl.utils.getParameterValues('label_name[]'),\n        search: ''\n      };\n    },\n    addList: function addList(listObj) {\n      var list = new List(listObj);\n      this.state.lists.push(list);\n\n      return list;\n    },\n    new: function _new(listObj) {\n      var _this = this;\n\n      var list = this.addList(listObj);\n\n      list.save().then(function () {\n        _this.state.lists = _.sortBy(_this.state.lists, 'position');\n      });\n      this.removeBlankState();\n    },\n    updateNewListDropdown: function updateNewListDropdown(listId) {\n      $('.js-board-list-' + listId).removeClass('is-active');\n    },\n    shouldAddBlankState: function shouldAddBlankState() {\n      // Decide whether to add the blank state\n      return !this.state.lists.filter(function (list) {\n        return list.type !== 'done';\n      })[0];\n    },\n    addBlankState: function addBlankState() {\n      if (!this.shouldAddBlankState() || this.welcomeIsHidden() || this.disabled) return;\n\n      this.addList({\n        id: 'blank',\n        list_type: 'blank',\n        title: 'Welcome to your Issue Board!',\n        position: 0\n      });\n\n      this.state.lists = _.sortBy(this.state.lists, 'position');\n    },\n    removeBlankState: function removeBlankState() {\n      this.removeList('blank');\n\n      Cookies.set('issue_board_welcome_hidden', 'true', {\n        expires: 365 * 10,\n        path: ''\n      });\n    },\n    welcomeIsHidden: function welcomeIsHidden() {\n      return Cookies.get('issue_board_welcome_hidden') === 'true';\n    },\n    removeList: function removeList(id) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'blank';\n\n      var list = this.findList('id', id, type);\n\n      if (!list) return;\n\n      this.state.lists = this.state.lists.filter(function (list) {\n        return list.id !== id;\n      });\n    },\n    moveList: function moveList(listFrom, orderLists) {\n      var _this2 = this;\n\n      orderLists.forEach(function (id, i) {\n        var list = _this2.findList('id', parseInt(id, 10));\n\n        list.position = i;\n      });\n      listFrom.update();\n    },\n    moveIssueToList: function moveIssueToList(listFrom, listTo, issue, newIndex) {\n      var issueTo = listTo.findIssue(issue.id);\n      var issueLists = issue.getLists();\n      var listLabels = issueLists.map(function (listIssue) {\n        return listIssue.label;\n      });\n\n      if (!issueTo) {\n        // Add to new lists issues if it doesn't already exist\n        listTo.addIssue(issue, listFrom, newIndex);\n      } else {\n        listTo.updateIssueLabel(issue, listFrom);\n        issueTo.removeLabel(listFrom.label);\n      }\n\n      if (listTo.type === 'done') {\n        issueLists.forEach(function (list) {\n          list.removeIssue(issue);\n        });\n        issue.removeLabels(listLabels);\n      } else {\n        listFrom.removeIssue(issue);\n      }\n    },\n    moveIssueInList: function moveIssueInList(list, issue, oldIndex, newIndex, idArray) {\n      var beforeId = parseInt(idArray[newIndex - 1], 10) || null;\n      var afterId = parseInt(idArray[newIndex + 1], 10) || null;\n\n      list.moveIssue(issue, oldIndex, newIndex, beforeId, afterId);\n    },\n    findList: function findList(key, val) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n      return this.state.lists.filter(function (list) {\n        var byType = type ? list['type'] === type : true;\n\n        return list[key] === val && byType;\n      })[0];\n    },\n    updateFiltersUrl: function updateFiltersUrl() {\n      history.pushState(null, null, '?' + $.param(this.state.filters));\n    }\n  };\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"fOmY\":\n/***/ (function(module, exports) {\n\n/* eslint-disable no-new */\n/* global Vue */\n/* global LabelsSelect */\nmodule.exports = Vue.extend({\n  name: 'filter-label',\n  props: {\n    labelPath: {\n      type: String,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    new LabelsSelect(this.$refs.dropdown);\n  },\n\n  template: '\\n    <div class=\"dropdown\">\\n      <button\\n        class=\"dropdown-menu-toggle js-label-select js-multiselect js-extra-options\"\\n        type=\"button\"\\n        data-toggle=\"dropdown\"\\n        data-show-any=\"true\"\\n        data-show-no=\"true\"\\n        :data-labels=\"labelPath\"\\n        ref=\"dropdown\">\\n        <span class=\"dropdown-toggle-text\">\\n          Label\\n        </span>\\n        <i class=\"fa fa-chevron-down\"></i>\\n      </button>\\n      <div class=\"dropdown-menu dropdown-select dropdown-menu-paging dropdown-menu-labels dropdown-menu-selectable\">\\n        <div class=\"dropdown-title\">\\n          Filter by label\\n          <button\\n            class=\"dropdown-title-button dropdown-menu-close\"\\n            aria-label=\"Close\"\\n            type=\"button\">\\n            <i class=\"fa fa-times dropdown-menu-close-icon\"></i>\\n          </button>\\n        </div>\\n        <div class=\"dropdown-input\">\\n          <input\\n            type=\"search\"\\n            class=\"dropdown-input-field\"\\n            placeholder=\"Search\"\\n            autocomplete=\"off\" />\\n          <i class=\"fa fa-search dropdown-input-search\"></i>\\n          <i role=\"button\" class=\"fa fa-times dropdown-input-clear js-dropdown-input-clear\"></i>\\n        </div>\\n        <div class=\"dropdown-content\"></div>\\n        <div class=\"dropdown-loading\"><i class=\"fa fa-spinner fa-spin\"></i></div>\\n      </div>\\n    </div>\\n  '\n});\n\n/***/ }),\n\n/***/ \"iqJG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* eslint-disable no-new */\n/* global Vue */\n/* global Flash */\n\n__webpack_require__(\"VVVP\");\n\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalFooter = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    data: function data() {\n      return {\n        modal: ModalStore.store,\n        state: gl.issueBoards.BoardsStore.state\n      };\n    },\n\n    computed: {\n      submitDisabled: function submitDisabled() {\n        return !ModalStore.selectedCount();\n      },\n      submitText: function submitText() {\n        var count = ModalStore.selectedCount();\n\n        return 'Add ' + (count > 0 ? count : '') + ' ' + gl.text.pluralize('issue', count);\n      }\n    },\n    methods: {\n      addIssues: function addIssues() {\n        var list = this.modal.selectedList || this.state.lists[0];\n        var selectedIssues = ModalStore.getSelectedIssues();\n        var issueIds = selectedIssues.map(function (issue) {\n          return issue.globalId;\n        });\n\n        // Post the data to the backend\n        gl.boardService.bulkUpdate(issueIds, {\n          add_label_ids: [list.label.id]\n        }).catch(function () {\n          new Flash('Failed to update issues, please try again.', 'alert');\n\n          selectedIssues.forEach(function (issue) {\n            list.removeIssue(issue);\n            list.issuesSize -= 1;\n          });\n        });\n\n        // Add the issues on the frontend\n        selectedIssues.forEach(function (issue) {\n          list.addIssue(issue);\n          list.issuesSize += 1;\n        });\n\n        this.toggleModal(false);\n      }\n    },\n    components: {\n      'lists-dropdown': gl.issueBoards.ModalFooterListsDropdown\n    },\n    template: '\\n      <footer\\n        class=\"form-actions add-issues-footer\">\\n        <div class=\"pull-left\">\\n          <button\\n            class=\"btn btn-success\"\\n            type=\"button\"\\n            :disabled=\"submitDisabled\"\\n            @click=\"addIssues\">\\n            {{ submitText }}\\n          </button>\\n          <span class=\"inline add-issues-footer-to-list\">\\n            to list\\n          </span>\\n          <lists-dropdown></lists-dropdown>\\n        </div>\\n        <button\\n          class=\"btn btn-default pull-right\"\\n          type=\"button\"\\n          @click=\"toggleModal(false)\">\\n          Cancel\\n        </button>\\n      </footer>\\n    '\n  });\n})();\n\n/***/ }),\n\n/***/ \"lgdU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global Vue */\n/* global ListIssue */\n\n__webpack_require__(\"AX9H\");\n__webpack_require__(\"Pn7F\");\n__webpack_require__(\"iqJG\");\n__webpack_require__(\"eqGL\");\n\n(function () {\n  var ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.IssuesModal = Vue.extend({\n    props: {\n      blankStateImage: {\n        type: String,\n        required: true\n      },\n      newIssuePath: {\n        type: String,\n        required: true\n      },\n      issueLinkBase: {\n        type: String,\n        required: true\n      },\n      rootPath: {\n        type: String,\n        required: true\n      },\n      projectId: {\n        type: Number,\n        required: true\n      },\n      milestonePath: {\n        type: String,\n        required: true\n      },\n      labelPath: {\n        type: String,\n        required: true\n      }\n    },\n    data: function data() {\n      return ModalStore.store;\n    },\n\n    watch: {\n      page: function page() {\n        this.loadIssues();\n      },\n      searchTerm: function searchTerm() {\n        this.searchOperation();\n      },\n      showAddIssuesModal: function showAddIssuesModal() {\n        var _this = this;\n\n        if (this.showAddIssuesModal && !this.issues.length) {\n          this.loading = true;\n\n          this.loadIssues().then(function () {\n            _this.loading = false;\n          });\n        } else if (!this.showAddIssuesModal) {\n          this.issues = [];\n          this.selectedIssues = [];\n          this.issuesCount = false;\n        }\n      },\n\n      filter: {\n        handler: function handler() {\n          this.page = 1;\n          this.loadIssues(true);\n        },\n\n        deep: true\n      }\n    },\n    methods: {\n      searchOperation: _.debounce(function searchOperationDebounce() {\n        this.loadIssues(true);\n      }, 500),\n      loadIssues: function loadIssues() {\n        var _this2 = this;\n\n        var clearIssues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (!this.showAddIssuesModal) return false;\n\n        var queryData = Object.assign({}, this.filter, {\n          search: this.searchTerm,\n          page: this.page,\n          per: this.perPage\n        });\n\n        return gl.boardService.getBacklog(queryData).then(function (res) {\n          var data = res.json();\n\n          if (clearIssues) {\n            _this2.issues = [];\n          }\n\n          data.issues.forEach(function (issueObj) {\n            var issue = new ListIssue(issueObj);\n            var foundSelectedIssue = ModalStore.findSelectedIssue(issue);\n            issue.selected = !!foundSelectedIssue;\n\n            _this2.issues.push(issue);\n          });\n\n          _this2.loadingNewPage = false;\n\n          if (!_this2.issuesCount) {\n            _this2.issuesCount = data.size;\n          }\n        });\n      }\n    },\n    computed: {\n      showList: function showList() {\n        if (this.activeTab === 'selected') {\n          return this.selectedIssues.length > 0;\n        }\n\n        return this.issuesCount > 0;\n      },\n      showEmptyState: function showEmptyState() {\n        if (!this.loading && this.issuesCount === 0) {\n          return true;\n        }\n\n        return this.activeTab === 'selected' && this.selectedIssues.length === 0;\n      }\n    },\n    created: function created() {\n      this.page = 1;\n    },\n\n    components: {\n      'modal-header': gl.issueBoards.ModalHeader,\n      'modal-list': gl.issueBoards.ModalList,\n      'modal-footer': gl.issueBoards.ModalFooter,\n      'empty-state': gl.issueBoards.ModalEmptyState\n    },\n    template: '\\n      <div\\n        class=\"add-issues-modal\"\\n        v-if=\"showAddIssuesModal\">\\n        <div class=\"add-issues-container\">\\n          <modal-header\\n            :project-id=\"projectId\"\\n            :milestone-path=\"milestonePath\"\\n            :label-path=\"labelPath\">\\n          </modal-header>\\n          <modal-list\\n            :image=\"blankStateImage\"\\n            :issue-link-base=\"issueLinkBase\"\\n            :root-path=\"rootPath\"\\n            v-if=\"!loading && showList\"></modal-list>\\n          <empty-state\\n            v-if=\"showEmptyState\"\\n            :image=\"blankStateImage\"\\n            :new-issue-path=\"newIssuePath\"></empty-state>\\n          <section\\n            class=\"add-issues-list text-center\"\\n            v-if=\"loading\">\\n            <div class=\"add-issues-list-loading\">\\n              <i class=\"fa fa-spinner fa-spin\"></i>\\n            </div>\\n          </section>\\n          <modal-footer></modal-footer>\\n        </div>\\n      </div>\\n    '\n  });\n})();\n\n/***/ }),\n\n/***/ \"pXFb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* global Vue */\n(function () {\n  var Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.IssueCardInner = Vue.extend({\n    props: {\n      issue: {\n        type: Object,\n        required: true\n      },\n      issueLinkBase: {\n        type: String,\n        required: true\n      },\n      list: {\n        type: Object,\n        required: false\n      },\n      rootPath: {\n        type: String,\n        required: true\n      }\n    },\n    methods: {\n      showLabel: function showLabel(label) {\n        if (!this.list) return true;\n\n        return !this.list.label || label.id !== this.list.label.id;\n      },\n      filterByLabel: function filterByLabel(label, e) {\n        var labelToggleText = label.title;\n        var labelIndex = Store.state.filters.label_name.indexOf(label.title);\n        $(e.currentTarget).tooltip('hide');\n\n        if (labelIndex === -1) {\n          Store.state.filters.label_name.push(label.title);\n          $('.labels-filter').prepend('<input type=\"hidden\" name=\"label_name[]\" value=\"' + label.title + '\" />');\n        } else {\n          Store.state.filters.label_name.splice(labelIndex, 1);\n          labelToggleText = Store.state.filters.label_name[0];\n          $('.labels-filter input[name=\"label_name[]\"][value=\"' + label.title + '\"]').remove();\n        }\n\n        var selectedLabels = Store.state.filters.label_name;\n        if (selectedLabels.length === 0) {\n          labelToggleText = 'Label';\n        } else if (selectedLabels.length > 1) {\n          labelToggleText = selectedLabels[0] + ' + ' + (selectedLabels.length - 1) + ' more';\n        }\n\n        $('.labels-filter .dropdown-toggle-text').text(labelToggleText);\n\n        Store.updateFiltersUrl();\n      },\n      labelStyle: function labelStyle(label) {\n        return {\n          backgroundColor: label.color,\n          color: label.textColor\n        };\n      }\n    },\n    template: '\\n      <div>\\n        <h4 class=\"card-title\">\\n          <i\\n            class=\"fa fa-eye-slash confidential-icon\"\\n            v-if=\"issue.confidential\"></i>\\n          <a\\n            :href=\"issueLinkBase + \\'/\\' + issue.id\"\\n            :title=\"issue.title\">\\n            {{ issue.title }}\\n          </a>\\n        </h4>\\n        <div class=\"card-footer\">\\n          <span\\n            class=\"card-number\"\\n            v-if=\"issue.id\">\\n            #{{ issue.id }}\\n          </span>\\n          <a\\n            class=\"card-assignee has-tooltip\"\\n            :href=\"rootPath + issue.assignee.username\"\\n            :title=\"\\'Assigned to \\' + issue.assignee.name\"\\n            v-if=\"issue.assignee\"\\n            data-container=\"body\">\\n            <img\\n              class=\"avatar avatar-inline s20\"\\n              :src=\"issue.assignee.avatar\"\\n              width=\"20\"\\n              height=\"20\"\\n              :alt=\"\\'Avatar for \\' + issue.assignee.name\" />\\n          </a>\\n          <button\\n            class=\"label color-label has-tooltip\"\\n            v-for=\"label in issue.labels\"\\n            type=\"button\"\\n            v-if=\"showLabel(label)\"\\n            @click=\"filterByLabel(label, $event)\"\\n            :style=\"labelStyle(label)\"\\n            :title=\"label.description\"\\n            data-container=\"body\">\\n            {{ label.title }}\\n          </button>\\n        </div>\\n      </div>\\n    '\n  });\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"q2p8\":\n/***/ (function(module, exports) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-unused-vars */\n\nvar ListUser = function ListUser(user) {\n  _classCallCheck(this, ListUser);\n\n  this.id = user.id;\n  this.name = user.name;\n  this.username = user.username;\n  this.avatar = user.avatar_url;\n};\n\nwindow.ListUser = ListUser;\n\n/***/ }),\n\n/***/ \"q4Fq\":\n/***/ (function(module, exports) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  var ModalStore = function () {\n    function ModalStore() {\n      _classCallCheck(this, ModalStore);\n\n      this.store = {\n        columns: 3,\n        issues: [],\n        issuesCount: false,\n        selectedIssues: [],\n        showAddIssuesModal: false,\n        activeTab: 'all',\n        selectedList: null,\n        searchTerm: '',\n        loading: false,\n        loadingNewPage: false,\n        page: 1,\n        perPage: 50\n      };\n\n      this.setDefaultFilter();\n    }\n\n    _createClass(ModalStore, [{\n      key: 'setDefaultFilter',\n      value: function setDefaultFilter() {\n        this.store.filter = {\n          author_id: '',\n          assignee_id: '',\n          milestone_title: '',\n          label_name: []\n        };\n      }\n    }, {\n      key: 'selectedCount',\n      value: function selectedCount() {\n        return this.getSelectedIssues().length;\n      }\n    }, {\n      key: 'toggleIssue',\n      value: function toggleIssue(issueObj) {\n        var issue = issueObj;\n        var selected = issue.selected;\n\n        issue.selected = !selected;\n\n        if (!selected) {\n          this.addSelectedIssue(issue);\n        } else {\n          this.removeSelectedIssue(issue);\n        }\n      }\n    }, {\n      key: 'toggleAll',\n      value: function toggleAll() {\n        var _this = this;\n\n        var select = this.selectedCount() !== this.store.issues.length;\n\n        this.store.issues.forEach(function (issue) {\n          var issueUpdate = issue;\n\n          if (issueUpdate.selected !== select) {\n            issueUpdate.selected = select;\n\n            if (select) {\n              _this.addSelectedIssue(issue);\n            } else {\n              _this.removeSelectedIssue(issue);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'getSelectedIssues',\n      value: function getSelectedIssues() {\n        return this.store.selectedIssues.filter(function (issue) {\n          return issue.selected;\n        });\n      }\n    }, {\n      key: 'addSelectedIssue',\n      value: function addSelectedIssue(issue) {\n        var index = this.selectedIssueIndex(issue);\n\n        if (index === -1) {\n          this.store.selectedIssues.push(issue);\n        }\n      }\n    }, {\n      key: 'removeSelectedIssue',\n      value: function removeSelectedIssue(issue) {\n        var forcePurge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (this.store.activeTab === 'all' || forcePurge) {\n          this.store.selectedIssues = this.store.selectedIssues.filter(function (fIssue) {\n            return fIssue.id !== issue.id;\n          });\n        }\n      }\n    }, {\n      key: 'purgeUnselectedIssues',\n      value: function purgeUnselectedIssues() {\n        var _this2 = this;\n\n        this.store.selectedIssues.forEach(function (issue) {\n          if (!issue.selected) {\n            _this2.removeSelectedIssue(issue, true);\n          }\n        });\n      }\n    }, {\n      key: 'selectedIssueIndex',\n      value: function selectedIssueIndex(issue) {\n        return this.store.selectedIssues.indexOf(issue);\n      }\n    }, {\n      key: 'findSelectedIssue',\n      value: function findSelectedIssue(issue) {\n        return this.store.selectedIssues.filter(function (filteredIssue) {\n          return filteredIssue.id === issue.id;\n        })[0];\n      }\n    }]);\n\n    return ModalStore;\n  }();\n\n  gl.issueBoards.ModalStore = new ModalStore();\n})();\n\n/***/ }),\n\n/***/ \"qMC/\":\n/***/ (function(module, exports) {\n\n/* global Vue */\n/* global dateFormat */\n\nVue.filter('due-date', function (value) {\n  var date = new Date(value);\n  return dateFormat(date, 'mmm d, yyyy', true);\n});\n\n/***/ }),\n\n/***/ \"qqgg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* global Vue */\n__webpack_require__(\"pXFb\");\n\nvar Store = gl.issueBoards.BoardsStore;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = {\n  name: 'BoardsIssueCard',\n  template: '\\n    <li class=\"card\"\\n      :class=\"{ \\'user-can-drag\\': !disabled && issue.id, \\'is-disabled\\': disabled || !issue.id, \\'is-active\\': issueDetailVisible }\"\\n      :index=\"index\"\\n      :data-issue-id=\"issue.id\"\\n      @mousedown=\"mouseDown\"\\n      @mousemove=\"mouseMove\"\\n      @mouseup=\"showIssue($event)\">\\n      <issue-card-inner\\n        :list=\"list\"\\n        :issue=\"issue\"\\n        :issue-link-base=\"issueLinkBase\"\\n        :root-path=\"rootPath\" />\\n    </li>\\n  ',\n  components: {\n    'issue-card-inner': gl.issueBoards.IssueCardInner\n  },\n  props: {\n    list: Object,\n    issue: Object,\n    issueLinkBase: String,\n    disabled: Boolean,\n    index: Number,\n    rootPath: String\n  },\n  data: function data() {\n    return {\n      showDetail: false,\n      detailIssue: Store.detail\n    };\n  },\n\n  computed: {\n    issueDetailVisible: function issueDetailVisible() {\n      return this.detailIssue.issue && this.detailIssue.issue.id === this.issue.id;\n    }\n  },\n  methods: {\n    mouseDown: function mouseDown() {\n      this.showDetail = true;\n    },\n    mouseMove: function mouseMove() {\n      this.showDetail = false;\n    },\n    showIssue: function showIssue(e) {\n      var targetTagName = e.target.tagName.toLowerCase();\n\n      if (targetTagName === 'a' || targetTagName === 'button') return;\n\n      if (this.showDetail) {\n        this.showDetail = false;\n\n        if (Store.detail.issue && Store.detail.issue.id === this.issue.id) {\n          Store.detail.issue = {};\n        } else {\n          Store.detail.issue = this.issue;\n          Store.detail.list = this.list;\n        }\n      }\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"rFKb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global Vue */\nvar userFilter = __webpack_require__(\"wH23\");\nvar milestoneFilter = __webpack_require__(\"MlV/\");\nvar labelFilter = __webpack_require__(\"fOmY\");\n\nmodule.exports = Vue.extend({\n  name: 'modal-filters',\n  props: {\n    projectId: {\n      type: Number,\n      required: true\n    },\n    milestonePath: {\n      type: String,\n      required: true\n    },\n    labelPath: {\n      type: String,\n      required: true\n    }\n  },\n  destroyed: function destroyed() {\n    gl.issueBoards.ModalStore.setDefaultFilter();\n  },\n\n  components: {\n    userFilter: userFilter,\n    milestoneFilter: milestoneFilter,\n    labelFilter: labelFilter\n  },\n  template: '\\n    <div class=\"modal-filters\">\\n      <user-filter\\n        dropdown-class-name=\"dropdown-menu-author\"\\n        toggle-class-name=\"js-user-search js-author-search\"\\n        toggle-label=\"Author\"\\n        field-name=\"author_id\"\\n        :project-id=\"projectId\"></user-filter>\\n      <user-filter\\n        dropdown-class-name=\"dropdown-menu-author\"\\n        toggle-class-name=\"js-assignee-search\"\\n        toggle-label=\"Assignee\"\\n        field-name=\"assignee_id\"\\n        :null-user=\"true\"\\n        :project-id=\"projectId\"></user-filter>\\n      <milestone-filter :milestone-path=\"milestonePath\"></milestone-filter>\\n      <label-filter :label-path=\"labelPath\"></label-filter>\\n    </div>\\n  '\n});\n\n/***/ }),\n\n/***/ \"rP25\":\n/***/ (function(module, exports) {\n\n/* eslint-disable space-before-function-paren, comma-dangle */\n/* global Vue */\n/* global ListLabel */\n\n(function () {\n  var Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardBlankState = Vue.extend({\n    data: function data() {\n      return {\n        predefinedLabels: [new ListLabel({ title: 'To Do', color: '#F0AD4E' }), new ListLabel({ title: 'Doing', color: '#5CB85C' })]\n      };\n    },\n\n    methods: {\n      addDefaultLists: function addDefaultLists() {\n        this.clearBlankState();\n\n        this.predefinedLabels.forEach(function (label, i) {\n          Store.addList({\n            title: label.title,\n            position: i,\n            list_type: 'label',\n            label: {\n              title: label.title,\n              color: label.color\n            }\n          });\n        });\n\n        Store.state.lists = _.sortBy(Store.state.lists, 'position');\n\n        // Save the labels\n        gl.boardService.generateDefaultLists().then(function (resp) {\n          resp.json().forEach(function (listObj) {\n            var list = Store.findList('title', listObj.title);\n\n            list.id = listObj.id;\n            list.label.id = listObj.label.id;\n            list.getIssues();\n          });\n        });\n      },\n\n      clearBlankState: Store.removeBlankState.bind(Store)\n    }\n  });\n})();\n\n/***/ }),\n\n/***/ \"unKI\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {/* eslint-disable comma-dangle, space-before-function-paren, no-alert */\n/* global Vue */\n\n(function () {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardDelete = Vue.extend({\n    props: {\n      list: Object\n    },\n    methods: {\n      deleteBoard: function deleteBoard() {\n        $(this.$el).tooltip('hide');\n\n        if (confirm('Are you sure you want to delete this list?')) {\n          this.list.destroy();\n        }\n      }\n    }\n  });\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"wH23\":\n/***/ (function(module, exports) {\n\n/* eslint-disable no-new */\n/* global Vue */\n/* global UsersSelect */\nmodule.exports = Vue.extend({\n  name: 'filter-user',\n  props: {\n    toggleClassName: {\n      type: String,\n      required: true\n    },\n    dropdownClassName: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    toggleLabel: {\n      type: String,\n      required: true\n    },\n    fieldName: {\n      type: String,\n      required: true\n    },\n    nullUser: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    projectId: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    new UsersSelect(null, this.$refs.dropdown);\n  },\n\n  computed: {\n    currentUsername: function currentUsername() {\n      return gon.current_username;\n    },\n    dropdownTitle: function dropdownTitle() {\n      return 'Filter by ' + this.toggleLabel.toLowerCase();\n    },\n    inputPlaceholder: function inputPlaceholder() {\n      return 'Search ' + this.toggleLabel.toLowerCase();\n    }\n  },\n  template: '\\n    <div class=\"dropdown\">\\n      <button\\n        class=\"dropdown-menu-toggle js-user-search\"\\n        :class=\"toggleClassName\"\\n        type=\"button\"\\n        data-toggle=\"dropdown\"\\n        data-current-user=\"true\"\\n        :data-any-user=\"\\'Any \\' + toggleLabel\"\\n        :data-null-user=\"nullUser\"\\n        :data-field-name=\"fieldName\"\\n        :data-project-id=\"projectId\"\\n        :data-first-user=\"currentUsername\"\\n        ref=\"dropdown\">\\n        <span class=\"dropdown-toggle-text\">\\n          {{ toggleLabel }}\\n        </span>\\n        <i class=\"fa fa-chevron-down\"></i>\\n      </button>\\n      <div\\n        class=\"dropdown-menu dropdown-select dropdown-menu-user dropdown-menu-selectable\"\\n        :class=\"dropdownClassName\">\\n        <div class=\"dropdown-title\">\\n          {{ dropdownTitle }}\\n          <button\\n            class=\"dropdown-title-button dropdown-menu-close\"\\n            aria-label=\"Close\"\\n            type=\"button\">\\n            <i class=\"fa fa-times dropdown-menu-close-icon\"></i>\\n          </button>\\n        </div>\\n        <div class=\"dropdown-input\">\\n          <input\\n            type=\"search\"\\n            class=\"dropdown-input-field\"\\n            autocomplete=\"off\"\\n            :placeholder=\"inputPlaceholder\" />\\n          <i class=\"fa fa-search dropdown-input-search\"></i>\\n          <i\\n            role=\"button\"\\n            class=\"fa fa-times dropdown-input-clear js-dropdown-input-clear\">\\n          </i>\\n        </div>\\n        <div class=\"dropdown-content\"></div>\\n        <div class=\"dropdown-loading\"><i class=\"fa fa-spinner fa-spin\"></i></div>\\n      </div>\\n    </div>\\n  '\n});\n\n/***/ })\n\n},[\"IyBU\"]);\n\n\n// WEBPACK FOOTER //\n// boards.4401b93ffc2f5cbcd8f5.bundle.js","/* eslint-disable comma-dangle, space-before-function-paren, one-var */\n/* global Vue */\n/* global Sortable */\n\nrequire('./board_blank_state');\nrequire('./board_delete');\nrequire('./board_list');\n\n(() => {\n  const Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.Board = Vue.extend({\n    template: '#js-board-template',\n    components: {\n      'board-list': gl.issueBoards.BoardList,\n      'board-delete': gl.issueBoards.BoardDelete,\n      'board-blank-state': gl.issueBoards.BoardBlankState\n    },\n    props: {\n      list: Object,\n      disabled: Boolean,\n      issueLinkBase: String,\n      rootPath: String,\n    },\n    data () {\n      return {\n        detailIssue: Store.detail,\n        filters: Store.state.filters,\n      };\n    },\n    watch: {\n      filters: {\n        handler () {\n          this.list.page = 1;\n          this.list.getIssues(true);\n        },\n        deep: true\n      },\n      detailIssue: {\n        handler () {\n          if (!Object.keys(this.detailIssue.issue).length) return;\n\n          const issue = this.list.findIssue(this.detailIssue.issue.id);\n\n          if (issue) {\n            const offsetLeft = this.$el.offsetLeft;\n            const boardsList = document.querySelectorAll('.boards-list')[0];\n            const left = boardsList.scrollLeft - offsetLeft;\n            let right = (offsetLeft + this.$el.offsetWidth);\n\n            if (window.innerWidth > 768 && boardsList.classList.contains('is-compact')) {\n              // -290 here because width of boardsList is animating so therefore\n              // getting the width here is incorrect\n              // 290 is the width of the sidebar\n              right -= (boardsList.offsetWidth - 290);\n            } else {\n              right -= boardsList.offsetWidth;\n            }\n\n            if (right - boardsList.scrollLeft > 0) {\n              $(boardsList).animate({\n                scrollLeft: right\n              }, this.sortableOptions.animation);\n            } else if (left > 0) {\n              $(boardsList).animate({\n                scrollLeft: offsetLeft\n              }, this.sortableOptions.animation);\n            }\n          }\n        },\n        deep: true\n      }\n    },\n    methods: {\n      showNewIssueForm() {\n        this.$refs['board-list'].showIssueForm = !this.$refs['board-list'].showIssueForm;\n      }\n    },\n    mounted () {\n      this.sortableOptions = gl.issueBoards.getBoardSortableDefaultOptions({\n        disabled: this.disabled,\n        group: 'boards',\n        draggable: '.is-draggable',\n        handle: '.js-board-handle',\n        onEnd: (e) => {\n          gl.issueBoards.onEnd();\n\n          if (e.newIndex !== undefined && e.oldIndex !== e.newIndex) {\n            const order = this.sortable.toArray();\n            const list = Store.findList('id', parseInt(e.item.dataset.id, 10));\n\n            this.$nextTick(() => {\n              Store.moveList(list, order);\n            });\n          }\n        }\n      });\n\n      this.sortable = Sortable.create(this.$el.parentNode, this.sortableOptions);\n    },\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/board.js","/* eslint-disable comma-dangle, space-before-function-paren, no-new */\n/* global Vue */\n/* global IssuableContext */\n/* global MilestoneSelect */\n/* global LabelsSelect */\n/* global Sidebar */\n\nrequire('./sidebar/remove_issue');\n\n(() => {\n  const Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardSidebar = Vue.extend({\n    props: {\n      currentUser: Object\n    },\n    data() {\n      return {\n        detail: Store.detail,\n        issue: {},\n        list: {},\n      };\n    },\n    computed: {\n      showSidebar () {\n        return Object.keys(this.issue).length;\n      }\n    },\n    watch: {\n      detail: {\n        handler () {\n          if (this.issue.id !== this.detail.issue.id) {\n            $('.js-issue-board-sidebar', this.$el).each((i, el) => {\n              $(el).data('glDropdown').clearMenu();\n            });\n          }\n\n          this.issue = this.detail.issue;\n          this.list = this.detail.list;\n        },\n        deep: true\n      },\n      issue () {\n        if (this.showSidebar) {\n          this.$nextTick(() => {\n            $('.right-sidebar').getNiceScroll(0).doScrollTop(0, 0);\n            $('.right-sidebar').getNiceScroll().resize();\n          });\n        }\n      }\n    },\n    methods: {\n      closeSidebar () {\n        this.detail.issue = {};\n      }\n    },\n    mounted () {\n      new IssuableContext(this.currentUser);\n      new MilestoneSelect();\n      new gl.DueDateSelectors();\n      new LabelsSelect();\n      new Sidebar();\n      gl.Subscription.bindAll('.subscription');\n    },\n    components: {\n      removeBtn: gl.issueBoards.RemoveIssueBtn,\n    },\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/board_sidebar.js","/* global ListIssue */\nconst Store = gl.issueBoards.BoardsStore;\n\nexport default {\n  name: 'BoardNewIssue',\n  props: {\n    list: Object,\n  },\n  data() {\n    return {\n      title: '',\n      error: false,\n    };\n  },\n  methods: {\n    submit(e) {\n      e.preventDefault();\n      if (this.title.trim() === '') return;\n\n      this.error = false;\n\n      const labels = this.list.label ? [this.list.label] : [];\n      const issue = new ListIssue({\n        title: this.title,\n        labels,\n        subscribed: true,\n      });\n\n      this.list.newIssue(issue)\n        .then(() => {\n          // Need this because our jQuery very kindly disables buttons on ALL form submissions\n          $(this.$refs.submitButton).enable();\n\n          Store.detail.issue = issue;\n          Store.detail.list = this.list;\n        })\n        .catch(() => {\n          // Need this because our jQuery very kindly disables buttons on ALL form submissions\n          $(this.$refs.submitButton).enable();\n\n          // Remove the issue\n          this.list.removeIssue(issue);\n\n          // Show error message\n          this.error = true;\n        });\n\n      this.cancel();\n    },\n    cancel() {\n      this.title = '';\n      gl.IssueBoardsApp.$emit(`hide-issue-form-${this.list.id}`);\n    },\n  },\n  mounted() {\n    this.$refs.input.focus();\n  },\n  template: `\n    <div class=\"card board-new-issue-form\">\n      <form @submit=\"submit($event)\">\n        <div class=\"flash-container\"\n          v-if=\"error\">\n          <div class=\"flash-alert\">\n            An error occured. Please try again.\n          </div>\n        </div>\n        <label class=\"label-light\"\n          :for=\"list.id + '-title'\">\n          Title\n        </label>\n        <input class=\"form-control\"\n          type=\"text\"\n          v-model=\"title\"\n          ref=\"input\"\n          :id=\"list.id + '-title'\" />\n        <div class=\"clearfix prepend-top-10\">\n          <button class=\"btn btn-success pull-left\"\n            type=\"submit\"\n            :disabled=\"title === ''\"\n            ref=\"submit-button\">\n            Submit issue\n          </button>\n          <button class=\"btn btn-default pull-right\"\n            type=\"button\"\n            @click=\"cancel\">\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  `,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/board_new_issue.js","/* global Vue */\nrequire('./tabs');\nconst modalFilters = require('./filters');\n\n(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalHeader = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    props: {\n      projectId: {\n        type: Number,\n        required: true,\n      },\n      milestonePath: {\n        type: String,\n        required: true,\n      },\n      labelPath: {\n        type: String,\n        required: true,\n      },\n    },\n    data() {\n      return ModalStore.store;\n    },\n    computed: {\n      selectAllText() {\n        if (ModalStore.selectedCount() !== this.issues.length || this.issues.length === 0) {\n          return 'Select all';\n        }\n\n        return 'Deselect all';\n      },\n      showSearch() {\n        return this.activeTab === 'all' && !this.loading && this.issuesCount > 0;\n      },\n    },\n    methods: {\n      toggleAll() {\n        this.$refs.selectAllBtn.blur();\n\n        ModalStore.toggleAll();\n      },\n    },\n    components: {\n      'modal-tabs': gl.issueBoards.ModalTabs,\n      modalFilters,\n    },\n    template: `\n      <div>\n        <header class=\"add-issues-header form-actions\">\n          <h2>\n            Add issues\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              @click=\"toggleModal(false)\">\n              <span aria-hidden=\"true\">×</span>\n            </button>\n          </h2>\n        </header>\n        <modal-tabs v-if=\"!loading && issuesCount > 0\"></modal-tabs>\n        <div\n          class=\"add-issues-search append-bottom-10\"\n          v-if=\"showSearch\">\n          <modal-filters\n            :project-id=\"projectId\"\n            :milestone-path=\"milestonePath\"\n            :label-path=\"labelPath\">\n          </modal-filters>\n          <input\n            placeholder=\"Search issues...\"\n            class=\"form-control\"\n            type=\"search\"\n            v-model=\"searchTerm\" />\n          <button\n            type=\"button\"\n            class=\"btn btn-success btn-inverted prepend-left-10\"\n            ref=\"selectAllBtn\"\n            @click=\"toggleAll\">\n            {{ selectAllText }}\n          </button>\n        </div>\n      </div>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/header.js","/* eslint-disable comma-dangle, space-before-function-paren, max-len */\n/* global Vue */\n/* global Sortable */\n\nimport boardNewIssue from './board_new_issue';\nimport boardCard from './board_card';\n\n(() => {\n  const Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardList = Vue.extend({\n    template: '#js-board-list-template',\n    components: {\n      boardCard,\n      boardNewIssue,\n    },\n    props: {\n      disabled: Boolean,\n      list: Object,\n      issues: Array,\n      loading: Boolean,\n      issueLinkBase: String,\n      rootPath: String,\n    },\n    data () {\n      return {\n        scrollOffset: 250,\n        filters: Store.state.filters,\n        showCount: false,\n        showIssueForm: false\n      };\n    },\n    watch: {\n      filters: {\n        handler () {\n          this.list.loadingMore = false;\n          this.$refs.list.scrollTop = 0;\n        },\n        deep: true\n      },\n      issues () {\n        this.$nextTick(() => {\n          if (this.scrollHeight() <= this.listHeight() && this.list.issuesSize > this.list.issues.length) {\n            this.list.page += 1;\n            this.list.getIssues(false);\n          }\n\n          if (this.scrollHeight() > this.listHeight()) {\n            this.showCount = true;\n          } else {\n            this.showCount = false;\n          }\n        });\n      }\n    },\n    methods: {\n      listHeight () {\n        return this.$refs.list.getBoundingClientRect().height;\n      },\n      scrollHeight () {\n        return this.$refs.list.scrollHeight;\n      },\n      scrollTop () {\n        return this.$refs.list.scrollTop + this.listHeight();\n      },\n      loadNextPage () {\n        const getIssues = this.list.nextPage();\n\n        if (getIssues) {\n          this.list.loadingMore = true;\n          getIssues.then(() => {\n            this.list.loadingMore = false;\n          });\n        }\n      },\n      toggleForm() {\n        this.showIssueForm = !this.showIssueForm;\n      },\n    },\n    created() {\n      gl.IssueBoardsApp.$on(`hide-issue-form-${this.list.id}`, this.toggleForm);\n    },\n    mounted () {\n      const options = gl.issueBoards.getBoardSortableDefaultOptions({\n        scroll: document.querySelectorAll('.boards-list')[0],\n        group: 'issues',\n        disabled: this.disabled,\n        filter: '.board-list-count, .is-disabled',\n        dataIdAttr: 'data-issue-id',\n        onStart: (e) => {\n          const card = this.$refs.issue[e.oldIndex];\n\n          card.showDetail = false;\n          Store.moving.list = card.list;\n          Store.moving.issue = Store.moving.list.findIssue(+e.item.dataset.issueId);\n\n          gl.issueBoards.onStart();\n        },\n        onAdd: (e) => {\n          gl.issueBoards.BoardsStore.moveIssueToList(Store.moving.list, this.list, Store.moving.issue, e.newIndex);\n\n          this.$nextTick(() => {\n            e.item.remove();\n          });\n        },\n        onUpdate: (e) => {\n          const sortedArray = this.sortable.toArray().filter(id => id !== '-1');\n          gl.issueBoards.BoardsStore.moveIssueInList(this.list, Store.moving.issue, e.oldIndex, e.newIndex, sortedArray);\n        },\n        onMove(e) {\n          return !e.related.classList.contains('board-list-count');\n        }\n      });\n\n      this.sortable = Sortable.create(this.$refs.list, options);\n\n      // Scroll event on list to load more\n      this.$refs.list.onscroll = () => {\n        if ((this.scrollTop() > this.scrollHeight() - this.scrollOffset) && !this.list.loadingMore) {\n          this.loadNextPage();\n        }\n      };\n    },\n    beforeDestroy() {\n      gl.IssueBoardsApp.$off(`hide-issue-form-${this.list.id}`, this.toggleForm);\n    },\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/board_list.js","/* eslint-disable no-unused-vars */\n\nclass ListMilestone {\n  constructor(obj) {\n    this.id = obj.id;\n    this.title = obj.title;\n  }\n}\n\nwindow.ListMilestone = ListMilestone;\n\n\n\n// WEBPACK FOOTER //\n// ./boards/models/milestone.js","/* global Vue */\n(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalTabs = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    data() {\n      return ModalStore.store;\n    },\n    computed: {\n      selectedCount() {\n        return ModalStore.selectedCount();\n      },\n    },\n    destroyed() {\n      this.activeTab = 'all';\n    },\n    template: `\n      <div class=\"top-area prepend-top-10 append-bottom-10\">\n        <ul class=\"nav-links issues-state-filters\">\n          <li :class=\"{ 'active': activeTab == 'all' }\">\n            <a\n              href=\"#\"\n              role=\"button\"\n              @click.prevent=\"changeTab('all')\">\n              All issues\n              <span class=\"badge\">\n                {{ issuesCount }}\n              </span>\n            </a>\n          </li>\n          <li :class=\"{ 'active': activeTab == 'selected' }\">\n            <a\n              href=\"#\"\n              role=\"button\"\n              @click.prevent=\"changeTab('selected')\">\n              Selected issues\n              <span class=\"badge\">\n                {{ selectedCount }}\n              </span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/tabs.js","/* eslint-disable space-before-function-paren, comma-dangle, no-param-reassign, camelcase, max-len, no-unused-vars */\n/* global Vue */\n\nclass BoardService {\n  constructor (root, bulkUpdatePath, boardId) {\n    this.boards = Vue.resource(`${root}{/id}.json`, {}, {\n      issues: {\n        method: 'GET',\n        url: `${root}/${boardId}/issues.json`\n      }\n    });\n    this.lists = Vue.resource(`${root}/${boardId}/lists{/id}`, {}, {\n      generate: {\n        method: 'POST',\n        url: `${root}/${boardId}/lists/generate.json`\n      }\n    });\n    this.issue = Vue.resource(`${root}/${boardId}/issues{/id}`, {});\n    this.issues = Vue.resource(`${root}/${boardId}/lists{/id}/issues`, {}, {\n      bulkUpdate: {\n        method: 'POST',\n        url: bulkUpdatePath,\n      },\n    });\n\n    Vue.http.interceptors.push((request, next) => {\n      request.headers['X-CSRF-Token'] = $.rails.csrfToken();\n      next();\n    });\n  }\n\n  all () {\n    return this.lists.get();\n  }\n\n  generateDefaultLists () {\n    return this.lists.generate({});\n  }\n\n  createList (label_id) {\n    return this.lists.save({}, {\n      list: {\n        label_id\n      }\n    });\n  }\n\n  updateList (id, position) {\n    return this.lists.update({ id }, {\n      list: {\n        position\n      }\n    });\n  }\n\n  destroyList (id) {\n    return this.lists.delete({ id });\n  }\n\n  getIssuesForList (id, filter = {}) {\n    const data = { id };\n    Object.keys(filter).forEach((key) => { data[key] = filter[key]; });\n\n    return this.issues.get(data);\n  }\n\n  moveIssue (id, from_list_id = null, to_list_id = null, move_before_iid = null, move_after_iid = null) {\n    return this.issue.update({ id }, {\n      from_list_id,\n      to_list_id,\n      move_before_iid,\n      move_after_iid,\n    });\n  }\n\n  newIssue (id, issue) {\n    return this.issues.save({ id }, {\n      issue\n    });\n  }\n\n  getBacklog(data) {\n    return this.boards.issues(data);\n  }\n\n  bulkUpdate(issueIds, extraData = {}) {\n    const data = {\n      update: Object.assign(extraData, {\n        issuable_ids: issueIds.join(','),\n      }),\n    };\n\n    return this.issues.bulkUpdate(data);\n  }\n}\n\nwindow.BoardService = BoardService;\n\n\n\n// WEBPACK FOOTER //\n// ./boards/services/board_service.js","/* eslint-disable no-new */\n/* global Vue */\n/* global Flash */\n(() => {\n  const Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.RemoveIssueBtn = Vue.extend({\n    props: {\n      issue: {\n        type: Object,\n        required: true,\n      },\n      list: {\n        type: Object,\n        required: true,\n      },\n    },\n    methods: {\n      removeIssue() {\n        const issue = this.issue;\n        const lists = issue.getLists();\n        const labelIds = lists.map(list => list.label.id);\n\n        // Post the remove data\n        gl.boardService.bulkUpdate([issue.globalId], {\n          remove_label_ids: labelIds,\n        }).catch(() => {\n          new Flash('Failed to remove issue from board, please try again.', 'alert');\n\n          lists.forEach((list) => {\n            list.addIssue(issue);\n          });\n        });\n\n        // Remove from the frontend store\n        lists.forEach((list) => {\n          list.removeIssue(issue);\n        });\n\n        Store.detail.issue = {};\n      },\n    },\n    template: `\n      <div\n        class=\"block list\"\n        v-if=\"list.type !== 'done'\">\n        <button\n          class=\"btn btn-default btn-block\"\n          type=\"button\"\n          @click=\"removeIssue\">\n          Remove from board\n        </button>\n      </div>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/sidebar/remove_issue.js","/* eslint-disable one-var, quote-props, comma-dangle, space-before-function-paren */\n/* global Vue */\n/* global BoardService */\n\nwindow.Vue = require('vue');\nwindow.Vue.use(require('vue-resource'));\nrequire('./models/issue');\nrequire('./models/label');\nrequire('./models/list');\nrequire('./models/milestone');\nrequire('./models/user');\nrequire('./stores/boards_store');\nrequire('./stores/modal_store');\nrequire('./services/board_service');\nrequire('./mixins/modal_mixins');\nrequire('./mixins/sortable_default_options');\nrequire('./filters/due_date_filters');\nrequire('./components/board');\nrequire('./components/board_sidebar');\nrequire('./components/new_list_dropdown');\nrequire('./components/modal/index');\nrequire('../vue_shared/vue_resource_interceptor');\n\n$(() => {\n  const $boardApp = document.getElementById('board-app');\n  const Store = gl.issueBoards.BoardsStore;\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  window.gl = window.gl || {};\n\n  if (gl.IssueBoardsApp) {\n    gl.IssueBoardsApp.$destroy(true);\n  }\n\n  Store.create();\n\n  gl.IssueBoardsApp = new Vue({\n    el: $boardApp,\n    components: {\n      'board': gl.issueBoards.Board,\n      'board-sidebar': gl.issueBoards.BoardSidebar,\n      'board-add-issues-modal': gl.issueBoards.IssuesModal,\n    },\n    data: {\n      state: Store.state,\n      loading: true,\n      endpoint: $boardApp.dataset.endpoint,\n      boardId: $boardApp.dataset.boardId,\n      disabled: $boardApp.dataset.disabled === 'true',\n      issueLinkBase: $boardApp.dataset.issueLinkBase,\n      rootPath: $boardApp.dataset.rootPath,\n      bulkUpdatePath: $boardApp.dataset.bulkUpdatePath,\n      detailIssue: Store.detail\n    },\n    computed: {\n      detailIssueVisible () {\n        return Object.keys(this.detailIssue.issue).length;\n      },\n    },\n    created () {\n      gl.boardService = new BoardService(this.endpoint, this.bulkUpdatePath, this.boardId);\n    },\n    mounted () {\n      Store.disabled = this.disabled;\n      gl.boardService.all()\n        .then((resp) => {\n          resp.json().forEach((board) => {\n            const list = Store.addList(board);\n\n            if (list.type === 'done') {\n              list.position = Infinity;\n            }\n          });\n\n          this.state.lists = _.sortBy(this.state.lists, 'position');\n\n          Store.addBlankState();\n          this.loading = false;\n        });\n    }\n  });\n\n  gl.IssueBoardsSearch = new Vue({\n    el: document.getElementById('js-boards-search'),\n    data: {\n      filters: Store.state.filters\n    },\n    mounted () {\n      gl.issueBoards.newListDropdownInit();\n    }\n  });\n\n  gl.IssueBoardsModalAddBtn = new Vue({\n    mixins: [gl.issueBoards.ModalMixins],\n    el: document.getElementById('js-add-issues-btn'),\n    data: {\n      modal: ModalStore.store,\n      store: Store.state,\n    },\n    watch: {\n      disabled() {\n        this.updateTooltip();\n      },\n    },\n    computed: {\n      disabled() {\n        return !this.store.lists.filter(list => list.type !== 'blank' && list.type !== 'done').length;\n      },\n      tooltipTitle() {\n        if (this.disabled) {\n          return 'Please add a list to your board first';\n        }\n\n        return '';\n      },\n    },\n    methods: {\n      updateTooltip() {\n        const $tooltip = $(this.$el);\n\n        this.$nextTick(() => {\n          if (this.disabled) {\n            $tooltip.tooltip();\n          } else {\n            $tooltip.tooltip('destroy');\n          }\n        });\n      },\n      openModal() {\n        if (!this.disabled) {\n          this.toggleModal(true);\n        }\n      },\n    },\n    mounted() {\n      this.updateTooltip();\n    },\n    template: `\n      <button\n        class=\"btn btn-create pull-right prepend-left-10\"\n        type=\"button\"\n        data-placement=\"bottom\"\n        :class=\"{ 'disabled': disabled }\"\n        :title=\"tooltipTitle\"\n        :aria-disabled=\"disabled\"\n        @click=\"openModal\">\n        Add issues\n      </button>\n    `,\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./boards/boards_bundle.js","/* eslint-disable space-before-function-paren, no-underscore-dangle, class-methods-use-this, consistent-return, no-shadow, no-param-reassign, max-len, no-unused-vars */\n/* global ListIssue */\n/* global ListLabel */\n\nclass List {\n  constructor (obj) {\n    this.id = obj.id;\n    this._uid = this.guid();\n    this.position = obj.position;\n    this.title = obj.title;\n    this.type = obj.list_type;\n    this.preset = ['done', 'blank'].indexOf(this.type) > -1;\n    this.filters = gl.issueBoards.BoardsStore.state.filters;\n    this.page = 1;\n    this.loading = true;\n    this.loadingMore = false;\n    this.issues = [];\n    this.issuesSize = 0;\n\n    if (obj.label) {\n      this.label = new ListLabel(obj.label);\n    }\n\n    if (this.type !== 'blank' && this.id) {\n      this.getIssues();\n    }\n  }\n\n  guid() {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n  }\n\n  save () {\n    return gl.boardService.createList(this.label.id)\n      .then((resp) => {\n        const data = resp.json();\n\n        this.id = data.id;\n        this.type = data.list_type;\n        this.position = data.position;\n\n        return this.getIssues();\n      });\n  }\n\n  destroy () {\n    const index = gl.issueBoards.BoardsStore.state.lists.indexOf(this);\n    gl.issueBoards.BoardsStore.state.lists.splice(index, 1);\n    gl.issueBoards.BoardsStore.updateNewListDropdown(this.id);\n\n    gl.boardService.destroyList(this.id);\n  }\n\n  update () {\n    gl.boardService.updateList(this.id, this.position);\n  }\n\n  nextPage () {\n    if (this.issuesSize > this.issues.length) {\n      this.page += 1;\n\n      return this.getIssues(false);\n    }\n  }\n\n  getIssues (emptyIssues = true) {\n    const filters = this.filters;\n    const data = { page: this.page };\n\n    Object.keys(filters).forEach((key) => { data[key] = filters[key]; });\n\n    if (this.label) {\n      data.label_name = data.label_name.filter(label => label !== this.label.title);\n    }\n\n    if (emptyIssues) {\n      this.loading = true;\n    }\n\n    return gl.boardService.getIssuesForList(this.id, data)\n      .then((resp) => {\n        const data = resp.json();\n        this.loading = false;\n        this.issuesSize = data.size;\n\n        if (emptyIssues) {\n          this.issues = [];\n        }\n\n        this.createIssues(data.issues);\n      });\n  }\n\n  newIssue (issue) {\n    this.addIssue(issue);\n    this.issuesSize += 1;\n\n    return gl.boardService.newIssue(this.id, issue)\n      .then((resp) => {\n        const data = resp.json();\n        issue.id = data.iid;\n      });\n  }\n\n  createIssues (data) {\n    data.forEach((issueObj) => {\n      this.addIssue(new ListIssue(issueObj));\n    });\n  }\n\n  addIssue (issue, listFrom, newIndex) {\n    let moveBeforeIid = null;\n    let moveAfterIid = null;\n\n    if (!this.findIssue(issue.id)) {\n      if (newIndex !== undefined) {\n        this.issues.splice(newIndex, 0, issue);\n\n        if (this.issues[newIndex - 1]) {\n          moveBeforeIid = this.issues[newIndex - 1].id;\n        }\n\n        if (this.issues[newIndex + 1]) {\n          moveAfterIid = this.issues[newIndex + 1].id;\n        }\n      } else {\n        this.issues.push(issue);\n      }\n\n      if (this.label) {\n        issue.addLabel(this.label);\n      }\n\n      if (listFrom) {\n        this.issuesSize += 1;\n\n        this.updateIssueLabel(issue, listFrom, moveBeforeIid, moveAfterIid);\n      }\n    }\n  }\n\n  moveIssue (issue, oldIndex, newIndex, moveBeforeIid, moveAfterIid) {\n    this.issues.splice(oldIndex, 1);\n    this.issues.splice(newIndex, 0, issue);\n\n    gl.boardService.moveIssue(issue.id, null, null, moveBeforeIid, moveAfterIid);\n  }\n\n  updateIssueLabel(issue, listFrom, moveBeforeIid, moveAfterIid) {\n    gl.boardService.moveIssue(issue.id, listFrom.id, this.id, moveBeforeIid, moveAfterIid)\n      .then(() => {\n        listFrom.getIssues(false);\n      });\n  }\n\n  findIssue (id) {\n    return this.issues.filter(issue => issue.id === id)[0];\n  }\n\n  removeIssue (removeIssue) {\n    this.issues = this.issues.filter((issue) => {\n      const matchesRemove = removeIssue.id === issue.id;\n\n      if (matchesRemove) {\n        this.issuesSize -= 1;\n        issue.removeLabel(this.label);\n      }\n\n      return !matchesRemove;\n    });\n  }\n}\n\nwindow.List = List;\n\n\n\n// WEBPACK FOOTER //\n// ./boards/models/list.js","/* eslint-disable no-new */\n/* global Vue */\n/* global MilestoneSelect */\nmodule.exports = Vue.extend({\n  name: 'filter-milestone',\n  props: {\n    milestonePath: {\n      type: String,\n      required: true,\n    },\n  },\n  mounted() {\n    new MilestoneSelect(null, this.$refs.dropdown);\n  },\n  template: `\n    <div class=\"dropdown\">\n      <button\n        class=\"dropdown-menu-toggle js-milestone-select\"\n        type=\"button\"\n        data-toggle=\"dropdown\"\n        data-show-any=\"true\"\n        data-show-upcoming=\"true\"\n        data-show-started=\"true\"\n        data-field-name=\"milestone_title\"\n        :data-milestones=\"milestonePath\"\n        ref=\"dropdown\">\n        <span class=\"dropdown-toggle-text\">\n          Milestone\n        </span>\n        <i class=\"fa fa-chevron-down\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-select dropdown-menu-selectable dropdown-menu-milestone\">\n        <div class=\"dropdown-title\">\n          <span>Filter by milestone</span>\n          <button\n            class=\"dropdown-title-button dropdown-menu-close\"\n            aria-label=\"Close\"\n            type=\"button\">\n            <i class=\"fa fa-times dropdown-menu-close-icon\"></i>\n          </button>\n        </div>\n        <div class=\"dropdown-input\">\n          <input\n            type=\"search\"\n            class=\"dropdown-input-field\"\n            placeholder=\"Search milestones\"\n            autocomplete=\"off\" />\n          <i class=\"fa fa-search dropdown-input-search\"></i>\n          <i role=\"button\" class=\"fa fa-times dropdown-input-clear js-dropdown-input-clear\"></i>\n        </div>\n        <div class=\"dropdown-content\"></div>\n        <div class=\"dropdown-loading\"><i class=\"fa fa-spinner fa-spin\"></i></div>\n      </div>\n    </div>\n  `,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/filters/milestone.js","/* eslint-disable no-unused-vars, space-before-function-paren */\n\nclass ListLabel {\n  constructor (obj) {\n    this.id = obj.id;\n    this.title = obj.title;\n    this.color = obj.color;\n    this.textColor = obj.text_color;\n    this.description = obj.description;\n    this.priority = (obj.priority !== null) ? obj.priority : Infinity;\n  }\n}\n\nwindow.ListLabel = ListLabel;\n\n\n\n// WEBPACK FOOTER //\n// ./boards/models/label.js","/* global Vue */\n/* global ListIssue */\n/* global bp */\n(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalList = Vue.extend({\n    props: {\n      issueLinkBase: {\n        type: String,\n        required: true,\n      },\n      rootPath: {\n        type: String,\n        required: true,\n      },\n      image: {\n        type: String,\n        required: true,\n      },\n    },\n    data() {\n      return ModalStore.store;\n    },\n    watch: {\n      activeTab() {\n        if (this.activeTab === 'all') {\n          ModalStore.purgeUnselectedIssues();\n        }\n      },\n    },\n    computed: {\n      loopIssues() {\n        if (this.activeTab === 'all') {\n          return this.issues;\n        }\n\n        return this.selectedIssues;\n      },\n      groupedIssues() {\n        const groups = [];\n        this.loopIssues.forEach((issue, i) => {\n          const index = i % this.columns;\n\n          if (!groups[index]) {\n            groups.push([]);\n          }\n\n          groups[index].push(issue);\n        });\n\n        return groups;\n      },\n    },\n    methods: {\n      scrollHandler() {\n        const currentPage = Math.floor(this.issues.length / this.perPage);\n\n        if ((this.scrollTop() > this.scrollHeight() - 100) && !this.loadingNewPage\n          && currentPage === this.page) {\n          this.loadingNewPage = true;\n          this.page += 1;\n        }\n      },\n      toggleIssue(e, issue) {\n        if (e.target.tagName !== 'A') {\n          ModalStore.toggleIssue(issue);\n        }\n      },\n      listHeight() {\n        return this.$refs.list.getBoundingClientRect().height;\n      },\n      scrollHeight() {\n        return this.$refs.list.scrollHeight;\n      },\n      scrollTop() {\n        return this.$refs.list.scrollTop + this.listHeight();\n      },\n      showIssue(issue) {\n        if (this.activeTab === 'all') return true;\n\n        const index = ModalStore.selectedIssueIndex(issue);\n\n        return index !== -1;\n      },\n      setColumnCount() {\n        const breakpoint = bp.getBreakpointSize();\n\n        if (breakpoint === 'lg' || breakpoint === 'md') {\n          this.columns = 3;\n        } else if (breakpoint === 'sm') {\n          this.columns = 2;\n        } else {\n          this.columns = 1;\n        }\n      },\n    },\n    mounted() {\n      this.scrollHandlerWrapper = this.scrollHandler.bind(this);\n      this.setColumnCountWrapper = this.setColumnCount.bind(this);\n      this.setColumnCount();\n\n      this.$refs.list.addEventListener('scroll', this.scrollHandlerWrapper);\n      window.addEventListener('resize', this.setColumnCountWrapper);\n    },\n    beforeDestroy() {\n      this.$refs.list.removeEventListener('scroll', this.scrollHandlerWrapper);\n      window.removeEventListener('resize', this.setColumnCountWrapper);\n    },\n    components: {\n      'issue-card-inner': gl.issueBoards.IssueCardInner,\n    },\n    template: `\n      <section\n        class=\"add-issues-list add-issues-list-columns\"\n        ref=\"list\">\n        <div\n          class=\"empty-state add-issues-empty-state-filter text-center\"\n          v-if=\"issuesCount > 0 && issues.length === 0\">\n          <div\n            class=\"svg-content\"\n            v-html=\"image\">\n          </div>\n          <div class=\"text-content\">\n            <h4>\n              There are no issues to show.\n            </h4>\n          </div>\n        </div>\n        <div\n          v-for=\"group in groupedIssues\"\n          class=\"add-issues-list-column\">\n          <div\n            v-for=\"issue in group\"\n            v-if=\"showIssue(issue)\"\n            class=\"card-parent\">\n            <div\n              class=\"card\"\n              :class=\"{ 'is-active': issue.selected }\"\n              @click=\"toggleIssue($event, issue)\">\n              <issue-card-inner\n                :issue=\"issue\"\n                :issue-link-base=\"issueLinkBase\"\n                :root-path=\"rootPath\">\n              </issue-card-inner>\n              <span\n                :aria-label=\"'Issue #' + issue.id + ' selected'\"\n                aria-checked=\"true\"\n                v-if=\"issue.selected\"\n                class=\"issue-card-selected text-center\">\n                <i class=\"fa fa-check\"></i>\n              </span>\n            </div>\n          </div>\n        </div>\n      </section>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/list.js","/* eslint-disable no-unused-vars, no-mixed-operators, comma-dangle */\n/* global DocumentTouch */\n\n((w) => {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.onStart = () => {\n    $('.has-tooltip').tooltip('hide')\n      .tooltip('disable');\n    document.body.classList.add('is-dragging');\n  };\n\n  gl.issueBoards.onEnd = () => {\n    $('.has-tooltip').tooltip('enable');\n    document.body.classList.remove('is-dragging');\n  };\n\n  gl.issueBoards.touchEnabled = ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch;\n\n  gl.issueBoards.getBoardSortableDefaultOptions = (obj) => {\n    const defaultSortOptions = {\n      animation: 200,\n      forceFallback: true,\n      fallbackClass: 'is-dragging',\n      fallbackOnBody: true,\n      ghostClass: 'is-ghost',\n      filter: '.board-delete, .btn',\n      delay: gl.issueBoards.touchEnabled ? 100 : 0,\n      scrollSensitivity: gl.issueBoards.touchEnabled ? 60 : 100,\n      scrollSpeed: 20,\n      onStart: gl.issueBoards.onStart,\n      onEnd: gl.issueBoards.onEnd\n    };\n\n    Object.keys(obj).forEach((key) => { defaultSortOptions[key] = obj[key]; });\n    return defaultSortOptions;\n  };\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./boards/mixins/sortable_default_options.js","/* global Vue */\n(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalFooterListsDropdown = Vue.extend({\n    data() {\n      return {\n        modal: ModalStore.store,\n        state: gl.issueBoards.BoardsStore.state,\n      };\n    },\n    computed: {\n      selected() {\n        return this.modal.selectedList || this.state.lists[0];\n      },\n    },\n    destroyed() {\n      this.modal.selectedList = null;\n    },\n    template: `\n      <div class=\"dropdown inline\">\n        <button\n          class=\"dropdown-menu-toggle\"\n          type=\"button\"\n          data-toggle=\"dropdown\"\n          aria-expanded=\"false\">\n          <span\n            class=\"dropdown-label-box\"\n            :style=\"{ backgroundColor: selected.label.color }\">\n          </span>\n          {{ selected.title }}\n          <i class=\"fa fa-chevron-down\"></i>\n        </button>\n        <div class=\"dropdown-menu dropdown-menu-selectable dropdown-menu-drop-up\">\n          <ul>\n            <li\n              v-for=\"list in state.lists\"\n              v-if=\"list.type == 'label'\">\n              <a\n                href=\"#\"\n                role=\"button\"\n                :class=\"{ 'is-active': list.id == selected.id }\"\n                @click.prevent=\"modal.selectedList = list\">\n                <span\n                  class=\"dropdown-label-box\"\n                  :style=\"{ backgroundColor: list.label.color }\">\n                </span>\n                {{ list.title }}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/lists_dropdown.js","/* eslint-disable no-unused-vars, space-before-function-paren, arrow-body-style, arrow-parens, comma-dangle, max-len */\n/* global Vue */\n/* global ListLabel */\n/* global ListMilestone */\n/* global ListUser */\n\nclass ListIssue {\n  constructor (obj) {\n    this.globalId = obj.id;\n    this.id = obj.iid;\n    this.title = obj.title;\n    this.confidential = obj.confidential;\n    this.dueDate = obj.due_date;\n    this.subscribed = obj.subscribed;\n    this.labels = [];\n    this.selected = false;\n    this.assignee = false;\n    this.position = obj.relative_position || Infinity;\n\n    if (obj.assignee) {\n      this.assignee = new ListUser(obj.assignee);\n    }\n\n    if (obj.milestone) {\n      this.milestone = new ListMilestone(obj.milestone);\n    }\n\n    obj.labels.forEach((label) => {\n      this.labels.push(new ListLabel(label));\n    });\n  }\n\n  addLabel (label) {\n    if (!this.findLabel(label)) {\n      this.labels.push(new ListLabel(label));\n    }\n  }\n\n  findLabel (findLabel) {\n    return this.labels.filter(label => label.title === findLabel.title)[0];\n  }\n\n  removeLabel (removeLabel) {\n    if (removeLabel) {\n      this.labels = this.labels.filter(label => removeLabel.title !== label.title);\n    }\n  }\n\n  removeLabels (labels) {\n    labels.forEach(this.removeLabel.bind(this));\n  }\n\n  getLists () {\n    return gl.issueBoards.BoardsStore.state.lists.filter(list => list.findIssue(this.id));\n  }\n\n  update (url) {\n    const data = {\n      issue: {\n        milestone_id: this.milestone ? this.milestone.id : null,\n        due_date: this.dueDate,\n        assignee_id: this.assignee ? this.assignee.id : null,\n        label_ids: this.labels.map((label) => label.id)\n      }\n    };\n\n    if (!data.issue.label_ids.length) {\n      data.issue.label_ids = [''];\n    }\n\n    return Vue.http.patch(url, data);\n  }\n}\n\nwindow.ListIssue = ListIssue;\n\n\n\n// WEBPACK FOOTER //\n// ./boards/models/issue.js","(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalMixins = {\n    methods: {\n      toggleModal(toggle) {\n        ModalStore.store.showAddIssuesModal = toggle;\n      },\n      changeTab(tab) {\n        ModalStore.store.activeTab = tab;\n      },\n    },\n  };\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/mixins/modal_mixins.js","/* eslint-disable comma-dangle, func-names, no-new, space-before-function-paren, one-var */\n\n(() => {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  const Store = gl.issueBoards.BoardsStore;\n\n  $(document).off('created.label').on('created.label', (e, label) => {\n    Store.new({\n      title: label.title,\n      position: Store.state.lists.length - 2,\n      list_type: 'label',\n      label: {\n        id: label.id,\n        title: label.title,\n        color: label.color\n      }\n    });\n  });\n\n  gl.issueBoards.newListDropdownInit = () => {\n    $('.js-new-board-list').each(function () {\n      const $this = $(this);\n      new gl.CreateLabelDropdown($this.closest('.dropdown').find('.dropdown-new-label'), $this.data('namespace-path'), $this.data('project-path'));\n\n      $this.glDropdown({\n        data(term, callback) {\n          $.get($this.attr('data-labels'))\n            .then((resp) => {\n              callback(resp);\n            });\n        },\n        renderRow (label) {\n          const active = Store.findList('title', label.title);\n          const $li = $('<li />');\n          const $a = $('<a />', {\n            class: (active ? `is-active js-board-list-${active.id}` : ''),\n            text: label.title,\n            href: '#'\n          });\n          const $labelColor = $('<span />', {\n            class: 'dropdown-label-box',\n            style: `background-color: ${label.color}`\n          });\n\n          return $li.append($a.prepend($labelColor));\n        },\n        search: {\n          fields: ['title']\n        },\n        filterable: true,\n        selectable: true,\n        multiSelect: true,\n        clicked (label, $el, e) {\n          e.preventDefault();\n\n          if (!Store.findList('title', label.title)) {\n            Store.new({\n              title: label.title,\n              position: Store.state.lists.length - 2,\n              list_type: 'label',\n              label: {\n                id: label.id,\n                title: label.title,\n                color: label.color\n              }\n            });\n\n            Store.state.lists = _.sortBy(Store.state.lists, 'position');\n          }\n        }\n      });\n    });\n  };\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/new_list_dropdown.js","/* global Vue */\n(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalEmptyState = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    data() {\n      return ModalStore.store;\n    },\n    props: {\n      image: {\n        type: String,\n        required: true,\n      },\n      newIssuePath: {\n        type: String,\n        required: true,\n      },\n    },\n    computed: {\n      contents() {\n        const obj = {\n          title: 'You haven\\'t added any issues to your project yet',\n          content: `\n            An issue can be a bug, a todo or a feature request that needs to be\n            discussed in a project. Besides, issues are searchable and filterable.\n          `,\n        };\n\n        if (this.activeTab === 'selected') {\n          obj.title = 'You haven\\'t selected any issues yet';\n          obj.content = `\n            Go back to <strong>All issues</strong> and select some issues\n            to add to your board.\n          `;\n        }\n\n        return obj;\n      },\n    },\n    template: `\n      <section class=\"empty-state\">\n        <div class=\"row\">\n          <div class=\"col-xs-12 col-sm-6 col-sm-push-6\">\n            <aside class=\"svg-content\" v-html=\"image\"></aside>\n          </div>\n          <div class=\"col-xs-12 col-sm-6 col-sm-pull-6\">\n            <div class=\"text-content\">\n              <h4>{{ contents.title }}</h4>\n              <p v-html=\"contents.content\"></p>\n              <a\n                :href=\"newIssuePath\"\n                class=\"btn btn-success btn-inverted\"\n                v-if=\"activeTab === 'all'\">\n                New issue\n              </a>\n              <button\n                type=\"button\"\n                class=\"btn btn-default\"\n                @click=\"changeTab('all')\"\n                v-if=\"activeTab === 'selected'\">\n                All issues\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/empty_state.js","/* eslint-disable comma-dangle, space-before-function-paren, one-var, no-shadow, dot-notation, max-len */\n/* global Cookies */\n/* global List */\n\n(() => {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardsStore = {\n    disabled: false,\n    state: {},\n    detail: {\n      issue: {}\n    },\n    moving: {\n      issue: {},\n      list: {}\n    },\n    create () {\n      this.state.lists = [];\n      this.state.filters = {\n        author_id: gl.utils.getParameterValues('author_id')[0],\n        assignee_id: gl.utils.getParameterValues('assignee_id')[0],\n        milestone_title: gl.utils.getParameterValues('milestone_title')[0],\n        label_name: gl.utils.getParameterValues('label_name[]'),\n        search: ''\n      };\n    },\n    addList (listObj) {\n      const list = new List(listObj);\n      this.state.lists.push(list);\n\n      return list;\n    },\n    new (listObj) {\n      const list = this.addList(listObj);\n\n      list\n        .save()\n        .then(() => {\n          this.state.lists = _.sortBy(this.state.lists, 'position');\n        });\n      this.removeBlankState();\n    },\n    updateNewListDropdown (listId) {\n      $(`.js-board-list-${listId}`).removeClass('is-active');\n    },\n    shouldAddBlankState () {\n      // Decide whether to add the blank state\n      return !(this.state.lists.filter(list => list.type !== 'done')[0]);\n    },\n    addBlankState () {\n      if (!this.shouldAddBlankState() || this.welcomeIsHidden() || this.disabled) return;\n\n      this.addList({\n        id: 'blank',\n        list_type: 'blank',\n        title: 'Welcome to your Issue Board!',\n        position: 0\n      });\n\n      this.state.lists = _.sortBy(this.state.lists, 'position');\n    },\n    removeBlankState () {\n      this.removeList('blank');\n\n      Cookies.set('issue_board_welcome_hidden', 'true', {\n        expires: 365 * 10,\n        path: ''\n      });\n    },\n    welcomeIsHidden () {\n      return Cookies.get('issue_board_welcome_hidden') === 'true';\n    },\n    removeList (id, type = 'blank') {\n      const list = this.findList('id', id, type);\n\n      if (!list) return;\n\n      this.state.lists = this.state.lists.filter(list => list.id !== id);\n    },\n    moveList (listFrom, orderLists) {\n      orderLists.forEach((id, i) => {\n        const list = this.findList('id', parseInt(id, 10));\n\n        list.position = i;\n      });\n      listFrom.update();\n    },\n    moveIssueToList (listFrom, listTo, issue, newIndex) {\n      const issueTo = listTo.findIssue(issue.id);\n      const issueLists = issue.getLists();\n      const listLabels = issueLists.map(listIssue => listIssue.label);\n\n      if (!issueTo) {\n        // Add to new lists issues if it doesn't already exist\n        listTo.addIssue(issue, listFrom, newIndex);\n      } else {\n        listTo.updateIssueLabel(issue, listFrom);\n        issueTo.removeLabel(listFrom.label);\n      }\n\n      if (listTo.type === 'done') {\n        issueLists.forEach((list) => {\n          list.removeIssue(issue);\n        });\n        issue.removeLabels(listLabels);\n      } else {\n        listFrom.removeIssue(issue);\n      }\n    },\n    moveIssueInList (list, issue, oldIndex, newIndex, idArray) {\n      const beforeId = parseInt(idArray[newIndex - 1], 10) || null;\n      const afterId = parseInt(idArray[newIndex + 1], 10) || null;\n\n      list.moveIssue(issue, oldIndex, newIndex, beforeId, afterId);\n    },\n    findList (key, val, type = 'label') {\n      return this.state.lists.filter((list) => {\n        const byType = type ? list['type'] === type : true;\n\n        return list[key] === val && byType;\n      })[0];\n    },\n    updateFiltersUrl () {\n      history.pushState(null, null, `?${$.param(this.state.filters)}`);\n    }\n  };\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/stores/boards_store.js","/* eslint-disable no-new */\n/* global Vue */\n/* global LabelsSelect */\nmodule.exports = Vue.extend({\n  name: 'filter-label',\n  props: {\n    labelPath: {\n      type: String,\n      required: true,\n    },\n  },\n  mounted() {\n    new LabelsSelect(this.$refs.dropdown);\n  },\n  template: `\n    <div class=\"dropdown\">\n      <button\n        class=\"dropdown-menu-toggle js-label-select js-multiselect js-extra-options\"\n        type=\"button\"\n        data-toggle=\"dropdown\"\n        data-show-any=\"true\"\n        data-show-no=\"true\"\n        :data-labels=\"labelPath\"\n        ref=\"dropdown\">\n        <span class=\"dropdown-toggle-text\">\n          Label\n        </span>\n        <i class=\"fa fa-chevron-down\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-select dropdown-menu-paging dropdown-menu-labels dropdown-menu-selectable\">\n        <div class=\"dropdown-title\">\n          Filter by label\n          <button\n            class=\"dropdown-title-button dropdown-menu-close\"\n            aria-label=\"Close\"\n            type=\"button\">\n            <i class=\"fa fa-times dropdown-menu-close-icon\"></i>\n          </button>\n        </div>\n        <div class=\"dropdown-input\">\n          <input\n            type=\"search\"\n            class=\"dropdown-input-field\"\n            placeholder=\"Search\"\n            autocomplete=\"off\" />\n          <i class=\"fa fa-search dropdown-input-search\"></i>\n          <i role=\"button\" class=\"fa fa-times dropdown-input-clear js-dropdown-input-clear\"></i>\n        </div>\n        <div class=\"dropdown-content\"></div>\n        <div class=\"dropdown-loading\"><i class=\"fa fa-spinner fa-spin\"></i></div>\n      </div>\n    </div>\n  `,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/filters/label.js","/* eslint-disable no-new */\n/* global Vue */\n/* global Flash */\n\nrequire('./lists_dropdown');\n\n(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.ModalFooter = Vue.extend({\n    mixins: [gl.issueBoards.ModalMixins],\n    data() {\n      return {\n        modal: ModalStore.store,\n        state: gl.issueBoards.BoardsStore.state,\n      };\n    },\n    computed: {\n      submitDisabled() {\n        return !ModalStore.selectedCount();\n      },\n      submitText() {\n        const count = ModalStore.selectedCount();\n\n        return `Add ${count > 0 ? count : ''} ${gl.text.pluralize('issue', count)}`;\n      },\n    },\n    methods: {\n      addIssues() {\n        const list = this.modal.selectedList || this.state.lists[0];\n        const selectedIssues = ModalStore.getSelectedIssues();\n        const issueIds = selectedIssues.map(issue => issue.globalId);\n\n        // Post the data to the backend\n        gl.boardService.bulkUpdate(issueIds, {\n          add_label_ids: [list.label.id],\n        }).catch(() => {\n          new Flash('Failed to update issues, please try again.', 'alert');\n\n          selectedIssues.forEach((issue) => {\n            list.removeIssue(issue);\n            list.issuesSize -= 1;\n          });\n        });\n\n        // Add the issues on the frontend\n        selectedIssues.forEach((issue) => {\n          list.addIssue(issue);\n          list.issuesSize += 1;\n        });\n\n        this.toggleModal(false);\n      },\n    },\n    components: {\n      'lists-dropdown': gl.issueBoards.ModalFooterListsDropdown,\n    },\n    template: `\n      <footer\n        class=\"form-actions add-issues-footer\">\n        <div class=\"pull-left\">\n          <button\n            class=\"btn btn-success\"\n            type=\"button\"\n            :disabled=\"submitDisabled\"\n            @click=\"addIssues\">\n            {{ submitText }}\n          </button>\n          <span class=\"inline add-issues-footer-to-list\">\n            to list\n          </span>\n          <lists-dropdown></lists-dropdown>\n        </div>\n        <button\n          class=\"btn btn-default pull-right\"\n          type=\"button\"\n          @click=\"toggleModal(false)\">\n          Cancel\n        </button>\n      </footer>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/footer.js","/* global Vue */\n/* global ListIssue */\n\nrequire('./header');\nrequire('./list');\nrequire('./footer');\nrequire('./empty_state');\n\n(() => {\n  const ModalStore = gl.issueBoards.ModalStore;\n\n  gl.issueBoards.IssuesModal = Vue.extend({\n    props: {\n      blankStateImage: {\n        type: String,\n        required: true,\n      },\n      newIssuePath: {\n        type: String,\n        required: true,\n      },\n      issueLinkBase: {\n        type: String,\n        required: true,\n      },\n      rootPath: {\n        type: String,\n        required: true,\n      },\n      projectId: {\n        type: Number,\n        required: true,\n      },\n      milestonePath: {\n        type: String,\n        required: true,\n      },\n      labelPath: {\n        type: String,\n        required: true,\n      },\n    },\n    data() {\n      return ModalStore.store;\n    },\n    watch: {\n      page() {\n        this.loadIssues();\n      },\n      searchTerm() {\n        this.searchOperation();\n      },\n      showAddIssuesModal() {\n        if (this.showAddIssuesModal && !this.issues.length) {\n          this.loading = true;\n\n          this.loadIssues()\n            .then(() => {\n              this.loading = false;\n            });\n        } else if (!this.showAddIssuesModal) {\n          this.issues = [];\n          this.selectedIssues = [];\n          this.issuesCount = false;\n        }\n      },\n      filter: {\n        handler() {\n          this.page = 1;\n          this.loadIssues(true);\n        },\n        deep: true,\n      },\n    },\n    methods: {\n      searchOperation: _.debounce(function searchOperationDebounce() {\n        this.loadIssues(true);\n      }, 500),\n      loadIssues(clearIssues = false) {\n        if (!this.showAddIssuesModal) return false;\n\n        const queryData = Object.assign({}, this.filter, {\n          search: this.searchTerm,\n          page: this.page,\n          per: this.perPage,\n        });\n\n        return gl.boardService.getBacklog(queryData).then((res) => {\n          const data = res.json();\n\n          if (clearIssues) {\n            this.issues = [];\n          }\n\n          data.issues.forEach((issueObj) => {\n            const issue = new ListIssue(issueObj);\n            const foundSelectedIssue = ModalStore.findSelectedIssue(issue);\n            issue.selected = !!foundSelectedIssue;\n\n            this.issues.push(issue);\n          });\n\n          this.loadingNewPage = false;\n\n          if (!this.issuesCount) {\n            this.issuesCount = data.size;\n          }\n        });\n      },\n    },\n    computed: {\n      showList() {\n        if (this.activeTab === 'selected') {\n          return this.selectedIssues.length > 0;\n        }\n\n        return this.issuesCount > 0;\n      },\n      showEmptyState() {\n        if (!this.loading && this.issuesCount === 0) {\n          return true;\n        }\n\n        return this.activeTab === 'selected' && this.selectedIssues.length === 0;\n      },\n    },\n    created() {\n      this.page = 1;\n    },\n    components: {\n      'modal-header': gl.issueBoards.ModalHeader,\n      'modal-list': gl.issueBoards.ModalList,\n      'modal-footer': gl.issueBoards.ModalFooter,\n      'empty-state': gl.issueBoards.ModalEmptyState,\n    },\n    template: `\n      <div\n        class=\"add-issues-modal\"\n        v-if=\"showAddIssuesModal\">\n        <div class=\"add-issues-container\">\n          <modal-header\n            :project-id=\"projectId\"\n            :milestone-path=\"milestonePath\"\n            :label-path=\"labelPath\">\n          </modal-header>\n          <modal-list\n            :image=\"blankStateImage\"\n            :issue-link-base=\"issueLinkBase\"\n            :root-path=\"rootPath\"\n            v-if=\"!loading && showList\"></modal-list>\n          <empty-state\n            v-if=\"showEmptyState\"\n            :image=\"blankStateImage\"\n            :new-issue-path=\"newIssuePath\"></empty-state>\n          <section\n            class=\"add-issues-list text-center\"\n            v-if=\"loading\">\n            <div class=\"add-issues-list-loading\">\n              <i class=\"fa fa-spinner fa-spin\"></i>\n            </div>\n          </section>\n          <modal-footer></modal-footer>\n        </div>\n      </div>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/index.js","/* global Vue */\n(() => {\n  const Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.IssueCardInner = Vue.extend({\n    props: {\n      issue: {\n        type: Object,\n        required: true,\n      },\n      issueLinkBase: {\n        type: String,\n        required: true,\n      },\n      list: {\n        type: Object,\n        required: false,\n      },\n      rootPath: {\n        type: String,\n        required: true,\n      },\n    },\n    methods: {\n      showLabel(label) {\n        if (!this.list) return true;\n\n        return !this.list.label || label.id !== this.list.label.id;\n      },\n      filterByLabel(label, e) {\n        let labelToggleText = label.title;\n        const labelIndex = Store.state.filters.label_name.indexOf(label.title);\n        $(e.currentTarget).tooltip('hide');\n\n        if (labelIndex === -1) {\n          Store.state.filters.label_name.push(label.title);\n          $('.labels-filter').prepend(`<input type=\"hidden\" name=\"label_name[]\" value=\"${label.title}\" />`);\n        } else {\n          Store.state.filters.label_name.splice(labelIndex, 1);\n          labelToggleText = Store.state.filters.label_name[0];\n          $(`.labels-filter input[name=\"label_name[]\"][value=\"${label.title}\"]`).remove();\n        }\n\n        const selectedLabels = Store.state.filters.label_name;\n        if (selectedLabels.length === 0) {\n          labelToggleText = 'Label';\n        } else if (selectedLabels.length > 1) {\n          labelToggleText = `${selectedLabels[0]} + ${selectedLabels.length - 1} more`;\n        }\n\n        $('.labels-filter .dropdown-toggle-text').text(labelToggleText);\n\n        Store.updateFiltersUrl();\n      },\n      labelStyle(label) {\n        return {\n          backgroundColor: label.color,\n          color: label.textColor,\n        };\n      },\n    },\n    template: `\n      <div>\n        <h4 class=\"card-title\">\n          <i\n            class=\"fa fa-eye-slash confidential-icon\"\n            v-if=\"issue.confidential\"></i>\n          <a\n            :href=\"issueLinkBase + '/' + issue.id\"\n            :title=\"issue.title\">\n            {{ issue.title }}\n          </a>\n        </h4>\n        <div class=\"card-footer\">\n          <span\n            class=\"card-number\"\n            v-if=\"issue.id\">\n            #{{ issue.id }}\n          </span>\n          <a\n            class=\"card-assignee has-tooltip\"\n            :href=\"rootPath + issue.assignee.username\"\n            :title=\"'Assigned to ' + issue.assignee.name\"\n            v-if=\"issue.assignee\"\n            data-container=\"body\">\n            <img\n              class=\"avatar avatar-inline s20\"\n              :src=\"issue.assignee.avatar\"\n              width=\"20\"\n              height=\"20\"\n              :alt=\"'Avatar for ' + issue.assignee.name\" />\n          </a>\n          <button\n            class=\"label color-label has-tooltip\"\n            v-for=\"label in issue.labels\"\n            type=\"button\"\n            v-if=\"showLabel(label)\"\n            @click=\"filterByLabel(label, $event)\"\n            :style=\"labelStyle(label)\"\n            :title=\"label.description\"\n            data-container=\"body\">\n            {{ label.title }}\n          </button>\n        </div>\n      </div>\n    `,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/issue_card_inner.js","/* eslint-disable no-unused-vars */\n\nclass ListUser {\n  constructor(user) {\n    this.id = user.id;\n    this.name = user.name;\n    this.username = user.username;\n    this.avatar = user.avatar_url;\n  }\n}\n\nwindow.ListUser = ListUser;\n\n\n\n// WEBPACK FOOTER //\n// ./boards/models/user.js","(() => {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  class ModalStore {\n    constructor() {\n      this.store = {\n        columns: 3,\n        issues: [],\n        issuesCount: false,\n        selectedIssues: [],\n        showAddIssuesModal: false,\n        activeTab: 'all',\n        selectedList: null,\n        searchTerm: '',\n        loading: false,\n        loadingNewPage: false,\n        page: 1,\n        perPage: 50,\n      };\n\n      this.setDefaultFilter();\n    }\n\n    setDefaultFilter() {\n      this.store.filter = {\n        author_id: '',\n        assignee_id: '',\n        milestone_title: '',\n        label_name: [],\n      };\n    }\n\n    selectedCount() {\n      return this.getSelectedIssues().length;\n    }\n\n    toggleIssue(issueObj) {\n      const issue = issueObj;\n      const selected = issue.selected;\n\n      issue.selected = !selected;\n\n      if (!selected) {\n        this.addSelectedIssue(issue);\n      } else {\n        this.removeSelectedIssue(issue);\n      }\n    }\n\n    toggleAll() {\n      const select = this.selectedCount() !== this.store.issues.length;\n\n      this.store.issues.forEach((issue) => {\n        const issueUpdate = issue;\n\n        if (issueUpdate.selected !== select) {\n          issueUpdate.selected = select;\n\n          if (select) {\n            this.addSelectedIssue(issue);\n          } else {\n            this.removeSelectedIssue(issue);\n          }\n        }\n      });\n    }\n\n    getSelectedIssues() {\n      return this.store.selectedIssues.filter(issue => issue.selected);\n    }\n\n    addSelectedIssue(issue) {\n      const index = this.selectedIssueIndex(issue);\n\n      if (index === -1) {\n        this.store.selectedIssues.push(issue);\n      }\n    }\n\n    removeSelectedIssue(issue, forcePurge = false) {\n      if (this.store.activeTab === 'all' || forcePurge) {\n        this.store.selectedIssues = this.store.selectedIssues\n          .filter(fIssue => fIssue.id !== issue.id);\n      }\n    }\n\n    purgeUnselectedIssues() {\n      this.store.selectedIssues.forEach((issue) => {\n        if (!issue.selected) {\n          this.removeSelectedIssue(issue, true);\n        }\n      });\n    }\n\n    selectedIssueIndex(issue) {\n      return this.store.selectedIssues.indexOf(issue);\n    }\n\n    findSelectedIssue(issue) {\n      return this.store.selectedIssues\n        .filter(filteredIssue => filteredIssue.id === issue.id)[0];\n    }\n  }\n\n  gl.issueBoards.ModalStore = new ModalStore();\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/stores/modal_store.js","/* global Vue */\n/* global dateFormat */\n\nVue.filter('due-date', (value) => {\n  const date = new Date(value);\n  return dateFormat(date, 'mmm d, yyyy', true);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./boards/filters/due_date_filters.js","/* global Vue */\nrequire('./issue_card_inner');\n\nconst Store = gl.issueBoards.BoardsStore;\n\nexport default {\n  name: 'BoardsIssueCard',\n  template: `\n    <li class=\"card\"\n      :class=\"{ 'user-can-drag': !disabled && issue.id, 'is-disabled': disabled || !issue.id, 'is-active': issueDetailVisible }\"\n      :index=\"index\"\n      :data-issue-id=\"issue.id\"\n      @mousedown=\"mouseDown\"\n      @mousemove=\"mouseMove\"\n      @mouseup=\"showIssue($event)\">\n      <issue-card-inner\n        :list=\"list\"\n        :issue=\"issue\"\n        :issue-link-base=\"issueLinkBase\"\n        :root-path=\"rootPath\" />\n    </li>\n  `,\n  components: {\n    'issue-card-inner': gl.issueBoards.IssueCardInner,\n  },\n  props: {\n    list: Object,\n    issue: Object,\n    issueLinkBase: String,\n    disabled: Boolean,\n    index: Number,\n    rootPath: String,\n  },\n  data() {\n    return {\n      showDetail: false,\n      detailIssue: Store.detail,\n    };\n  },\n  computed: {\n    issueDetailVisible() {\n      return this.detailIssue.issue && this.detailIssue.issue.id === this.issue.id;\n    },\n  },\n  methods: {\n    mouseDown() {\n      this.showDetail = true;\n    },\n    mouseMove() {\n      this.showDetail = false;\n    },\n    showIssue(e) {\n      const targetTagName = e.target.tagName.toLowerCase();\n\n      if (targetTagName === 'a' || targetTagName === 'button') return;\n\n      if (this.showDetail) {\n        this.showDetail = false;\n\n        if (Store.detail.issue && Store.detail.issue.id === this.issue.id) {\n          Store.detail.issue = {};\n        } else {\n          Store.detail.issue = this.issue;\n          Store.detail.list = this.list;\n        }\n      }\n    },\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/board_card.js","/* global Vue */\nconst userFilter = require('./filters/user');\nconst milestoneFilter = require('./filters/milestone');\nconst labelFilter = require('./filters/label');\n\nmodule.exports = Vue.extend({\n  name: 'modal-filters',\n  props: {\n    projectId: {\n      type: Number,\n      required: true,\n    },\n    milestonePath: {\n      type: String,\n      required: true,\n    },\n    labelPath: {\n      type: String,\n      required: true,\n    },\n  },\n  destroyed() {\n    gl.issueBoards.ModalStore.setDefaultFilter();\n  },\n  components: {\n    userFilter,\n    milestoneFilter,\n    labelFilter,\n  },\n  template: `\n    <div class=\"modal-filters\">\n      <user-filter\n        dropdown-class-name=\"dropdown-menu-author\"\n        toggle-class-name=\"js-user-search js-author-search\"\n        toggle-label=\"Author\"\n        field-name=\"author_id\"\n        :project-id=\"projectId\"></user-filter>\n      <user-filter\n        dropdown-class-name=\"dropdown-menu-author\"\n        toggle-class-name=\"js-assignee-search\"\n        toggle-label=\"Assignee\"\n        field-name=\"assignee_id\"\n        :null-user=\"true\"\n        :project-id=\"projectId\"></user-filter>\n      <milestone-filter :milestone-path=\"milestonePath\"></milestone-filter>\n      <label-filter :label-path=\"labelPath\"></label-filter>\n    </div>\n  `,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/filters.js","/* eslint-disable space-before-function-paren, comma-dangle */\n/* global Vue */\n/* global ListLabel */\n\n(() => {\n  const Store = gl.issueBoards.BoardsStore;\n\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardBlankState = Vue.extend({\n    data () {\n      return {\n        predefinedLabels: [\n          new ListLabel({ title: 'To Do', color: '#F0AD4E' }),\n          new ListLabel({ title: 'Doing', color: '#5CB85C' })\n        ]\n      };\n    },\n    methods: {\n      addDefaultLists () {\n        this.clearBlankState();\n\n        this.predefinedLabels.forEach((label, i) => {\n          Store.addList({\n            title: label.title,\n            position: i,\n            list_type: 'label',\n            label: {\n              title: label.title,\n              color: label.color\n            }\n          });\n        });\n\n        Store.state.lists = _.sortBy(Store.state.lists, 'position');\n\n        // Save the labels\n        gl.boardService.generateDefaultLists()\n          .then((resp) => {\n            resp.json().forEach((listObj) => {\n              const list = Store.findList('title', listObj.title);\n\n              list.id = listObj.id;\n              list.label.id = listObj.label.id;\n              list.getIssues();\n            });\n          });\n      },\n      clearBlankState: Store.removeBlankState.bind(Store)\n    }\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/board_blank_state.js","/* eslint-disable comma-dangle, space-before-function-paren, no-alert */\n/* global Vue */\n\n(() => {\n  window.gl = window.gl || {};\n  window.gl.issueBoards = window.gl.issueBoards || {};\n\n  gl.issueBoards.BoardDelete = Vue.extend({\n    props: {\n      list: Object\n    },\n    methods: {\n      deleteBoard () {\n        $(this.$el).tooltip('hide');\n\n        if (confirm('Are you sure you want to delete this list?')) {\n          this.list.destroy();\n        }\n      }\n    }\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/board_delete.js","/* eslint-disable no-new */\n/* global Vue */\n/* global UsersSelect */\nmodule.exports = Vue.extend({\n  name: 'filter-user',\n  props: {\n    toggleClassName: {\n      type: String,\n      required: true,\n    },\n    dropdownClassName: {\n      type: String,\n      required: false,\n      default: '',\n    },\n    toggleLabel: {\n      type: String,\n      required: true,\n    },\n    fieldName: {\n      type: String,\n      required: true,\n    },\n    nullUser: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    projectId: {\n      type: Number,\n      required: true,\n    },\n  },\n  mounted() {\n    new UsersSelect(null, this.$refs.dropdown);\n  },\n  computed: {\n    currentUsername() {\n      return gon.current_username;\n    },\n    dropdownTitle() {\n      return `Filter by ${this.toggleLabel.toLowerCase()}`;\n    },\n    inputPlaceholder() {\n      return `Search ${this.toggleLabel.toLowerCase()}`;\n    },\n  },\n  template: `\n    <div class=\"dropdown\">\n      <button\n        class=\"dropdown-menu-toggle js-user-search\"\n        :class=\"toggleClassName\"\n        type=\"button\"\n        data-toggle=\"dropdown\"\n        data-current-user=\"true\"\n        :data-any-user=\"'Any ' + toggleLabel\"\n        :data-null-user=\"nullUser\"\n        :data-field-name=\"fieldName\"\n        :data-project-id=\"projectId\"\n        :data-first-user=\"currentUsername\"\n        ref=\"dropdown\">\n        <span class=\"dropdown-toggle-text\">\n          {{ toggleLabel }}\n        </span>\n        <i class=\"fa fa-chevron-down\"></i>\n      </button>\n      <div\n        class=\"dropdown-menu dropdown-select dropdown-menu-user dropdown-menu-selectable\"\n        :class=\"dropdownClassName\">\n        <div class=\"dropdown-title\">\n          {{ dropdownTitle }}\n          <button\n            class=\"dropdown-title-button dropdown-menu-close\"\n            aria-label=\"Close\"\n            type=\"button\">\n            <i class=\"fa fa-times dropdown-menu-close-icon\"></i>\n          </button>\n        </div>\n        <div class=\"dropdown-input\">\n          <input\n            type=\"search\"\n            class=\"dropdown-input-field\"\n            autocomplete=\"off\"\n            :placeholder=\"inputPlaceholder\" />\n          <i class=\"fa fa-search dropdown-input-search\"></i>\n          <i\n            role=\"button\"\n            class=\"fa fa-times dropdown-input-clear js-dropdown-input-clear\">\n          </i>\n        </div>\n        <div class=\"dropdown-content\"></div>\n        <div class=\"dropdown-loading\"><i class=\"fa fa-spinner fa-spin\"></i></div>\n      </div>\n    </div>\n  `,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./boards/components/modal/filters/user.js"],"sourceRoot":""}